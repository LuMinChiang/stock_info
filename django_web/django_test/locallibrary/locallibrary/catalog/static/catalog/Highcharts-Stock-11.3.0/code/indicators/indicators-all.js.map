{"version":3,"sources":["<anon>"],"sourcesContent":["/**\n * @license Highstock JS v11.3.0 (2024-01-10)\n *\n * All technical indicators for Highcharts Stock\n *\n * (c) 2010-2024 Pawel Fus\n *\n * License: www.highcharts.com/license\n */\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/indicators/indicators-all', ['highcharts', 'highcharts/modules/stock'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    'use strict';\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n\n            if (typeof CustomEvent === 'function') {\n                window.dispatchEvent(new CustomEvent(\n                    'HighchartsModuleLoaded',\n                    { detail: { path: path, module: obj[path] } }\n                ));\n            }\n        }\n    }\n    _registerModule(_modules, 'Stock/Indicators/SMA/SMAIndicator.js', [_modules['Core/Chart/Chart.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (Chart, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { line: LineSeries } = SeriesRegistry.seriesTypes;\n        const { addEvent, fireEvent, error, extend, isArray, merge, pick, splat } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         */\n        class SMAIndicator extends LineSeries {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * @private\n             */\n            destroy() {\n                this.dataEventsToUnbind.forEach(function (unbinder) {\n                    unbinder();\n                });\n                super.destroy.apply(this, arguments);\n            }\n            /**\n             * @private\n             */\n            getName() {\n                const params = [];\n                let name = this.name;\n                if (!name) {\n                    (this.nameComponents || []).forEach(function (component, index) {\n                        params.push(this.options.params[component] +\n                            pick(this.nameSuffixes[index], ''));\n                    }, this);\n                    name = (this.nameBase || this.type.toUpperCase()) +\n                        (this.nameComponents ? ' (' + params.join(', ') + ')' : '');\n                }\n                return name;\n            }\n            /**\n             * @private\n             */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal.length, SMA = [], xData = [], yData = [];\n                let i, index = -1, range = 0, SMAPoint, sum = 0;\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                while (range < period - 1) {\n                    sum += index < 0 ? yVal[range] : yVal[range][index];\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    sum += index < 0 ? yVal[i] : yVal[i][index];\n                    SMAPoint = [xVal[i], sum / period];\n                    SMA.push(SMAPoint);\n                    xData.push(SMAPoint[0]);\n                    yData.push(SMAPoint[1]);\n                    sum -= (index < 0 ?\n                        yVal[i - range] :\n                        yVal[i - range][index]);\n                }\n                return {\n                    values: SMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            /**\n             * @private\n             */\n            init(chart, options) {\n                const indicator = this;\n                super.init.call(indicator, chart, options);\n                // Only after series are linked indicator can be processed.\n                const linkedSeriesUnbiner = addEvent(Chart, 'afterLinkSeries', function ({ isUpdating }) {\n                    // #18643 indicator shouldn't recalculate\n                    // values while series updating.\n                    if (isUpdating) {\n                        return;\n                    }\n                    const hasEvents = !!indicator.dataEventsToUnbind.length;\n                    if (indicator.linkedParent) {\n                        if (!hasEvents) {\n                            // No matter which indicator, always recalculate after\n                            // updating the data.\n                            indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent, 'updatedData', function () {\n                                indicator.recalculateValues();\n                            }));\n                            // Some indicators (like VBP) requires an additional\n                            // event (afterSetExtremes) to properly show the data.\n                            if (indicator.calculateOn.xAxis) {\n                                indicator.dataEventsToUnbind.push(addEvent(indicator.linkedParent.xAxis, indicator.calculateOn.xAxis, function () {\n                                    indicator.recalculateValues();\n                                }));\n                            }\n                        }\n                        // Most indicators are being calculated on chart's init.\n                        if (indicator.calculateOn.chart === 'init') {\n                            if (!indicator.processedYData) {\n                                indicator.recalculateValues();\n                            }\n                        }\n                        else if (!hasEvents) {\n                            // Some indicators (like VBP) has to recalculate their\n                            // values after other chart's events (render).\n                            const unbinder = addEvent(indicator.chart, indicator.calculateOn.chart, function () {\n                                indicator.recalculateValues();\n                                // Call this just once.\n                                unbinder();\n                            });\n                        }\n                    }\n                    else {\n                        return error('Series ' +\n                            indicator.options.linkedTo +\n                            ' not found! Check `linkedTo`.', false, chart);\n                    }\n                }, {\n                    order: 0\n                });\n                // Make sure we find series which is a base for an indicator\n                // chart.linkSeries();\n                indicator.dataEventsToUnbind = [];\n                indicator.eventsToUnbind.push(linkedSeriesUnbiner);\n            }\n            /**\n             * @private\n             */\n            recalculateValues() {\n                const croppedDataValues = [], indicator = this, oldData = indicator.points || [], oldDataLength = (indicator.xData || []).length, emptySet = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                let overwriteData = true, oldFirstPointIndex, oldLastPointIndex, croppedData, min, max, i;\n                // Updating an indicator with redraw=false may destroy data.\n                // If there will be a following update for the parent series,\n                // we will try to access Series object without any properties\n                // (except for prototyped ones). This is what happens\n                // for example when using Axis.setDataGrouping(). See #16670\n                const processedData = indicator.linkedParent.options &&\n                    indicator.linkedParent.yData && // #18176, #18177 indicators should\n                    indicator.linkedParent.yData.length ? // work with empty dataset\n                    (indicator.getValues(indicator.linkedParent, indicator.options.params) || emptySet) : emptySet;\n                // We need to update points to reflect changes in all,\n                // x and y's, values. However, do it only for non-grouped\n                // data - grouping does it for us (#8572)\n                if (oldDataLength &&\n                    !indicator.hasGroupedData &&\n                    indicator.visible &&\n                    indicator.points) {\n                    // When data is cropped update only avaliable points (#9493)\n                    if (indicator.cropped) {\n                        if (indicator.xAxis) {\n                            min = indicator.xAxis.min;\n                            max = indicator.xAxis.max;\n                        }\n                        croppedData = indicator.cropData(processedData.xData, processedData.yData, min, max);\n                        for (i = 0; i < croppedData.xData.length; i++) {\n                            // (#10774)\n                            croppedDataValues.push([\n                                croppedData.xData[i]\n                            ].concat(splat(croppedData.yData[i])));\n                        }\n                        oldFirstPointIndex = processedData.xData.indexOf(indicator.xData[0]);\n                        oldLastPointIndex = processedData.xData.indexOf(indicator.xData[indicator.xData.length - 1]);\n                        // Check if indicator points should be shifted (#8572)\n                        if (oldFirstPointIndex === -1 &&\n                            oldLastPointIndex === processedData.xData.length - 2) {\n                            if (croppedDataValues[0][0] === oldData[0].x) {\n                                croppedDataValues.shift();\n                            }\n                        }\n                        indicator.updateData(croppedDataValues);\n                    }\n                    else if (indicator.updateAllPoints || // #18710\n                        // Omit addPoint() and removePoint() cases\n                        processedData.xData.length !== oldDataLength - 1 &&\n                            processedData.xData.length !== oldDataLength + 1) {\n                        overwriteData = false;\n                        indicator.updateData(processedData.values);\n                    }\n                }\n                if (overwriteData) {\n                    indicator.xData = processedData.xData;\n                    indicator.yData = processedData.yData;\n                    indicator.options.data = processedData.values;\n                }\n                // Removal of processedXData property is required because on\n                // first translate processedXData array is empty\n                if (indicator.calculateOn.xAxis && indicator.processedXData) {\n                    delete indicator.processedXData;\n                    indicator.isDirty = true;\n                    indicator.redraw();\n                }\n                indicator.isDirtyData = !!indicator.linkedSeries.length;\n                fireEvent(indicator, 'updatedData'); // #18689\n            }\n            /**\n             * @private\n             */\n            processData() {\n                const series = this, compareToMain = series.options.compareToMain, linkedParent = series.linkedParent;\n                super.processData.apply(series, arguments);\n                if (series.dataModify &&\n                    linkedParent &&\n                    linkedParent.dataModify &&\n                    linkedParent.dataModify.compareValue &&\n                    compareToMain) {\n                    series.dataModify.compareValue =\n                        linkedParent.dataModify.compareValue;\n                }\n                return;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * The parameter allows setting line series type and use OHLC indicators.\n         * Data in OHLC format is required.\n         *\n         * @sample {highstock} stock/indicators/use-ohlc-data\n         *         Use OHLC data format to plot line chart\n         *\n         * @type      {boolean}\n         * @product   highstock\n         * @apioption plotOptions.line.useOhlcData\n         */\n        /**\n         * Simple moving average indicator (SMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/sma\n         *         Simple moving average indicator\n         *\n         * @extends      plotOptions.line\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, dragDrop, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, useOhlcData\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.sma\n         */\n        SMAIndicator.defaultOptions = merge(LineSeries.defaultOptions, {\n            /**\n             * The name of the series as shown in the legend, tooltip etc. If not\n             * set, it will be based on a technical indicator type and default\n             * params.\n             *\n             * @type {string}\n             */\n            name: void 0,\n            tooltip: {\n                /**\n                 * Number of decimals in indicator series.\n                 */\n                valueDecimals: 4\n            },\n            /**\n             * The main series ID that indicator will be based on. Required for this\n             * indicator.\n             *\n             * @type {string}\n             */\n            linkedTo: void 0,\n            /**\n             * Whether to compare indicator to the main series values\n             * or indicator values.\n             *\n             * @sample {highstock} stock/plotoptions/series-comparetomain/\n             *         Difference between comparing SMA values to the main series\n             *         and its own values.\n             *\n             * @type {boolean}\n             */\n            compareToMain: false,\n            /**\n             * Paramters used in calculation of regression series' points.\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 3,\n                /**\n                 * The base period for indicator calculations. This is the number of\n                 * data points which are taken into account for the indicator\n                 * calculations.\n                 */\n                period: 14\n            }\n        });\n        extend(SMAIndicator.prototype, {\n            calculateOn: {\n                chart: 'init'\n            },\n            hasDerivedData: true,\n            nameComponents: ['period'],\n            nameSuffixes: [],\n            useCommonDataGrouping: true\n        });\n        SeriesRegistry.registerSeriesType('sma', SMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `SMA` series. If the [type](#series.sma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.sma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, useOhlcData\n         * @requires  stock/indicators/indicators\n         * @apioption series.sma\n         */\n        (''); // adds doclet above to the transpiled file\n\n        return SMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/EMA/EMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The EMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ema\n         *\n         * @augments Highcharts.Series\n         */\n        class EMAIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            accumulatePeriodPoints(period, index, yVal) {\n                let sum = 0, i = 0, y = 0;\n                while (i < period) {\n                    y = index < 0 ? yVal[i] : yVal[i][index];\n                    sum = sum + y;\n                    i++;\n                }\n                return sum;\n            }\n            calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA) {\n                const x = xVal[i - 1], yValue = index < 0 ?\n                    yVal[i - 1] :\n                    yVal[i - 1][index], y = typeof calEMA === 'undefined' ?\n                    SMA : correctFloat((yValue * EMApercent) +\n                    (calEMA * (1 - EMApercent)));\n                return [x, y];\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, EMApercent = 2 / (period + 1), EMA = [], xData = [], yData = [];\n                let calEMA, EMAPoint, i, index = -1, sum = 0, SMA = 0;\n                // Check period, if bigger than points length, skip\n                if (yValLen < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                sum = this.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = sum / period;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 1; i++) {\n                    EMAPoint = this.calculateEma(xVal, yVal, i, EMApercent, calEMA, index, SMA);\n                    EMA.push(EMAPoint);\n                    xData.push(EMAPoint[0]);\n                    yData.push(EMAPoint[1]);\n                    calEMA = EMAPoint[1];\n                }\n                return {\n                    values: EMA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Exponential moving average indicator (EMA). This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/ema\n         * Exponential moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @optionparent plotOptions.ema\n         */\n        EMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * By default index value used to be set to 0. Since\n                 * Highcharts Stock 7 by default index is set to 3\n                 * which means that the ema indicator will be\n                 * calculated using Close values.\n                 */\n                index: 3,\n                period: 9 // @merge 14 in v6.2\n            }\n        });\n        SeriesRegistry.registerSeriesType('ema', EMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `EMA` series. If the [type](#series.ema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ema\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @apioption series.ema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return EMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AD/ADIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ad\n         *\n         * @augments Highcharts.Series\n         */\n        class ADIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Static Functions\n             *\n             * */\n            static populateAverage(xVal, yVal, yValVolume, i, _period) {\n                const high = yVal[i][1], low = yVal[i][2], close = yVal[i][3], volume = yValVolume[i], adY = close === high && close === low || high === low ?\n                    0 :\n                    ((2 * close - low - high) / (high - low)) * volume, adX = xVal[i];\n                return [adX, adY];\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, volumeSeriesID = params.volumeSeriesID, volumeSeries = series.chart.get(volumeSeriesID), yValVolume = volumeSeries && volumeSeries.yData, yValLen = yVal ? yVal.length : 0, AD = [], xData = [], yData = [];\n                let len, i, ADPoint;\n                if (xVal.length <= period &&\n                    yValLen &&\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                if (!volumeSeries) {\n                    error('Series ' +\n                        volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    len = AD.length;\n                    ADPoint = ADIndicator.populateAverage(xVal, yVal, yValVolume, i, period);\n                    if (len > 0) {\n                        ADPoint[1] += AD[len - 1][1];\n                    }\n                    AD.push(ADPoint);\n                    xData.push(ADPoint[0]);\n                    yData.push(ADPoint[1]);\n                }\n                return {\n                    values: AD,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Accumulation Distribution (AD). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/accumulation-distribution\n         *         Accumulation/Distribution indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/accumulation-distribution\n         * @optionparent plotOptions.ad\n         */\n        ADIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 *\n                 * @since 6.0.0\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        extend(ADIndicator.prototype, {\n            nameComponents: false,\n            nameBase: 'Accumulation/Distribution'\n        });\n        SeriesRegistry.registerSeriesType('ad', ADIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `AD` series. If the [type](#series.ad.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ad\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/accumulation-distribution\n         * @apioption series.ad\n         */\n        ''; // add doclet above to transpiled file\n\n        return ADIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AO/AOIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The AO series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ao\n         *\n         * @augments Highcharts.Series\n         */\n        class AOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            drawGraph() {\n                const indicator = this, options = indicator.options, points = indicator.points, userColor = indicator.userOptions.color, positiveColor = options.greaterBarColor, negativeColor = options.lowerBarColor, firstPoint = points[0];\n                let i;\n                if (!userColor && firstPoint) {\n                    firstPoint.color = positiveColor;\n                    for (i = 1; i < points.length; i++) {\n                        if (points[i].y > points[i - 1].y) {\n                            points[i].color = positiveColor;\n                        }\n                        else if (points[i].y < points[i - 1].y) {\n                            points[i].color = negativeColor;\n                        }\n                        else {\n                            points[i].color = points[i - 1].color;\n                        }\n                    }\n                }\n            }\n            getValues(series) {\n                const shortPeriod = 5, longPeriod = 34, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, AO = [], // 0- date, 1- Awesome Oscillator\n                xData = [], yData = [], high = 1, low = 2;\n                let shortSMA, // Shorter Period SMA\n                longSMA, // Longer Period SMA\n                awesome, shortLastIndex, longLastIndex, price, i, j, longSum = 0, shortSum = 0;\n                if (xVal.length <= longPeriod ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 0; i < longPeriod - 1; i++) {\n                    price = (yVal[i][high] + yVal[i][low]) / 2;\n                    if (i >= longPeriod - shortPeriod) {\n                        shortSum = correctFloat(shortSum + price);\n                    }\n                    longSum = correctFloat(longSum + price);\n                }\n                for (j = longPeriod - 1; j < yValLen; j++) {\n                    price = (yVal[j][high] + yVal[j][low]) / 2;\n                    shortSum = correctFloat(shortSum + price);\n                    longSum = correctFloat(longSum + price);\n                    shortSMA = shortSum / shortPeriod;\n                    longSMA = longSum / longPeriod;\n                    awesome = correctFloat(shortSMA - longSMA);\n                    AO.push([xVal[j], awesome]);\n                    xData.push(xVal[j]);\n                    yData.push(awesome);\n                    shortLastIndex = j + 1 - shortPeriod;\n                    longLastIndex = j + 1 - longPeriod;\n                    shortSum = correctFloat(shortSum -\n                        (yVal[shortLastIndex][high] +\n                            yVal[shortLastIndex][low]) / 2);\n                    longSum = correctFloat(longSum -\n                        (yVal[longLastIndex][high] +\n                            yVal[longLastIndex][low]) / 2);\n                }\n                return {\n                    values: AO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Awesome Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`\n         *\n         * @sample {highstock} stock/indicators/ao\n         *         Awesome\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               params, pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ao\n         * @optionparent plotOptions.ao\n         */\n        AOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0\n            },\n            /**\n             * Color of the Awesome oscillator series bar that is greater than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `greaterBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         greaterBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            greaterBarColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Awesome oscillator series bar that is lower than the\n             * previous one. Note that if a `color` is defined, the `color`\n             * takes precedence and the `lowerBarColor` is ignored.\n             *\n             * @sample {highstock} stock/indicators/ao/\n             *         lowerBarColor\n             *\n             * @type  {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             * @since 7.0.0\n             */\n            lowerBarColor: \"#f21313\" /* Palette.negativeColor */,\n            threshold: 0,\n            groupPadding: 0.2,\n            pointPadding: 0.2,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            }\n        });\n        extend(AOIndicator.prototype, {\n            nameBase: 'AO',\n            nameComponents: void 0,\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol,\n            translate: columnProto.translate,\n            drawPoints: columnProto.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('ao', AOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `AO` series. If the [type](#series.ao.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ao\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ao\n         * @apioption series.ao\n         */\n        ''; // for including the above in the doclets\n\n        return AOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MultipleLinesComposition.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Wojciech Chmiel\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: { prototype: smaProto } } = SeriesRegistry.seriesTypes;\n        const { defined, error, merge } = U;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var MultipleLinesComposition;\n        (function (MultipleLinesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n            *\n            *  Constants\n            *\n            * */\n            /**\n             * Additional lines DOCS names. Elements of linesApiNames array should\n             * be consistent with DOCS line names defined in your implementation.\n             * Notice that linesApiNames should have decreased amount of elements\n             * relative to pointArrayMap (without pointValKey).\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const linesApiNames = ['bottomLine'];\n            /**\n             * Lines ids. Required to plot appropriate amount of lines.\n             * Notice that pointArrayMap should have more elements than\n             * linesApiNames, because it contains main line and additional lines ids.\n             * Also it should be consistent with amount of lines calculated in\n             * getValues method from your implementation.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const pointArrayMap = ['top', 'bottom'];\n            /**\n             * Names of the lines, bewteen which the area should be plotted.\n             * If the drawing of the area should\n             * be disabled for some indicators, leave this option as an empty array.\n             * Names should be the same as the names in the pointArrayMap.\n             *\n             * @private\n             * @type {Array<string>}\n             */\n            const areaLinesNames = ['top'];\n            /**\n             * Main line id.\n             *\n             * @private\n             * @type {string}\n             */\n            const pointValKey = 'top';\n            /* *\n            *\n            *  Functions\n            *\n            * */\n            /**\n             * Composition useful for all indicators that have more than one line.\n             * Compose it with your implementation where you will provide the\n             * `getValues` method appropriate to your indicator and `pointArrayMap`,\n             * `pointValKey`, `linesApiNames` properties. Notice that `pointArrayMap`\n             * should be consistent with the amount of lines calculated in the\n             * `getValues` method.\n             *\n             * @private\n             */\n            function compose(IndicatorClass) {\n                const proto = IndicatorClass.prototype;\n                proto.linesApiNames = (proto.linesApiNames ||\n                    linesApiNames.slice());\n                proto.pointArrayMap = (proto.pointArrayMap ||\n                    pointArrayMap.slice());\n                proto.pointValKey = (proto.pointValKey ||\n                    pointValKey);\n                proto.areaLinesNames = (proto.areaLinesNames ||\n                    areaLinesNames.slice());\n                proto.drawGraph = indicatorDrawGraph;\n                proto.getGraphPath = indicatorGetGraphPath;\n                proto.toYData = indicatorToYData;\n                proto.translate = indicatorTranslate;\n                return IndicatorClass;\n            }\n            MultipleLinesComposition.compose = compose;\n            /**\n             * Generate the API name of the line\n             *\n             * @private\n             * @param propertyName name of the line\n             */\n            function getLineName(propertyName) {\n                return ('plot' +\n                    propertyName.charAt(0).toUpperCase() +\n                    propertyName.slice(1));\n            }\n            /**\n             * Create translatedLines Collection based on pointArrayMap.\n             *\n             * @private\n             * @param {string} [excludedValue]\n             *        Main line id\n             * @return {Array<string>}\n             *         Returns translated lines names without excluded value.\n             */\n            function getTranslatedLinesNames(indicator, excludedValue) {\n                const translatedLines = [];\n                (indicator.pointArrayMap || []).forEach((propertyName) => {\n                    if (propertyName !== excludedValue) {\n                        translatedLines.push(getLineName(propertyName));\n                    }\n                });\n                return translatedLines;\n            }\n            /**\n             * Draw main and additional lines.\n             *\n             * @private\n             */\n            function indicatorDrawGraph() {\n                const indicator = this, pointValKey = indicator.pointValKey, linesApiNames = indicator.linesApiNames, areaLinesNames = indicator.areaLinesNames, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, \n                // additional lines point place holders:\n                secondaryLines = [], secondaryLinesNames = getTranslatedLinesNames(indicator, pointValKey);\n                let pointsLength = mainLinePoints.length, point;\n                // Generate points for additional lines:\n                secondaryLinesNames.forEach((plotLine, index) => {\n                    // create additional lines point place holders\n                    secondaryLines[index] = [];\n                    while (pointsLength--) {\n                        point = mainLinePoints[pointsLength];\n                        secondaryLines[index].push({\n                            x: point.x,\n                            plotX: point.plotX,\n                            plotY: point[plotLine],\n                            isNull: !defined(point[plotLine])\n                        });\n                    }\n                    pointsLength = mainLinePoints.length;\n                });\n                // Modify options and generate area fill:\n                if (indicator.userOptions.fillColor && areaLinesNames.length) {\n                    const index = secondaryLinesNames.indexOf(getLineName(areaLinesNames[0])), secondLinePoints = secondaryLines[index], firstLinePoints = areaLinesNames.length === 1 ?\n                        mainLinePoints :\n                        secondaryLines[secondaryLinesNames.indexOf(getLineName(areaLinesNames[1]))], originalColor = indicator.color;\n                    indicator.points = firstLinePoints;\n                    indicator.nextPoints = secondLinePoints;\n                    indicator.color = indicator.userOptions.fillColor;\n                    indicator.options = merge(mainLinePoints, gappedExtend);\n                    indicator.graph = indicator.area;\n                    indicator.fillGraph = true;\n                    smaProto.drawGraph.call(indicator);\n                    indicator.area = indicator.graph;\n                    // Clean temporary properties:\n                    delete indicator.nextPoints;\n                    delete indicator.fillGraph;\n                    indicator.color = originalColor;\n                }\n                // Modify options and generate additional lines:\n                linesApiNames.forEach((lineName, i) => {\n                    if (secondaryLines[i]) {\n                        indicator.points = secondaryLines[i];\n                        if (mainLineOptions[lineName]) {\n                            indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        }\n                        else {\n                            error('Error: \"There is no ' + lineName +\n                                ' in DOCS options declared. Check if linesApiNames' +\n                                ' are consistent with your DOCS line names.\"');\n                        }\n                        indicator.graph = indicator['graph' + lineName];\n                        smaProto.drawGraph.call(indicator);\n                        // Now save lines:\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    else {\n                        error('Error: \"' + lineName + ' doesn\\'t have equivalent ' +\n                            'in pointArrayMap. To many elements in linesApiNames ' +\n                            'relative to pointArrayMap.\"');\n                    }\n                });\n                // Restore options and draw a main line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                smaProto.drawGraph.call(indicator);\n            }\n            /**\n             * Create the path based on points provided as argument.\n             * If indicator.nextPoints option is defined, create the areaFill.\n             *\n             * @private\n             * @param points Points on which the path should be created\n             */\n            function indicatorGetGraphPath(points) {\n                let areaPath, path = [], higherAreaPath = [];\n                points = points || this.points;\n                // Render Span\n                if (this.fillGraph && this.nextPoints) {\n                    areaPath = smaProto.getGraphPath.call(this, this.nextPoints);\n                    if (areaPath && areaPath.length) {\n                        areaPath[0][0] = 'L';\n                        path = smaProto.getGraphPath.call(this, points);\n                        higherAreaPath = areaPath.slice(0, path.length);\n                        // Reverse points, so that the areaFill will start from the end:\n                        for (let i = higherAreaPath.length - 1; i >= 0; i--) {\n                            path.push(higherAreaPath[i]);\n                        }\n                    }\n                }\n                else {\n                    path = smaProto.getGraphPath.apply(this, arguments);\n                }\n                return path;\n            }\n            /**\n             * @private\n             * @param {Highcharts.Point} point\n             *        Indicator point\n             * @return {Array<number>}\n             *         Returns point Y value for all lines\n             */\n            function indicatorToYData(point) {\n                const pointColl = [];\n                (this.pointArrayMap || []).forEach((propertyName) => {\n                    pointColl.push(point[propertyName]);\n                });\n                return pointColl;\n            }\n            /**\n             * Add lines plot pixel values.\n             *\n             * @private\n             */\n            function indicatorTranslate() {\n                const pointArrayMap = this.pointArrayMap;\n                let LinesNames = [], value;\n                LinesNames = getTranslatedLinesNames(this);\n                smaProto.translate.apply(this, arguments);\n                this.points.forEach((point) => {\n                    pointArrayMap.forEach((propertyName, i) => {\n                        value = point[propertyName];\n                        // If the modifier, like for example compare exists,\n                        // modified the original value by that method, #15867.\n                        if (this.dataModify) {\n                            value = this.dataModify.modifyValue(value);\n                        }\n                        if (value !== null) {\n                            point[LinesNames[i]] = this.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n        })(MultipleLinesComposition || (MultipleLinesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return MultipleLinesComposition;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Aroon/AroonIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        // Index of element with extreme value from array (min or max)\n        /**\n         * @private\n         */\n        function getExtremeIndexInArray(arr, extreme) {\n            let extremeValue = arr[0], valueIndex = 0, i;\n            for (i = 1; i < arr.length; i++) {\n                if (extreme === 'max' && arr[i] >= extremeValue ||\n                    extreme === 'min' && arr[i] <= extremeValue) {\n                    extremeValue = arr[i];\n                    valueIndex = i;\n                }\n            }\n            return valueIndex;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroon\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1- Aroon Up, 2- Aroon Down\n                AR = [], xData = [], yData = [], low = 2, high = 1;\n                let aroonUp, aroonDown, xLow, xHigh, i, slicedY;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 2);\n                    xLow = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[low], elem);\n                    }), 'min');\n                    xHigh = getExtremeIndexInArray(slicedY.map(function (elem) {\n                        return pick(elem[high], elem);\n                    }), 'max');\n                    aroonUp = (xHigh / period) * 100;\n                    aroonDown = (xLow / period) * 100;\n                    if (xVal[i + 1]) {\n                        AR.push([xVal[i + 1], aroonUp, aroonDown]);\n                        xData.push(xVal[i + 1]);\n                        yData.push([aroonUp, aroonDown]);\n                    }\n                }\n                return {\n                    values: AR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Aroon. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon\n         *         Aroon\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @optionparent plotOptions.aroon\n         */\n        AroonIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of aroon series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 25\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Aroon Up: {point.y}<br/>Aroon Down: {point.aroonDown}<br/>'\n            },\n            /**\n             * aroonDown line options.\n             */\n            aroonDown: {\n                /**\n                 * Styles for an aroonDown line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.aroon.color](#plotOptions.aroon.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(AroonIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['aroonDown'],\n            nameBase: 'Aroon',\n            pointArrayMap: ['y', 'aroonDown'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroon', AroonIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Aroon indicator. If the [type](#series.aroon.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroon\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @apioption series.aroon\n         */\n        ''; // to avoid removal of the above jsdoc\n\n        return AroonIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/AroonOscillator/AroonOscillatorIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { aroon: AroonIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Aroon Oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.aroonoscillator\n         *\n         * @augments Highcharts.Series\n         */\n        class AroonOscillatorIndicator extends AroonIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                // 0- date, 1- Aroon Oscillator\n                const ARO = [], xData = [], yData = [];\n                let aroonUp, aroonDown, oscillator, i;\n                const aroon = super.getValues.call(this, series, params);\n                for (i = 0; i < aroon.yData.length; i++) {\n                    aroonUp = aroon.yData[i][0];\n                    aroonDown = aroon.yData[i][1];\n                    oscillator = aroonUp - aroonDown;\n                    ARO.push([aroon.xData[i], oscillator]);\n                    xData.push(aroon.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: ARO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Aroon Oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/aroon.js`.\n         *\n         * @sample {highstock} stock/indicators/aroon-oscillator\n         *         Aroon Oscillator\n         *\n         * @extends      plotOptions.aroon\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, aroonDown, colorAxis, compare, compareBase,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/aroon\n         * @requires     stock/indicators/aroon-oscillator\n         * @optionparent plotOptions.aroonoscillator\n         */\n        AroonOscillatorIndicator.defaultOptions = merge(AroonIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b>: {point.y}'\n            }\n        });\n        extend(AroonOscillatorIndicator.prototype, {\n            nameBase: 'Aroon Oscillator',\n            linesApiNames: [],\n            pointArrayMap: ['y'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(AroonIndicator);\n        SeriesRegistry.registerSeriesType('aroonoscillator', AroonOscillatorIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Aroon Oscillator` series. If the [type](#series.aroonoscillator.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.aroonoscillator\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, aroonDown, colorAxis, compare, compareBase, dataParser,\n         *            dataURL, joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/aroon\n         * @requires  stock/indicators/aroon-oscillator\n         * @apioption series.aroonoscillator\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return AroonOscillatorIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ATR/ATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i) {\n            const xValue = xVal[i], yValue = yVal[i];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function getTR(currentPoint, prevPoint) {\n            const pointY = currentPoint, prevY = prevPoint, HL = pointY[1] - pointY[2], HCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[1] - prevY[3]), LCp = typeof prevY === 'undefined' ? 0 : Math.abs(pointY[2] - prevY[3]), TR = Math.max(HL, HCp, LCp);\n            return TR;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i, period, prevATR) {\n            const x = xVal[i - 1], TR = getTR(yVal[i - 1], yVal[i - 2]), y = (((prevATR * (period - 1)) + TR) / period);\n            return [x, y];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.atr\n         *\n         * @augments Highcharts.Series\n         */\n        class ATRIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], yValue = yVal[0], points = [[xValue, yValue]], ATR = [], xData = [], yData = [];\n                let point, i, prevATR = 0, range = 1, TR = 0;\n                if ((xVal.length <= period) ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = 1; i <= yValLen; i++) {\n                    accumulateAverage(points, xVal, yVal, i);\n                    if (period < range) {\n                        point = populateAverage(points, xVal, yVal, i, period, prevATR);\n                        prevATR = point[1];\n                        ATR.push(point);\n                        xData.push(point[0]);\n                        yData.push(point[1]);\n                    }\n                    else if (period === range) {\n                        prevATR = TR / (i - 1);\n                        ATR.push([xVal[i - 1], prevATR]);\n                        xData.push(xVal[i - 1]);\n                        yData.push(prevATR);\n                        range++;\n                    }\n                    else {\n                        TR += getTR(yVal[i - 1], yVal[i - 2]);\n                        range++;\n                    }\n                }\n                return {\n                    values: ATR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Average true range indicator (ATR). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/atr\n         *         ATR indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/atr\n         * @optionparent plotOptions.atr\n         */\n        ATRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('atr', ATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ATR` series. If the [type](#series.atr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.atr\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @apioption series.atr\n         */\n        ''; // to include the above in the js output\n\n        return ATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/BB/BBIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /**\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function getStandardDeviation(arr, index, isOHLC, mean) {\n            const arrLen = arr.length;\n            let i = 0, std = 0, value, variance = 0;\n            for (; i < arrLen; i++) {\n                value = (isOHLC ? arr[i][index] : arr[i]) - mean;\n                variance += value * value;\n            }\n            variance = variance / (arrLen - 1);\n            std = Math.sqrt(variance);\n            return std;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Bollinger Bands series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.bb\n         *\n         * @augments Highcharts.Series\n         */\n        class BBIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, standardDeviation = params.standardDeviation, xData = [], yData = [], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-middle line, 2-top line, 3-bottom line\n                BB = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, slicedX, slicedY, stdDev, point, i;\n                if (xVal.length < period) {\n                    return;\n                }\n                const isOHLC = isArray(yVal[0]);\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = SeriesRegistry.seriesTypes.sma.prototype.getValues.call(this, {\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    stdDev = getStandardDeviation(slicedY, params.index, isOHLC, ML);\n                    TL = ML + standardDeviation * stdDev;\n                    BL = ML - standardDeviation * stdDev;\n                    BB.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: BB,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Bollinger bands (BB). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/bollinger-bands\n         *         Bollinger bands\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/bollinger-bands\n         * @optionparent plotOptions.bb\n         */\n        BBIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Bollinger Bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.ColorType}\n             * @since     9.3.2\n             * @apioption plotOptions.bb.fillColor\n             */\n            /**\n             * Parameters used in calculation of the regression points.\n             */\n            params: {\n                period: 20,\n                /**\n                 * Standard deviation for top and bottom bands.\n                 */\n                standardDeviation: 2,\n                index: 3\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                /**\n                 * Styles for the bottom line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.bb.bottomLine\n             */\n            topLine: {\n                /**\n                 * Styles for the top line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.bb.color](#plotOptions.bb.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(BBIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'standardDeviation'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(BBIndicator);\n        SeriesRegistry.registerSeriesType('bb', BBIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A bollinger bands indicator. If the [type](#series.bb.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.bb\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/bollinger-bands\n         * @apioption series.bb\n         */\n        ''; // to include the above in the js output\n\n        return BBIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CCI/CCIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            }, 0);\n        }\n        /**\n         * @private\n         */\n        function meanDeviation(arr, sma) {\n            const len = arr.length;\n            let sum = 0, i;\n            for (i = 0; i < len; i++) {\n                sum += Math.abs(sma - (arr[i]));\n            }\n            return sum;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CCI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cci\n         *\n         * @augments Highcharts.Series\n         */\n        class CCIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, TP = [], CCI = [], xData = [], yData = [];\n                let CCIPoint, p, periodTP = [], len, range = 1, smaTP, TPtemp, meanDev, i;\n                // CCI requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // accumulate first N-points\n                while (range < period) {\n                    p = yVal[range - 1];\n                    TP.push((p[1] + p[2] + p[3]) / 3);\n                    range++;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    p = yVal[i - 1];\n                    TPtemp = (p[1] + p[2] + p[3]) / 3;\n                    len = TP.push(TPtemp);\n                    periodTP = TP.slice(len - period);\n                    smaTP = sumArray(periodTP) / period;\n                    meanDev = meanDeviation(periodTP, smaTP) / period;\n                    CCIPoint = ((TPtemp - smaTP) / (0.015 * meanDev));\n                    CCI.push([xVal[i - 1], CCIPoint]);\n                    xData.push(xVal[i - 1]);\n                    yData.push(CCIPoint);\n                }\n                return {\n                    values: CCI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Commodity Channel Index (CCI). This series requires `linkedTo` option to\n         * be set.\n         *\n         * @sample stock/indicators/cci\n         *         CCI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cci\n         * @optionparent plotOptions.cci\n         */\n        CCIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            }\n        });\n        SeriesRegistry.registerSeriesType('cci', CCIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CCI` series. If the [type](#series.cci.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cci\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cci\n         * @apioption series.cci\n         */\n        ''; // to include the above in the js output\n\n        return CCIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMF/CMFIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Highsoft AS\n         *\n         *  Author: Sebastian Domas\n         *\n         *  Chaikin Money Flow indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMF series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmf\n         *\n         * @augments Highcharts.Series\n         */\n        class CMFIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.nameBase = 'Chaikin Money Flow';\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Checks if the series and volumeSeries are accessible, number of\n             * points.x is longer than period, is series has OHLC data\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @return {boolean} True if series is valid and can be computed,\n             * otherwise false.\n             */\n            isValid() {\n                const chart = this.chart, options = this.options, series = this.linkedParent, volumeSeries = (this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID))), isSeriesOHLC = (series &&\n                    series.yData &&\n                    series.yData[0].length === 4);\n                /**\n                 * @private\n                 * @param {Highcharts.Series} serie to check length validity on.\n                 * @return {boolean|undefined} true if length is valid.\n                 */\n                function isLengthValid(serie) {\n                    return serie.xData &&\n                        serie.xData.length >= options.params.period;\n                }\n                return !!(series &&\n                    volumeSeries &&\n                    isLengthValid(series) &&\n                    isLengthValid(volumeSeries) && isSeriesOHLC);\n            }\n            /**\n             * Returns indicator's data.\n             * @private\n             * @param {Highcharts.CMFIndicator} this indicator to use.\n             * @param {Highcharts.Series} series to calculate values from\n             * @param {Highcharts.CMFIndicatorParamsOptions} params to pass\n             * @return {boolean|Highcharts.IndicatorNullableValuesObject} Returns false if the\n             * indicator is not valid, otherwise returns Values object.\n             */\n            getValues(series, params) {\n                if (!this.isValid()) {\n                    return;\n                }\n                return this.getMoneyFlow(series.xData, series.yData, this.volumeSeries.yData, params.period);\n            }\n            /**\n             * @private\n             *\n             * @param {Array<number>} xData\n             * x timestamp values\n             *\n             * @param {Array<number>} seriesYData\n             * yData of basic series\n             *\n             * @param {Array<number>} volumeSeriesYData\n             * yData of volume series\n             *\n             * @param {number} period\n             * indicator's param\n             *\n             * @return {Highcharts.IndicatorNullableValuesObject}\n             * object containing computed money flow data\n             */\n            getMoneyFlow(xData, seriesYData, volumeSeriesYData, period) {\n                const len = seriesYData.length, moneyFlowVolume = [], moneyFlowXData = [], moneyFlowYData = [], values = [];\n                let i, point, nullIndex = -1, sumVolume = 0, sumMoneyFlowVolume = 0;\n                /**\n                 * Calculates money flow volume, changes i, nullIndex vars from\n                 * upper scope!\n                 *\n                 * @private\n                 *\n                 * @param {Array<number>} ohlc\n                 * OHLC point\n                 *\n                 * @param {number} volume\n                 * Volume point's y value\n                 *\n                 * @return {number|null}\n                 * Volume * moneyFlowMultiplier\n                 */\n                function getMoneyFlowVolume(ohlc, volume) {\n                    const high = ohlc[1], low = ohlc[2], close = ohlc[3], isValid = volume !== null &&\n                        high !== null &&\n                        low !== null &&\n                        close !== null &&\n                        high !== low;\n                    /**\n                     * @private\n                     * @param {number} h\n                     * High value\n                     * @param {number} l\n                     * Low value\n                     * @param {number} c\n                     * Close value\n                     * @return {number}\n                     * Calculated multiplier for the point\n                     */\n                    function getMoneyFlowMultiplier(h, l, c) {\n                        return ((c - l) - (h - c)) / (h - l);\n                    }\n                    return isValid ?\n                        getMoneyFlowMultiplier(high, low, close) * volume :\n                        ((nullIndex = i), null);\n                }\n                if (period > 0 && period <= len) {\n                    for (i = 0; i < period; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                    }\n                    moneyFlowXData.push(xData[i - 1]);\n                    moneyFlowYData.push(i - nullIndex >= period && sumVolume !== 0 ?\n                        sumMoneyFlowVolume / sumVolume :\n                        null);\n                    values.push([moneyFlowXData[0], moneyFlowYData[0]]);\n                    for (; i < len; i++) {\n                        moneyFlowVolume[i] = getMoneyFlowVolume(seriesYData[i], volumeSeriesYData[i]);\n                        sumVolume -= volumeSeriesYData[i - period];\n                        sumVolume += volumeSeriesYData[i];\n                        sumMoneyFlowVolume -= moneyFlowVolume[i - period];\n                        sumMoneyFlowVolume += moneyFlowVolume[i];\n                        point = [\n                            xData[i],\n                            i - nullIndex >= period ?\n                                sumMoneyFlowVolume / sumVolume :\n                                null\n                        ];\n                        moneyFlowXData.push(point[0]);\n                        moneyFlowYData.push(point[1]);\n                        values.push([point[0], point[1]]);\n                    }\n                }\n                return {\n                    values: values,\n                    xData: moneyFlowXData,\n                    yData: moneyFlowYData\n                };\n            }\n        }\n        /**\n         * Chaikin Money Flow indicator (cmf).\n         *\n         * @sample stock/indicators/cmf/\n         *         Chaikin Money Flow indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    animationLimit\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmf\n         * @optionparent plotOptions.cmf\n         */\n        CMFIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmf', CMFIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMF` series. If the [type](#series.cmf.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmf\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmf\n         * @apioption series.cmf\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return CMFIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DMI/DMIIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2024 Rafal Sebestjanski\n         *\n         *  Directional Movement Index (DMI) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dmi\n         *\n         * @augments Highcharts.Series\n         */\n        class DMIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateDM(yVal, i, isPositiveDM) {\n                const currentHigh = yVal[i][1], currentLow = yVal[i][2], previousHigh = yVal[i - 1][1], previousLow = yVal[i - 1][2];\n                let DM;\n                if (currentHigh - previousHigh > previousLow - currentLow) {\n                    // for +DM\n                    DM = isPositiveDM ? Math.max(currentHigh - previousHigh, 0) : 0;\n                }\n                else {\n                    // for -DM\n                    DM = !isPositiveDM ? Math.max(previousLow - currentLow, 0) : 0;\n                }\n                return correctFloat(DM);\n            }\n            calculateDI(smoothedDM, tr) {\n                return smoothedDM / tr * 100;\n            }\n            calculateDX(plusDI, minusDI) {\n                return correctFloat(Math.abs(plusDI - minusDI) / Math.abs(plusDI + minusDI) * 100);\n            }\n            smoothValues(accumulatedValues, currentValue, period) {\n                return correctFloat(accumulatedValues - accumulatedValues / period + currentValue);\n            }\n            getTR(currentPoint, prevPoint) {\n                return correctFloat(Math.max(\n                // currentHigh - currentLow\n                currentPoint[1] - currentPoint[2], \n                // currentHigh - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[1] - prevPoint[3]), \n                // currentLow - previousClose\n                !prevPoint ? 0 : Math.abs(currentPoint[2] - prevPoint[3])));\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DMI = [], xData = [], yData = [];\n                if (\n                // Check period, if bigger than points length, skip\n                (xVal.length <= period) ||\n                    // Only ohlc data is valid\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                let prevSmoothedPlusDM = 0, prevSmoothedMinusDM = 0, prevSmoothedTR = 0, i;\n                for (i = 1; i < yValLen; i++) {\n                    let smoothedPlusDM, smoothedMinusDM, smoothedTR, plusDM, // +DM\n                    minusDM, // -DM\n                    TR, plusDI, // +DI\n                    minusDI, // -DI\n                    DX;\n                    if (i <= period) {\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Accumulate first period values to smooth them later\n                        prevSmoothedPlusDM += plusDM;\n                        prevSmoothedMinusDM += minusDM;\n                        prevSmoothedTR += TR;\n                        // Get all values for the first point\n                        if (i === period) {\n                            plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                            minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                            DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                            DMI.push([xVal[i], DX, plusDI, minusDI]);\n                            xData.push(xVal[i]);\n                            yData.push([DX, plusDI, minusDI]);\n                        }\n                    }\n                    else {\n                        // Calculate current values\n                        plusDM = this.calculateDM(yVal, i, true);\n                        minusDM = this.calculateDM(yVal, i);\n                        TR = this.getTR(yVal[i], yVal[i - 1]);\n                        // Smooth +DM, -DM and TR\n                        smoothedPlusDM = this.smoothValues(prevSmoothedPlusDM, plusDM, period);\n                        smoothedMinusDM = this.smoothValues(prevSmoothedMinusDM, minusDM, period);\n                        smoothedTR = this.smoothValues(prevSmoothedTR, TR, period);\n                        // Save current smoothed values for the next step\n                        prevSmoothedPlusDM = smoothedPlusDM;\n                        prevSmoothedMinusDM = smoothedMinusDM;\n                        prevSmoothedTR = smoothedTR;\n                        // Get all next points (except the first one calculated above)\n                        plusDI = this.calculateDI(prevSmoothedPlusDM, prevSmoothedTR);\n                        minusDI = this.calculateDI(prevSmoothedMinusDM, prevSmoothedTR);\n                        DX = this.calculateDX(prevSmoothedPlusDM, prevSmoothedMinusDM);\n                        DMI.push([xVal[i], DX, plusDI, minusDI]);\n                        xData.push(xVal[i]);\n                        yData.push([DX, plusDI, minusDI]);\n                    }\n                }\n                return {\n                    values: DMI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Directional Movement Index (DMI).\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/dmi\n         *         DMI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dmi\n         * @optionparent plotOptions.dmi\n         */\n        DMIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0 // unused index, do not inherit (#15362)\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">' +\n                    '\\u25CF</span><b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">DX</span>: {point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.plusDILine.styles.lineColor}\">' +\n                    '+DI</span>: {point.plusDI}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.minusDILine.styles.lineColor}\">' +\n                    '-DI</span>: {point.minusDI}<br/>'\n            },\n            /**\n             * +DI line options.\n             */\n            plusDILine: {\n                /**\n                 * Styles for the +DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#06b535\" /* Palette.positiveColor */ // green-ish\n                }\n            },\n            /**\n             * -DI line options.\n             */\n            minusDILine: {\n                /**\n                 * Styles for the -DI line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#f21313\" /* Palette.negativeColor */ // red-ish\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DMIIndicator.prototype, {\n            areaLinesNames: [],\n            nameBase: 'DMI',\n            linesApiNames: ['plusDILine', 'minusDILine'],\n            pointArrayMap: ['y', 'plusDI', 'minusDI'],\n            parallelArrays: ['x', 'y', 'plusDI', 'minusDI'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(DMIIndicator);\n        SeriesRegistry.registerSeriesType('dmi', DMIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Directional Movement Index (DMI) indicator series.\n         * If the [type](#series.dmi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dmi\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dmi\n         * @apioption series.dmi\n         */\n        ''; // to include the above in the js output\n\n        return DMIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DPO/DPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, correctFloat, pick } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulatePoints(sum, yVal, i, index, subtract) {\n            const price = pick(yVal[i][index], yVal[i]);\n            if (subtract) {\n                return correctFloat(sum - price);\n            }\n            return correctFloat(sum + price);\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dpo\n         *\n         * @augments Highcharts.Series\n         */\n        class DPOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, offset = Math.floor(period / 2 + 1), range = period + offset, xVal = series.xData || [], yVal = series.yData || [], yValLen = yVal.length, \n                // 0- date, 1- Detrended Price Oscillator\n                DPO = [], xData = [], yData = [];\n                let oscillator, periodIndex, rangeIndex, price, i, j, sum = 0;\n                if (xVal.length <= range) {\n                    return;\n                }\n                // Accumulate first N-points for SMA\n                for (i = 0; i < period - 1; i++) {\n                    sum = accumulatePoints(sum, yVal, i, index);\n                }\n                // Detrended Price Oscillator formula:\n                // DPO = Price - Simple moving average [from (n / 2 + 1) days ago]\n                for (j = 0; j <= yValLen - range; j++) {\n                    periodIndex = j + period - 1;\n                    rangeIndex = j + range - 1;\n                    // adding the last period point\n                    sum = accumulatePoints(sum, yVal, periodIndex, index);\n                    price = pick(yVal[rangeIndex][index], yVal[rangeIndex]);\n                    oscillator = price - sum / period;\n                    // substracting the first period point\n                    sum = accumulatePoints(sum, yVal, j, index, true);\n                    DPO.push([xVal[rangeIndex], oscillator]);\n                    xData.push(xVal[rangeIndex]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: DPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Detrended Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dpo\n         *         Detrended Price Oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dpo\n         * @optionparent plotOptions.dpo\n         */\n        DPOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Parameters used in calculation of Detrended Price Oscillator series\n             * points.\n             */\n            params: {\n                index: 0,\n                /**\n                 * Period for Detrended Price Oscillator\n                 */\n                period: 21\n            }\n        });\n        extend(DPOIndicator.prototype, {\n            nameBase: 'DPO'\n        });\n        SeriesRegistry.registerSeriesType('dpo', DPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Detrended Price Oscillator. If the [type](#series.dpo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dpo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dpo\n         * @apioption series.dpo\n         */\n        ''; // to include the above in the js output'\n\n        return DPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Chaikin/ChaikinIndicator.js', [_modules['Stock/Indicators/AD/ADIndicator.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AD, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Chaikin series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.chaikin\n         *\n         * @augments Highcharts.Series\n         */\n        class ChaikinIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, period = params.period, \n                // 0- date, 1- Chaikin Oscillator\n                CHA = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"Chaikin requires two periods. Notice, first ' +\n                        'period should be lower than the second one.\"');\n                    return;\n                }\n                // Accumulation Distribution Line data\n                const ADL = AD.prototype.getValues.call(this, series, {\n                    volumeSeriesID: params.volumeSeriesID,\n                    period: period\n                });\n                // Check if adl is calculated properly, if not skip\n                if (!ADL) {\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, ADL, {\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, ADL, {\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat(SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    CHA.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: CHA,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Chaikin Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/chaikin\n         *         Chaikin Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/chaikin\n         * @optionparent plotOptions.chaikin\n         */\n        ChaikinIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Chaikin Oscillator\n             * series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Parameter used indirectly for calculating the `AD` indicator.\n                 * Decides about the number of data points that are taken\n                 * into account for the indicator calculations.\n                 */\n                period: 9,\n                /**\n                 * Periods for Chaikin Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [3, 10]\n                 */\n                periods: [3, 10]\n            }\n        });\n        extend(ChaikinIndicator.prototype, {\n            nameBase: 'Chaikin Osc',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('chaikin', ChaikinIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Chaikin Oscillator` series. If the [type](#series.chaikin.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.chaikin\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, stacking, showInNavigator\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/chaikin\n         * @apioption series.chaikin\n         */\n        ''; // to include the above in the js output\n\n        return ChaikinIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/CMO/CMOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The CMO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.cmo\n         *\n         * @augments Highcharts.Series\n         */\n        class CMOIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, CMO = [], xData = [], yData = [];\n                let i, index = params.index, values;\n                if (xVal.length < period) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // In case of the situation, where the series type has data length\n                    // shorter then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal.map((value) => value[index]);\n                }\n                let firstAddedSum = 0, sumOfHigherValues = 0, sumOfLowerValues = 0, y;\n                // Calculate first point, check if the first value\n                // was added to sum of higher/lower values, and what was the value.\n                for (let j = period; j > 0; j--) {\n                    if (values[j] > values[j - 1]) {\n                        sumOfHigherValues += values[j] - values[j - 1];\n                    }\n                    else if (values[j] < values[j - 1]) {\n                        sumOfLowerValues += values[j - 1] - values[j];\n                    }\n                }\n                // You might devide by 0 if all values are equal,\n                // so return 0 in this case.\n                y =\n                    sumOfHigherValues + sumOfLowerValues > 0 ?\n                        (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                            (sumOfHigherValues + sumOfLowerValues) :\n                        0;\n                xData.push(xVal[period]);\n                yData.push(y);\n                CMO.push([xVal[period], y]);\n                for (i = period + 1; i < yValLen; i++) {\n                    firstAddedSum = Math.abs(values[i - period - 1] - values[i - period]);\n                    if (values[i] > values[i - 1]) {\n                        sumOfHigherValues += values[i] - values[i - 1];\n                    }\n                    else if (values[i] < values[i - 1]) {\n                        sumOfLowerValues += values[i - 1] - values[i];\n                    }\n                    // Check, to which sum was the first value added to,\n                    // and substract this value from given sum.\n                    if (values[i - period] > values[i - period - 1]) {\n                        sumOfHigherValues -= firstAddedSum;\n                    }\n                    else {\n                        sumOfLowerValues -= firstAddedSum;\n                    }\n                    // Same as above.\n                    y =\n                        sumOfHigherValues + sumOfLowerValues > 0 ?\n                            (100 * (sumOfHigherValues - sumOfLowerValues)) /\n                                (sumOfHigherValues + sumOfLowerValues) :\n                            0;\n                    xData.push(xVal[i]);\n                    yData.push(y);\n                    CMO.push([xVal[i], y]);\n                }\n                return {\n                    values: CMO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Chande Momentum Oscilator (CMO) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/cmo\n         *         CMO indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/cmo\n         * @optionparent plotOptions.cmo\n         */\n        CMOIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                period: 20,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('cmo', CMOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `CMO` series. If the [type](#series.cmo.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.cmo\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/cmo\n         * @apioption series.cmo\n         */\n        (''); // to include the above in the js output\n\n        return CMOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DEMA/DEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The DEMA series Type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.dema\n         *\n         * @augments Highcharts.Series\n         */\n        class DEMAIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getValues(series, params) {\n                const period = params.period, EMAvalues = [], doubledPeriod = 2 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, DEMA = [], xDataDema = [], yDataDema = [];\n                let accumulatePeriodPoints = 0, EMA = 0, \n                // EMA(EMA)\n                EMAlevel2, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, \n                // EMA values array\n                i, index = -1, DEMAPoint, SMA = 0;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 2 * period - 1) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints =\n                    super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                SMA = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 2; i++) {\n                    if (i < yValLen + 1) {\n                        EMA = this.getEMA(yVal, prevEMA, SMA, index, i)[1];\n                        EMAvalues.push(EMA);\n                    }\n                    prevEMA = EMA;\n                    // Summing first period points for EMA(EMA)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += EMA;\n                    }\n                    else {\n                        // Calculate DEMA\n                        // First DEMA point\n                        if (i === doubledPeriod) {\n                            SMA = accumulatePeriodPoints / period;\n                        }\n                        EMA = EMAvalues[i - period - 1];\n                        EMAlevel2 = this.getEMA([EMA], prevEMAlevel2, SMA)[1];\n                        DEMAPoint = [\n                            xVal[i - 2],\n                            correctFloat(2 * EMA - EMAlevel2)\n                        ];\n                        DEMA.push(DEMAPoint);\n                        xDataDema.push(DEMAPoint[0]);\n                        yDataDema.push(DEMAPoint[1]);\n                        prevEMAlevel2 = EMAlevel2;\n                    }\n                }\n                return {\n                    values: DEMA,\n                    xData: xDataDema,\n                    yData: yDataDema\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Double exponential moving average (DEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/dema\n         *         DEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/dema\n         * @optionparent plotOptions.dema\n         */\n        DEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('dema', DEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `DEMA` series. If the [type](#series.dema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.dema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/dema\n         * @apioption series.dema\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return DEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TEMA/TEMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TEMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.tema\n         *\n         * @augments Highcharts.Series\n         */\n        class TEMAIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEMA(yVal, prevEMA, SMA, index, i, xVal) {\n                return super.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, this.EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                const TEMAPoint = [\n                    xVal[i - 3],\n                    correctFloat(3 * EMAlevels.level1 -\n                        3 * EMAlevels.level2 + EMAlevels.level3)\n                ];\n                return TEMAPoint;\n            }\n            getValues(series, params) {\n                const period = params.period, doubledPeriod = 2 * period, tripledPeriod = 3 * period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, tema = [], xDataTema = [], yDataTema = [], \n                // EMA values array\n                emaValues = [], emaLevel2Values = [], \n                // This object contains all EMA EMAlevels calculated like below\n                // EMA = level1\n                // EMA(EMA) = level2,\n                // EMA(EMA(EMA)) = level3,\n                emaLevels = {};\n                let index = -1, accumulatePeriodPoints = 0, sma = 0, \n                // EMA of previous point\n                prevEMA, prevEMAlevel2, i, temaPoint;\n                this.EMApercent = (2 / (period + 1));\n                // Check period, if bigger than EMA points length, skip\n                if (yValLen < 3 * period - 2) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index ? params.index : 0;\n                }\n                // Accumulate first N-points\n                accumulatePeriodPoints = super.accumulatePeriodPoints(period, index, yVal);\n                // first point\n                sma = accumulatePeriodPoints / period;\n                accumulatePeriodPoints = 0;\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen + 3; i++) {\n                    if (i < yValLen + 1) {\n                        emaLevels.level1 = this.getEMA(yVal, prevEMA, sma, index, i)[1];\n                        emaValues.push(emaLevels.level1);\n                    }\n                    prevEMA = emaLevels.level1;\n                    // Summing first period points for ema(ema)\n                    if (i < doubledPeriod) {\n                        accumulatePeriodPoints += emaLevels.level1;\n                    }\n                    else {\n                        // Calculate dema\n                        // First dema point\n                        if (i === doubledPeriod) {\n                            sma = accumulatePeriodPoints / period;\n                            accumulatePeriodPoints = 0;\n                        }\n                        emaLevels.level1 = emaValues[i - period - 1];\n                        emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                        emaLevel2Values.push(emaLevels.level2);\n                        prevEMAlevel2 = emaLevels.level2;\n                        // Summing first period points for ema(ema(ema))\n                        if (i < tripledPeriod) {\n                            accumulatePeriodPoints += emaLevels.level2;\n                        }\n                        else {\n                            // Calculate tema\n                            // First tema point\n                            if (i === tripledPeriod) {\n                                sma = accumulatePeriodPoints / period;\n                            }\n                            if (i === yValLen + 1) {\n                                // Calculate the last ema and emaEMA points\n                                emaLevels.level1 = emaValues[i - period - 1];\n                                emaLevels.level2 = this.getEMA([emaLevels.level1], prevEMAlevel2, sma)[1];\n                                emaLevel2Values.push(emaLevels.level2);\n                            }\n                            emaLevels.level1 = emaValues[i - period - 2];\n                            emaLevels.level2 = emaLevel2Values[i - 2 * period - 1];\n                            emaLevels.level3 = this.getEMA([emaLevels.level2], emaLevels.prevLevel3, sma)[1];\n                            temaPoint = this.getTemaPoint(xVal, tripledPeriod, emaLevels, i);\n                            // Make sure that point exists (for TRIX oscillator)\n                            if (temaPoint) {\n                                tema.push(temaPoint);\n                                xDataTema.push(temaPoint[0]);\n                                yDataTema.push(temaPoint[1]);\n                            }\n                            emaLevels.prevLevel3 = emaLevels.level3;\n                        }\n                    }\n                }\n                return {\n                    values: tema,\n                    xData: xDataTema,\n                    yData: yDataTema\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Triple exponential moving average (TEMA) indicator. This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/tema\n         *         TEMA indicator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @optionparent plotOptions.tema\n         */\n        TEMAIndicator.defaultOptions = merge(EMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('tema', TEMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TEMA` series. If the [type](#series.tema.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.tema\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.tema\n         */\n        ''; // to include the above in the js output\n\n        return TEMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TRIX/TRIXIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { tema: TEMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The TRIX series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trix\n         *\n         * @augments Highcharts.Series\n         */\n        class TRIXIndicator extends TEMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            // TRIX is calculated using TEMA so we just extend getTemaPoint method.\n            getTemaPoint(xVal, tripledPeriod, EMAlevels, i) {\n                if (i > tripledPeriod) {\n                    return [\n                        xVal[i - 3],\n                        EMAlevels.prevLevel3 !== 0 ?\n                            correctFloat(EMAlevels.level3 - EMAlevels.prevLevel3) /\n                                EMAlevels.prevLevel3 * 100 : null\n                    ];\n                }\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Triple exponential average (TRIX) oscillator. This series requires\n         * `linkedTo` option to be set.\n         *\n         * @sample {highstock} stock/indicators/trix\n         * TRIX indicator\n         *\n         * @extends      plotOptions.tema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/tema\n         * @requires     stock/indicators/trix\n         * @optionparent plotOptions.trix\n         */\n        TRIXIndicator.defaultOptions = merge(TEMAIndicator.defaultOptions);\n        SeriesRegistry.registerSeriesType('trix', TRIXIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TRIX` series. If the [type](#series.trix.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trix\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/tema\n         * @apioption series.trix\n         */\n        ''; // to include the above in the js output\n\n        return TRIXIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/APO/APOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The APO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.apo\n         *\n         * @augments Highcharts.Series\n         */\n        class APOIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Absolute price oscillator\n                APO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"APO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = (SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]);\n                    APO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: APO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Absolute Price Oscillator. This series requires the `linkedTo` option to\n         * be set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/apo\n         *         Absolute Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/apo\n         * @optionparent plotOptions.apo\n         */\n        APOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Absolute Price Oscillator\n             * series points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Absolute Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [10, 20]\n                 * @since   7.0.0\n                 */\n                periods: [10, 20]\n            }\n        });\n        extend(APOIndicator.prototype, {\n            nameBase: 'APO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('apo', APOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An `Absolute Price Oscillator` series. If the [type](#series.apo.type) option\n         * is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.apo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/apo\n         * @apioption series.apo\n         */\n        ''; // to include the above in the js output\n\n        return APOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/IKH/IKHIndicator.js', [_modules['Extensions/DataGrouping/ApproximationRegistry.js'], _modules['Core/Color/Color.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (ApproximationRegistry, Color, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { parse: color } = Color;\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { defined, extend, isArray, isNumber, getClosestDistance, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function maxHigh(arr) {\n            return arr.reduce(function (max, res) {\n                return Math.max(max, res[1]);\n            }, -Infinity);\n        }\n        /**\n         * @private\n         */\n        function minLow(arr) {\n            return arr.reduce(function (min, res) {\n                return Math.min(min, res[2]);\n            }, Infinity);\n        }\n        /**\n         * @private\n         */\n        function highlowLevel(arr) {\n            return {\n                high: maxHigh(arr),\n                low: minLow(arr)\n            };\n        }\n        /**\n         * Check two lines intersection (line a1-a2 and b1-b2)\n         * Source: https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection\n         * @private\n         */\n        function checkLineIntersection(a1, a2, b1, b2) {\n            if (a1 && a2 && b1 && b2) {\n                const saX = a2.plotX - a1.plotX, // Auxiliary section a2-a1 X\n                saY = a2.plotY - a1.plotY, // Auxiliary section a2-a1 Y\n                sbX = b2.plotX - b1.plotX, // Auxiliary section b2-b1 X\n                sbY = b2.plotY - b1.plotY, // Auxiliary section b2-b1 Y\n                sabX = a1.plotX - b1.plotX, // Auxiliary section a1-b1 X\n                sabY = a1.plotY - b1.plotY, // Auxiliary section a1-b1 Y\n                // First degree Bézier parameters\n                u = (-saY * sabX + saX * sabY) / (-sbX * saY + saX * sbY), t = (sbX * sabY - sbY * sabX) / (-sbX * saY + saX * sbY);\n                if (u >= 0 && u <= 1 && t >= 0 && t <= 1) {\n                    return {\n                        plotX: a1.plotX + t * saX,\n                        plotY: a1.plotY + t * saY\n                    };\n                }\n            }\n        }\n        /**\n         * Parameter opt (indicator options object) include indicator, points,\n         * nextPoints, color, options, gappedExtend and graph properties\n         * @private\n         */\n        function drawSenkouSpan(opt) {\n            const indicator = opt.indicator;\n            indicator.points = opt.points;\n            indicator.nextPoints = opt.nextPoints;\n            indicator.color = opt.color;\n            indicator.options = merge(opt.options.senkouSpan.styles, opt.gap);\n            indicator.graph = opt.graph;\n            indicator.fillGraph = true;\n            SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n        }\n        /**\n         * Data integrity in Ichimoku is different than default 'averages':\n         * Point: [undefined, value, value, ...] is correct\n         * Point: [undefined, undefined, undefined, ...] is incorrect\n         * @private\n         */\n        function ichimokuAverages() {\n            const ret = [];\n            let isEmptyRange;\n            [].forEach.call(arguments, function (arr, i) {\n                ret.push(ApproximationRegistry.average(arr));\n                isEmptyRange = !isEmptyRange && typeof ret[i] === 'undefined';\n            });\n            // Return undefined when first elem. is undefined and let\n            // sum method handle null (#7377)\n            return isEmptyRange ? void 0 : ret;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The IKH series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ikh\n         *\n         * @augments Highcharts.Series\n         */\n        class IKHIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                /* *\n                 *\n                 *  Properties\n                 *\n                 * */\n                this.data = [];\n                this.options = {};\n                this.points = [];\n                this.graphCollection = [];\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    tenkanLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    kijunLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    chikouLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    senkouSpanA: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpanB: {\n                        styles: {\n                            lineColor: this.color,\n                            fill: color(this.color).setOpacity(0.5).get()\n                        }\n                    },\n                    senkouSpan: {\n                        styles: {\n                            fill: color(this.color).setOpacity(0.2).get()\n                        }\n                    }\n                }, this.options);\n            }\n            toYData(point) {\n                return [\n                    point.tenkanSen,\n                    point.kijunSen,\n                    point.chikouSpan,\n                    point.senkouSpanA,\n                    point.senkouSpanB\n                ];\n            }\n            translate() {\n                const indicator = this;\n                SeriesRegistry.seriesTypes.sma.prototype.translate.apply(indicator);\n                for (const point of indicator.points) {\n                    for (const key of indicator.pointArrayMap) {\n                        const pointValue = point[key];\n                        if (isNumber(pointValue)) {\n                            point['plot' + key] = indicator.yAxis.toPixels(pointValue, true);\n                            // Add extra parameters for support tooltip in moved\n                            // lines\n                            point.plotY = point['plot' + key];\n                            point.tooltipPos = [\n                                point.plotX,\n                                point['plot' + key]\n                            ];\n                            point.isNull = false;\n                        }\n                    }\n                }\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, mainLinePath = indicator.graph, mainColor = indicator.color, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, pointArrayMapLength = indicator.pointArrayMap.length, allIchimokuPoints = [\n                    [],\n                    [],\n                    [],\n                    [],\n                    [],\n                    []\n                ], ikhMap = {\n                    tenkanLine: allIchimokuPoints[0],\n                    kijunLine: allIchimokuPoints[1],\n                    chikouLine: allIchimokuPoints[2],\n                    senkouSpanA: allIchimokuPoints[3],\n                    senkouSpanB: allIchimokuPoints[4],\n                    senkouSpan: allIchimokuPoints[5]\n                }, intersectIndexColl = [], senkouSpanOptions = indicator\n                    .options.senkouSpan, color = senkouSpanOptions.color ||\n                    senkouSpanOptions.styles.fill, negativeColor = senkouSpanOptions.negativeColor, \n                // Points to create color and negativeColor senkouSpan\n                points = [\n                    [],\n                    [] // Points negative color\n                ], \n                // For span, we need an access to the next points, used in\n                // getGraphPath()\n                nextPoints = [\n                    [],\n                    [] // NextPoints negative color\n                ];\n                let pointsLength = mainLinePoints.length, lineIndex = 0, position, point, i, startIntersect, endIntersect, sectionPoints, sectionNextPoints, pointsPlotYSum, nextPointsPlotYSum, senkouSpanTempColor, concatArrIndex, j, k;\n                indicator.ikhMap = ikhMap;\n                // Generate points for all lines and spans lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allIchimokuPoints[i].push({\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            });\n                        }\n                    }\n                    if (negativeColor && pointsLength !== mainLinePoints.length - 1) {\n                        // Check if lines intersect\n                        const index = ikhMap.senkouSpanB.length - 1, intersect = checkLineIntersection(ikhMap.senkouSpanA[index - 1], ikhMap.senkouSpanA[index], ikhMap.senkouSpanB[index - 1], ikhMap.senkouSpanB[index]);\n                        if (intersect) {\n                            const intersectPointObj = {\n                                plotX: intersect.plotX,\n                                plotY: intersect.plotY,\n                                isNull: false,\n                                intersectPoint: true\n                            };\n                            // Add intersect point to ichimoku points collection\n                            // Create senkouSpan sections\n                            ikhMap.senkouSpanA.splice(index, 0, intersectPointObj);\n                            ikhMap.senkouSpanB.splice(index, 0, intersectPointObj);\n                            intersectIndexColl.push(index);\n                        }\n                    }\n                }\n                // Modify options and generate lines:\n                objectEach(ikhMap, (values, lineName) => {\n                    if (mainLineOptions[lineName] &&\n                        lineName !== 'senkouSpan') {\n                        // First line is rendered by default option\n                        indicator.points = allIchimokuPoints[lineIndex];\n                        indicator.options = merge(mainLineOptions[lineName].styles, gappedExtend);\n                        indicator.graph = indicator['graph' + lineName];\n                        indicator.fillGraph = false;\n                        indicator.color = mainColor;\n                        SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                        // Now save line\n                        indicator['graph' + lineName] = indicator.graph;\n                    }\n                    lineIndex++;\n                });\n                // Generate senkouSpan area:\n                // If graphCollection exist then remove svg\n                // element and indicator property\n                if (indicator.graphCollection) {\n                    for (const graphName of indicator.graphCollection) {\n                        indicator[graphName].destroy();\n                        delete indicator[graphName];\n                    }\n                }\n                // Clean graphCollection or initialize it\n                indicator.graphCollection = [];\n                // When user set negativeColor property\n                if (negativeColor && ikhMap.senkouSpanA[0] && ikhMap.senkouSpanB[0]) {\n                    // Add first and last point to senkouSpan area sections\n                    intersectIndexColl.unshift(0);\n                    intersectIndexColl.push(ikhMap.senkouSpanA.length - 1);\n                    // Populate points and nextPoints arrays\n                    for (j = 0; j < intersectIndexColl.length - 1; j++) {\n                        startIntersect = intersectIndexColl[j];\n                        endIntersect = intersectIndexColl[j + 1];\n                        sectionPoints = ikhMap.senkouSpanB.slice(startIntersect, endIntersect + 1);\n                        sectionNextPoints = ikhMap.senkouSpanA.slice(startIntersect, endIntersect + 1);\n                        // Add points to color or negativeColor arrays\n                        // Check the middle point (if exist)\n                        if (Math.floor(sectionPoints.length / 2) >= 1) {\n                            const x = Math.floor(sectionPoints.length / 2);\n                            // When middle points has equal values\n                            // Compare all points plotY value sum\n                            if (sectionPoints[x].plotY === sectionNextPoints[x].plotY) {\n                                pointsPlotYSum = 0;\n                                nextPointsPlotYSum = 0;\n                                for (k = 0; k < sectionPoints.length; k++) {\n                                    pointsPlotYSum += sectionPoints[k].plotY;\n                                    nextPointsPlotYSum += sectionNextPoints[k].plotY;\n                                }\n                                concatArrIndex =\n                                    pointsPlotYSum > nextPointsPlotYSum ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                            else {\n                                // Compare middle point of the section\n                                concatArrIndex = (sectionPoints[x].plotY > sectionNextPoints[x].plotY) ? 0 : 1;\n                                points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                                nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                            }\n                        }\n                        else {\n                            // Compare first point of the section\n                            concatArrIndex = (sectionPoints[0].plotY > sectionNextPoints[0].plotY) ? 0 : 1;\n                            points[concatArrIndex] = points[concatArrIndex].concat(sectionPoints);\n                            nextPoints[concatArrIndex] = nextPoints[concatArrIndex].concat(sectionNextPoints);\n                        }\n                    }\n                    // Render color and negativeColor paths\n                    ['graphsenkouSpanColor', 'graphsenkouSpanNegativeColor'].forEach(function (areaName, i) {\n                        if (points[i].length && nextPoints[i].length) {\n                            senkouSpanTempColor = i === 0 ? color : negativeColor;\n                            drawSenkouSpan({\n                                indicator: indicator,\n                                points: points[i],\n                                nextPoints: nextPoints[i],\n                                color: senkouSpanTempColor,\n                                options: mainLineOptions,\n                                gap: gappedExtend,\n                                graph: indicator[areaName]\n                            });\n                            // Now save line\n                            indicator[areaName] = indicator.graph;\n                            indicator.graphCollection.push(areaName);\n                        }\n                    });\n                }\n                else {\n                    // When user set only senkouSpan style.fill property\n                    drawSenkouSpan({\n                        indicator: indicator,\n                        points: ikhMap.senkouSpanB,\n                        nextPoints: ikhMap.senkouSpanA,\n                        color: color,\n                        options: mainLineOptions,\n                        gap: gappedExtend,\n                        graph: indicator.graphsenkouSpan\n                    });\n                    // Now save line\n                    indicator.graphsenkouSpan = indicator.graph;\n                }\n                // Clean temporary properties:\n                delete indicator.nextPoints;\n                delete indicator.fillGraph;\n                // Restore options and draw the Tenkan line:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.graph = mainLinePath;\n                indicator.color = mainColor;\n            }\n            getGraphPath(points) {\n                const indicator = this;\n                let path = [], spanA, spanAarr = [];\n                points = points || this.points;\n                // Render Senkou Span\n                if (indicator.fillGraph && indicator.nextPoints) {\n                    spanA = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath.call(indicator, \n                    // Reverse points, so Senkou Span A will start from the end:\n                    indicator.nextPoints);\n                    if (spanA && spanA.length) {\n                        spanA[0][0] = 'L';\n                        path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                            .call(indicator, points);\n                        spanAarr = spanA.slice(0, path.length);\n                        for (let i = spanAarr.length - 1; i >= 0; i--) {\n                            path.push(spanAarr[i]);\n                        }\n                    }\n                }\n                else {\n                    path = SeriesRegistry.seriesTypes.sma.prototype.getGraphPath\n                        .apply(indicator, arguments);\n                }\n                return path;\n            }\n            getValues(series, params) {\n                const period = params.period, periodTenkan = params.periodTenkan, periodSenkouSpanB = params.periodSenkouSpanB, xVal = series.xData, yVal = series.yData, xAxis = series.xAxis, yValLen = (yVal && yVal.length) || 0, closestPointRange = getClosestDistance(xAxis.series.map((s) => s.xData || [])), IKH = [], xData = [];\n                let date, slicedTSY, slicedKSY, slicedSSBY, pointTS, pointKS, pointSSB, i, TS, KS, CS, SSA, SSB;\n                // Ikh requires close value\n                if (xVal.length <= period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // Add timestamps at the beginning\n                const dateStart = xVal[0] - period * closestPointRange;\n                for (i = 0; i < period; i++) {\n                    xData.push(dateStart + i * closestPointRange);\n                }\n                for (i = 0; i < yValLen; i++) {\n                    // Tenkan Sen\n                    if (i >= periodTenkan) {\n                        slicedTSY = yVal.slice(i - periodTenkan, i);\n                        pointTS = highlowLevel(slicedTSY);\n                        TS = (pointTS.high + pointTS.low) / 2;\n                    }\n                    if (i >= period) {\n                        slicedKSY = yVal.slice(i - period, i);\n                        pointKS = highlowLevel(slicedKSY);\n                        KS = (pointKS.high + pointKS.low) / 2;\n                        SSA = (TS + KS) / 2;\n                    }\n                    if (i >= periodSenkouSpanB) {\n                        slicedSSBY = yVal.slice(i - periodSenkouSpanB, i);\n                        pointSSB = highlowLevel(slicedSSBY);\n                        SSB = (pointSSB.high + pointSSB.low) / 2;\n                    }\n                    CS = yVal[i][3];\n                    date = xVal[i];\n                    if (typeof IKH[i] === 'undefined') {\n                        IKH[i] = [];\n                    }\n                    if (typeof IKH[i + period - 1] === 'undefined') {\n                        IKH[i + period - 1] = [];\n                    }\n                    IKH[i + period - 1][0] = TS;\n                    IKH[i + period - 1][1] = KS;\n                    IKH[i + period - 1][2] = void 0;\n                    if (typeof IKH[i + 1] === 'undefined') {\n                        IKH[i + 1] = [];\n                    }\n                    IKH[i + 1][2] = CS;\n                    if (i <= period) {\n                        IKH[i + period - 1][3] = void 0;\n                        IKH[i + period - 1][4] = void 0;\n                    }\n                    if (typeof IKH[i + 2 * period - 2] === 'undefined') {\n                        IKH[i + 2 * period - 2] = [];\n                    }\n                    IKH[i + 2 * period - 2][3] = SSA;\n                    IKH[i + 2 * period - 2][4] = SSB;\n                    xData.push(date);\n                }\n                // Add timestamps for further points\n                for (i = 1; i <= period; i++) {\n                    xData.push(date + i * closestPointRange);\n                }\n                return {\n                    values: IKH,\n                    xData: xData,\n                    yData: IKH\n                };\n            }\n        }\n        /**\n         * Ichimoku Kinko Hyo (IKH). This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample stock/indicators/ichimoku-kinko-hyo\n         *         Ichimoku Kinko Hyo indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ichimoku-kinko-hyo\n         * @optionparent plotOptions.ikh\n         */\n        IKHIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 26,\n                /**\n                 * The base period for Tenkan calculations.\n                 */\n                periodTenkan: 9,\n                /**\n                 * The base period for Senkou Span B calculations\n                 */\n                periodSenkouSpanB: 52\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'TENKAN SEN: {point.tenkanSen:.3f}<br/>' +\n                    'KIJUN SEN: {point.kijunSen:.3f}<br/>' +\n                    'CHIKOU SPAN: {point.chikouSpan:.3f}<br/>' +\n                    'SENKOU SPAN A: {point.senkouSpanA:.3f}<br/>' +\n                    'SENKOU SPAN B: {point.senkouSpanB:.3f}<br/>'\n            },\n            /**\n             * The styles for Tenkan line\n             */\n            tenkanLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Kijun line\n             */\n            kijunLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Chikou line\n             */\n            chikouLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span A line\n             */\n            senkouSpanA: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for Senkou Span B line\n             */\n            senkouSpanB: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for area between Senkou Span A and B.\n             */\n            senkouSpan: {\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is above Senkou Span B. Note that if\n                 * a `style.fill` is defined, the `color` takes precedence and\n                 * the `style.fill` is ignored.\n                 *\n                 * @see [senkouSpan.styles.fill](#series.ikh.senkouSpan.styles.fill)\n                 *\n                 * @sample stock/indicators/ichimoku-kinko-hyo\n                 *         Ichimoku Kinko Hyo color\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.color\n                 */\n                /**\n                 * Color of the area between Senkou Span A and B,\n                 * when Senkou Span A is under Senkou Span B.\n                 *\n                 * @sample stock/indicators/ikh-negative-color\n                 *         Ichimoku Kinko Hyo negativeColor\n                 *\n                 * @type      {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                 * @since     7.0.0\n                 * @apioption plotOptions.ikh.senkouSpan.negativeColor\n                 */\n                styles: {\n                    /**\n                     * Color of the area between Senkou Span A and B.\n                     *\n                     * @deprecated\n                     * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n                     */\n                    fill: 'rgba(255, 0, 0, 0.5)'\n                }\n            },\n            dataGrouping: {\n                approximation: 'ichimoku-averages'\n            }\n        });\n        extend(IKHIndicator.prototype, {\n            pointArrayMap: [\n                'tenkanSen',\n                'kijunSen',\n                'chikouSpan',\n                'senkouSpanA',\n                'senkouSpanB'\n            ],\n            pointValKey: 'tenkanSen',\n            nameComponents: ['periodSenkouSpanB', 'period', 'periodTenkan']\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        ApproximationRegistry['ichimoku-averages'] = ichimokuAverages;\n        SeriesRegistry.registerSeriesType('ikh', IKHIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `IKH` series. If the [type](#series.ikh.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ikh\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ichimoku-kinko-hyo\n         * @apioption series.ikh\n         */\n        (''); // add doclet above to transpiled file\n\n        return IKHIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/KeltnerChannels/KeltnerChannelsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Keltner Channels series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.keltnerchannels\n         *\n         * @augments Highcharts.Series\n         */\n        class KeltnerChannelsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, periodATR = params.periodATR, multiplierATR = params.multiplierATR, index = params.index, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Keltner Channels array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                KC = [], seriesEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: period,\n                    index: index\n                }), seriesATR = SeriesRegistry.seriesTypes.atr.prototype.getValues(series, {\n                    period: periodATR\n                }), xData = [], yData = [];\n                // middle line, top line and bottom lineI\n                let ML, TL, BL, date, pointEMA, pointATR, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    pointEMA = seriesEMA.values[i - period];\n                    pointATR = seriesATR.values[i - periodATR];\n                    date = pointEMA[0];\n                    TL = correctFloat(pointEMA[1] + (multiplierATR * pointATR[1]));\n                    BL = correctFloat(pointEMA[1] - (multiplierATR * pointATR[1]));\n                    ML = pointEMA[1];\n                    KC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: KC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Keltner Channels. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js`,\n         * `stock/indicators/atr.js`, and `stock/ema/.js`.\n         *\n         * @sample {highstock} stock/indicators/keltner-channels\n         *         Keltner Channels\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart,showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @optionparent plotOptions.keltnerchannels\n         */\n        KeltnerChannelsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Keltner Channels Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.keltnerchannels.fillColor\n             *\n             */\n            params: {\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                index: 0,\n                period: 20,\n                /**\n                 * The ATR period.\n                 */\n                periodATR: 10,\n                /**\n                 * The ATR multiplier.\n                 */\n                multiplierATR: 2\n            },\n            /**\n             * Bottom line options.\n             *\n             */\n            bottomLine: {\n                /**\n                 * Styles for a bottom line.\n                 *\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * `plotOptions.keltnerchannels.color`\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.keltnerchannels.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1,\n                    lineColor: void 0\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Upper Channel: {point.top}<br/>EMA({series.options.params.period}): {point.middle}<br/>Lower Channel: {point.bottom}<br/>'\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            lineWidth: 1\n        });\n        extend(KeltnerChannelsIndicator.prototype, {\n            nameBase: 'Keltner Channels',\n            areaLinesNames: ['top', 'bottom'],\n            nameComponents: ['period', 'periodATR', 'multiplierATR'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(KeltnerChannelsIndicator);\n        SeriesRegistry.registerSeriesType('keltnerchannels', KeltnerChannelsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Keltner Channels indicator. If the [type](#series.keltnerchannels.type)\n         * option is not specified, it is inherited from[chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.keltnerchannels\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               stacking, showInNavigator\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/keltner-channels\n         * @apioption    series.keltnerchannels\n         */\n        ''; // to include the above in the js output\n\n        return KeltnerChannelsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Klinger/KlingerIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Klinger oscillator series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.klinger\n         *\n         * @augments Highcharts.Series\n         */\n        class KlingerIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            calculateTrend(yVal, i) {\n                const isUpward = yVal[i][1] + yVal[i][2] + yVal[i][3] >\n                    yVal[i - 1][1] + yVal[i - 1][2] + yVal[i - 1][3];\n                return isUpward ? 1 : -1;\n            }\n            // Checks if the series and volumeSeries are accessible, number of\n            // points.x is longer than period, is series has OHLC data\n            isValidData(firstYVal) {\n                const chart = this.chart, options = this.options, series = this.linkedParent, isSeriesOHLC = isArray(firstYVal) &&\n                    firstYVal.length === 4, volumeSeries = this.volumeSeries ||\n                    (this.volumeSeries =\n                        chart.get(options.params.volumeSeriesID));\n                if (!volumeSeries) {\n                    error('Series ' +\n                        options.params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                }\n                const isLengthValid = [series, volumeSeries].every(function (series) {\n                    return series && series.xData && series.xData.length >=\n                        options.params.slowAvgPeriod;\n                });\n                return !!(isLengthValid && isSeriesOHLC);\n            }\n            getCM(previousCM, DM, trend, previousTrend, prevoiusDM) {\n                return correctFloat(DM + (trend === previousTrend ? previousCM : prevoiusDM));\n            }\n            getDM(high, low) {\n                return correctFloat(high - low);\n            }\n            getVolumeForce(yVal) {\n                const volumeForce = [];\n                let CM = 0, // cumulative measurement\n                DM, // daily measurement\n                force, i = 1, // start from second point\n                previousCM = 0, previousDM = yVal[0][1] - yVal[0][2], // initial DM\n                previousTrend = 0, trend;\n                for (i; i < yVal.length; i++) {\n                    trend = this.calculateTrend(yVal, i);\n                    DM = this.getDM(yVal[i][1], yVal[i][2]);\n                    // For the first iteration when the previousTrend doesn't exist,\n                    // previousCM doesn't exist either, but it doesn't matter becouse\n                    // it's filltered out in the getCM method in else statement,\n                    // (in this iteration, previousCM can be raplaced with the DM).\n                    CM = this.getCM(previousCM, DM, trend, previousTrend, previousDM);\n                    force = this.volumeSeries.yData[i] *\n                        trend * Math.abs(2 * ((DM / CM) - 1)) * 100;\n                    volumeForce.push([force]);\n                    // Before next iteration, assign the current as the previous.\n                    previousTrend = trend;\n                    previousCM = CM;\n                    previousDM = DM;\n                }\n                return volumeForce;\n            }\n            getEMA(yVal, prevEMA, SMA, EMApercent, index, i, xVal) {\n                return EMAIndicator.prototype.calculateEma(xVal || [], yVal, typeof i === 'undefined' ? 1 : i, EMApercent, prevEMA, typeof index === 'undefined' ? -1 : index, SMA);\n            }\n            getSMA(period, index, values) {\n                return EMAIndicator.prototype\n                    .accumulatePeriodPoints(period, index, values) / period;\n            }\n            getValues(series, params) {\n                const Klinger = [], xVal = series.xData, yVal = series.yData, xData = [], yData = [], calcSingal = [];\n                let KO, i = 0, fastEMA = 0, slowEMA, \n                // signalEMA: number|undefined = void 0,\n                previousFastEMA = void 0, previousSlowEMA = void 0, signal = null;\n                // If the necessary conditions are not fulfilled, don't proceed.\n                if (!this.isValidData(yVal[0])) {\n                    return;\n                }\n                // Calculate the Volume Force array.\n                const volumeForce = this.getVolumeForce(yVal);\n                // Calculate SMA for the first points.\n                const SMAFast = this.getSMA(params.fastAvgPeriod, 0, volumeForce), SMASlow = this.getSMA(params.slowAvgPeriod, 0, volumeForce);\n                // Calculate EMApercent for the first points.\n                const fastEMApercent = 2 / (params.fastAvgPeriod + 1), slowEMApercent = 2 / (params.slowAvgPeriod + 1);\n                // Calculate KO\n                for (i; i < yVal.length; i++) {\n                    // Get EMA for fast period.\n                    if (i >= params.fastAvgPeriod) {\n                        fastEMA = this.getEMA(volumeForce, previousFastEMA, SMAFast, fastEMApercent, 0, i, xVal)[1];\n                        previousFastEMA = fastEMA;\n                    }\n                    // Get EMA for slow period.\n                    if (i >= params.slowAvgPeriod) {\n                        slowEMA = this.getEMA(volumeForce, previousSlowEMA, SMASlow, slowEMApercent, 0, i, xVal)[1];\n                        previousSlowEMA = slowEMA;\n                        KO = correctFloat(fastEMA - slowEMA);\n                        calcSingal.push(KO);\n                        // Calculate signal SMA\n                        if (calcSingal.length >= params.signalPeriod) {\n                            signal = calcSingal.slice(-params.signalPeriod)\n                                .reduce((prev, curr) => prev + curr) / params.signalPeriod;\n                        }\n                        Klinger.push([xVal[i], KO, signal]);\n                        xData.push(xVal[i]);\n                        yData.push([KO, signal]);\n                    }\n                }\n                return {\n                    values: Klinger,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Klinger oscillator. This series requires the `linkedTo` option to be set\n         * and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/klinger\n         *         Klinger oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/klinger\n         * @optionparent plotOptions.klinger\n         */\n        KlingerIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Klinger Oscillator.\n             *\n             * @excluding index, period\n             */\n            params: {\n                /**\n                 * The fast period for indicator calculations.\n                 */\n                fastAvgPeriod: 34,\n                /**\n                 * The slow period for indicator calculations.\n                 */\n                slowAvgPeriod: 55,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 13,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            signalLine: {\n                /**\n                 * Styles for a signal line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.klinger.color\n                     * ](#plotOptions.klinger.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: '#ff0000'\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color: {point.color}\">\\u25CF</span>' +\n                    '<b> {series.name}</b><br/>' +\n                    '<span style=\"color: {point.color}\">Klinger</span>: ' +\n                    '{point.y}<br/>' +\n                    '<span style=\"color: ' +\n                    '{point.series.options.signalLine.styles.lineColor}\">' +\n                    'Signal</span>' +\n                    ': {point.signal}<br/>'\n            }\n        });\n        extend(KlingerIndicator.prototype, {\n            areaLinesNames: [],\n            linesApiNames: ['signalLine'],\n            nameBase: 'Klinger',\n            nameComponents: ['fastAvgPeriod', 'slowAvgPeriod'],\n            pointArrayMap: ['y', 'signal'],\n            parallelArrays: ['x', 'y', 'signal'],\n            pointValKey: 'y'\n        });\n        MultipleLinesComposition.compose(KlingerIndicator);\n        SeriesRegistry.registerSeriesType('klinger', KlingerIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Klinger oscillator. If the [type](#series.klinger.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.klinger\n         * @since 9.1.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/klinger\n         * @apioption series.klinger\n         */\n        ''; // to include the above in the js output\n\n        return KlingerIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MACD/MACDIndicator.js', [_modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (H, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { noop } = H;\n        const { column: ColumnSeries, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, correctFloat, defined, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MACD series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.macd\n         *\n         * @augments Highcharts.Series\n         */\n        class MACDIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                SeriesRegistry.seriesTypes.sma.prototype.init.apply(this, arguments);\n                const originalColor = this.color;\n                // Check whether series is initialized. It may be not initialized,\n                // when any of required indicators is missing.\n                if (this.options) {\n                    // If the default colour doesn't set, get the next available from\n                    // the array and apply it #15608.\n                    if (defined(this.colorIndex)) {\n                        if (this.options.signalLine &&\n                            this.options.signalLine.styles &&\n                            !this.options.signalLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.signalLine.styles.lineColor =\n                                this.color;\n                        }\n                        if (this.options.macdLine &&\n                            this.options.macdLine.styles &&\n                            !this.options.macdLine.styles.lineColor) {\n                            this.options.colorIndex = this.colorIndex + 1;\n                            this.getCyclic('color', void 0, this.chart.options.colors);\n                            this.options.macdLine.styles.lineColor =\n                                this.color;\n                        }\n                    }\n                    // Zones have indexes automatically calculated, we need to\n                    // translate them to support multiple lines within one indicator\n                    this.macdZones = {\n                        zones: this.options.macdLine.zones,\n                        startIndex: 0\n                    };\n                    this.signalZones = {\n                        zones: this.macdZones.zones.concat(this.options.signalLine.zones),\n                        startIndex: this.macdZones.zones.length\n                    };\n                }\n                // Reset color and index #15608.\n                this.color = originalColor;\n            }\n            toYData(point) {\n                return [point.y, point.signal, point.MACD];\n            }\n            translate() {\n                const indicator = this, plotNames = ['plotSignal', 'plotMACD'];\n                H.seriesTypes.column.prototype.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    [point.signal, point.MACD].forEach(function (value, i) {\n                        if (value !== null) {\n                            point[plotNames[i]] =\n                                indicator.yAxis.toPixels(value, true);\n                        }\n                    });\n                });\n            }\n            destroy() {\n                // this.graph is null due to removing two times the same SVG element\n                this.graph = null;\n                this.graphmacd = this.graphmacd && this.graphmacd.destroy();\n                this.graphsignal = this.graphsignal && this.graphsignal.destroy();\n                SeriesRegistry.seriesTypes.sma.prototype.destroy.apply(this, arguments);\n            }\n            drawGraph() {\n                const indicator = this, mainLinePoints = indicator.points, mainLineOptions = indicator.options, histogramZones = indicator.zones, gappedExtend = {\n                    options: {\n                        gapSize: mainLineOptions.gapSize\n                    }\n                }, otherSignals = [[], []];\n                let point, pointsLength = mainLinePoints.length;\n                // Generate points for top and bottom lines:\n                while (pointsLength--) {\n                    point = mainLinePoints[pointsLength];\n                    if (defined(point.plotMACD)) {\n                        otherSignals[0].push({\n                            plotX: point.plotX,\n                            plotY: point.plotMACD,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                    if (defined(point.plotSignal)) {\n                        otherSignals[1].push({\n                            plotX: point.plotX,\n                            plotY: point.plotSignal,\n                            isNull: !defined(point.plotMACD)\n                        });\n                    }\n                }\n                // Modify options and generate smoothing line:\n                ['macd', 'signal'].forEach((lineName, i) => {\n                    indicator.points = otherSignals[i];\n                    indicator.options = merge(mainLineOptions[`${lineName}Line`]?.styles || {}, gappedExtend);\n                    indicator.graph = indicator[`graph${lineName}`];\n                    // Zones extension:\n                    indicator.zones = (indicator[`${lineName}Zones`].zones || []).slice(indicator[`${lineName}Zones`].startIndex || 0);\n                    SeriesRegistry.seriesTypes.sma.prototype.drawGraph.call(indicator);\n                    indicator[`graph${lineName}`] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = mainLinePoints;\n                indicator.options = mainLineOptions;\n                indicator.zones = histogramZones;\n            }\n            applyZones() {\n                // Histogram zones are handled by drawPoints method\n                // Here we need to apply zones for all lines\n                const histogramZones = this.zones;\n                // signalZones.zones contains all zones:\n                this.zones = this.signalZones.zones;\n                SeriesRegistry.seriesTypes.sma.prototype.applyZones.call(this);\n                // applyZones hides only main series.graph, hide macd line manually\n                if (this.graphmacd && this.options.macdLine.zones.length) {\n                    this.graphmacd.hide();\n                }\n                this.zones = histogramZones;\n            }\n            getValues(series, params) {\n                const indexToShift = (params.longPeriod - params.shortPeriod), // #14197\n                MACD = [], xMACD = [], yMACD = [];\n                let shortEMA, longEMA, i, j = 0, signalLine = [];\n                if (series.xData.length <\n                    params.longPeriod + params.signalPeriod) {\n                    return;\n                }\n                // Calculating the short and long EMA used when calculating the MACD\n                shortEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.shortPeriod,\n                    index: params.index\n                });\n                longEMA = SeriesRegistry.seriesTypes.ema.prototype.getValues(series, {\n                    period: params.longPeriod,\n                    index: params.index\n                });\n                shortEMA = shortEMA.values;\n                longEMA = longEMA.values;\n                // Subtract each Y value from the EMA's and create the new dataset\n                // (MACD)\n                for (i = 0; i <= shortEMA.length; i++) {\n                    if (defined(longEMA[i]) &&\n                        defined(longEMA[i][1]) &&\n                        defined(shortEMA[i + indexToShift]) &&\n                        defined(shortEMA[i + indexToShift][0])) {\n                        MACD.push([\n                            shortEMA[i + indexToShift][0],\n                            0,\n                            null,\n                            shortEMA[i + indexToShift][1] -\n                                longEMA[i][1]\n                        ]);\n                    }\n                }\n                // Set the Y and X data of the MACD. This is used in calculating the\n                // signal line.\n                for (i = 0; i < MACD.length; i++) {\n                    xMACD.push(MACD[i][0]);\n                    yMACD.push([0, null, MACD[i][3]]);\n                }\n                // Setting the signalline (Signal Line: X-day EMA of MACD line).\n                signalLine = SeriesRegistry.seriesTypes.ema.prototype.getValues({\n                    xData: xMACD,\n                    yData: yMACD\n                }, {\n                    period: params.signalPeriod,\n                    index: 2\n                });\n                signalLine = signalLine.values;\n                // Setting the MACD Histogram. In comparison to the loop with pure\n                // MACD this loop uses MACD x value not xData.\n                for (i = 0; i < MACD.length; i++) {\n                    // detect the first point\n                    if (MACD[i][0] >= signalLine[0][0]) {\n                        MACD[i][2] = signalLine[j][1];\n                        yMACD[i] = [0, signalLine[j][1], MACD[i][3]];\n                        if (MACD[i][3] === null) {\n                            MACD[i][1] = 0;\n                            yMACD[i][0] = 0;\n                        }\n                        else {\n                            MACD[i][1] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                            yMACD[i][0] = correctFloat(MACD[i][3] -\n                                signalLine[j][1]);\n                        }\n                        j++;\n                    }\n                }\n                return {\n                    values: MACD,\n                    xData: xMACD,\n                    yData: yMACD\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Moving Average Convergence Divergence (MACD). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample stock/indicators/macd\n         *         MACD indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/macd\n         * @optionparent plotOptions.macd\n         */\n        MACDIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The short period for indicator calculations.\n                 */\n                shortPeriod: 12,\n                /**\n                 * The long period for indicator calculations.\n                 */\n                longPeriod: 26,\n                /**\n                 * The base period for signal calculations.\n                 */\n                signalPeriod: 9,\n                period: 26\n            },\n            /**\n             * The styles for signal line\n             */\n            signalLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * The styles for macd line\n             */\n            macdLine: {\n                /**\n                 * @sample stock/indicators/macd-zones\n                 *         Zones in MACD\n                 *\n                 * @extends plotOptions.macd.zones\n                 */\n                zones: [],\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type  {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * @type {number|null}\n             */\n            threshold: 0,\n            groupPadding: 0.1,\n            pointPadding: 0.1,\n            crisp: false,\n            states: {\n                hover: {\n                    halo: {\n                        size: 0\n                    }\n                }\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> <b> {series.name}</b><br/>' +\n                    'Value: {point.MACD}<br/>' +\n                    'Signal: {point.signal}<br/>' +\n                    'Histogram: {point.y}<br/>'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            },\n            minPointLength: 0\n        });\n        extend(MACDIndicator.prototype, {\n            nameComponents: ['longPeriod', 'shortPeriod', 'signalPeriod'],\n            // \"y\" value is treated as Histogram data\n            pointArrayMap: ['y', 'signal', 'MACD'],\n            parallelArrays: ['x', 'y', 'signal', 'MACD'],\n            pointValKey: 'y',\n            // Columns support:\n            markerAttribs: noop,\n            getColumnMetrics: H.seriesTypes.column.prototype.getColumnMetrics,\n            crispCol: H.seriesTypes.column.prototype.crispCol,\n            drawPoints: H.seriesTypes.column.prototype.drawPoints\n        });\n        SeriesRegistry.registerSeriesType('macd', MACDIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MACD` series. If the [type](#series.macd.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.macd\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/macd\n         * @apioption series.macd\n         */\n        ''; // to include the above in the js output\n\n        return MACDIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/MFI/MFIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Money Flow Index indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, error, isArray } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function sumArray(array) {\n            return array.reduce(function (prev, cur) {\n                return prev + cur;\n            });\n        }\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateTypicalPrice(point) {\n            return (point[1] + point[2] + point[3]) / 3;\n        }\n        function calculateRawMoneyFlow(typicalPrice, volume) {\n            return typicalPrice * volume;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The MFI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.mfi\n         *\n         * @augments Highcharts.Series\n         */\n        class MFIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, volumeSeries = series.chart.get(params.volumeSeriesID), yValVolume = (volumeSeries && volumeSeries.yData), MFI = [], xData = [], yData = [], positiveMoneyFlow = [], negativeMoneyFlow = [];\n                let newTypicalPrice, oldTypicalPrice, rawMoneyFlow, negativeMoneyFlowSum, positiveMoneyFlowSum, moneyFlowRatio, MFIPoint, i, isUp = false, \n                // MFI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                range = 1;\n                if (!volumeSeries) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                // MFI requires high low and close values\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 ||\n                    !yValVolume) {\n                    return;\n                }\n                // Calculate first typical price\n                newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                // Accumulate first N-points\n                while (range < period + 1) {\n                    // Calculate if up or down\n                    oldTypicalPrice = newTypicalPrice;\n                    newTypicalPrice = calculateTypicalPrice(yVal[range]);\n                    isUp = newTypicalPrice >= oldTypicalPrice;\n                    // Calculate raw money flow\n                    rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[range]);\n                    // Add to array\n                    positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                    negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    range++;\n                }\n                for (i = range - 1; i < yValLen; i++) {\n                    if (i > range - 1) {\n                        // Remove first point from array\n                        positiveMoneyFlow.shift();\n                        negativeMoneyFlow.shift();\n                        // Calculate if up or down\n                        oldTypicalPrice = newTypicalPrice;\n                        newTypicalPrice = calculateTypicalPrice(yVal[i]);\n                        isUp = newTypicalPrice > oldTypicalPrice;\n                        // Calculate raw money flow\n                        rawMoneyFlow = calculateRawMoneyFlow(newTypicalPrice, yValVolume[i]);\n                        // Add to array\n                        positiveMoneyFlow.push(isUp ? rawMoneyFlow : 0);\n                        negativeMoneyFlow.push(isUp ? 0 : rawMoneyFlow);\n                    }\n                    // Calculate sum of negative and positive money flow:\n                    negativeMoneyFlowSum = sumArray(negativeMoneyFlow);\n                    positiveMoneyFlowSum = sumArray(positiveMoneyFlow);\n                    moneyFlowRatio = positiveMoneyFlowSum / negativeMoneyFlowSum;\n                    MFIPoint = toFixed(100 - (100 / (1 + moneyFlowRatio)), decimals);\n                    MFI.push([xVal[i], MFIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(MFIPoint);\n                }\n                return {\n                    values: MFI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Money Flow Index. This series requires `linkedTo` option to be set and\n         * should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/mfi\n         *         Money Flow Index Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/mfi\n         * @optionparent plotOptions.mfi\n         */\n        MFIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * The id of volume series which is mandatory.\n                 * For example using OHLC data, volumeSeriesID='volume' means\n                 * the indicator will be calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume',\n                /**\n                 * Number of maximum decimals that are used in MFI calculations.\n                 */\n                decimals: 4\n            }\n        });\n        extend(MFIIndicator.prototype, {\n            nameBase: 'Money Flow Index'\n        });\n        SeriesRegistry.registerSeriesType('mfi', MFIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `MFI` series. If the [type](#series.mfi.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.mfi\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/mfi\n         * @apioption series.mfi\n         */\n        ''; // to include the above in the js output\n\n        return MFIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Momentum/MomentumIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function populateAverage(xVal, yVal, i, period, index) {\n            const mmY = yVal[i - 1][index] - yVal[i - period - 1][index], mmX = xVal[i - 1];\n            return [mmX, mmY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Momentum series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.momentum\n         *\n         * @augments Highcharts.Series\n         */\n        class MomentumIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, MM = [], xData = [], yData = [];\n                let i, MMPoint;\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (!isArray(yVal[0])) {\n                    return;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = (period + 1); i < yValLen; i++) {\n                    MMPoint = populateAverage(xVal, yVal, i, period, index);\n                    MM.push(MMPoint);\n                    xData.push(MMPoint[0]);\n                    yData.push(MMPoint[1]);\n                }\n                MMPoint = populateAverage(xVal, yVal, i, period, index);\n                MM.push(MMPoint);\n                xData.push(MMPoint[0]);\n                yData.push(MMPoint[1]);\n                return {\n                    values: MM,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Momentum. This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/momentum\n         *         Momentum indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/momentum\n         * @optionparent plotOptions.momentum\n         */\n        MomentumIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3\n            }\n        });\n        extend(MomentumIndicator.prototype, {\n            nameBase: 'Momentum'\n        });\n        SeriesRegistry.registerSeriesType('momentum', MomentumIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Momentum` series. If the [type](#series.momentum.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.momentum\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/momentum\n         * @apioption series.momentum\n         */\n        ''; // to include the above in the js output\n\n        return MomentumIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/NATR/NATRIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The NATR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.natr\n         *\n         * @augments Highcharts.Series\n         */\n        class NATRIndicator extends ATRIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const atrData = (super.getValues.apply(this, arguments)), atrLength = atrData.values.length, yVal = series.yData;\n                let i = 0, period = params.period - 1;\n                if (!atrData) {\n                    return;\n                }\n                for (; i < atrLength; i++) {\n                    atrData.yData[i] = (atrData.values[i][1] / yVal[period][3] * 100);\n                    atrData.values[i][1] = atrData.yData[i];\n                    period++;\n                }\n                return atrData;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Normalized average true range indicator (NATR). This series requires\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js` and `stock/indicators/atr.js`.\n         *\n         * @sample {highstock} stock/indicators/natr\n         *         NATR indicator\n         *\n         * @extends      plotOptions.atr\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/natr\n         * @optionparent plotOptions.natr\n         */\n        NATRIndicator.defaultOptions = merge(ATRIndicator.defaultOptions, {\n            tooltip: {\n                valueSuffix: '%'\n            }\n        });\n        SeriesRegistry.registerSeriesType('natr', NATRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `NATR` series. If the [type](#series.natr.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.natr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/atr\n         * @requires  stock/indicators/natr\n         * @apioption series.natr\n         */\n        ''; // to include the above in the js output'\n\n        return NATRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/OBV/OBVIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, error, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The OBV series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.obv\n         *\n         * @augments Highcharts.Series\n         */\n        class OBVIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const volumeSeries = series.chart.get(params.volumeSeriesID), xVal = series.xData, yVal = series.yData, OBV = [], xData = [], yData = [], hasOHLC = !isNumber(yVal[0]);\n                let OBVPoint = [], i = 1, previousOBV = 0, curentOBV = 0, previousClose = 0, curentClose = 0, volume;\n                // Checks if volume series exists.\n                if (volumeSeries) {\n                    volume = volumeSeries.yData;\n                    // Add first point and get close value.\n                    OBVPoint = [xVal[0], previousOBV];\n                    previousClose = hasOHLC ?\n                        yVal[0][3] : yVal[0];\n                    OBV.push(OBVPoint);\n                    xData.push(xVal[0]);\n                    yData.push(OBVPoint[1]);\n                    for (i; i < yVal.length; i++) {\n                        curentClose = hasOHLC ?\n                            yVal[i][3] : yVal[i];\n                        if (curentClose > previousClose) { // up\n                            curentOBV = previousOBV + volume[i];\n                        }\n                        else if (curentClose === previousClose) { // constant\n                            curentOBV = previousOBV;\n                        }\n                        else { // down\n                            curentOBV = previousOBV - volume[i];\n                        }\n                        // Add point.\n                        OBVPoint = [xVal[i], curentOBV];\n                        // Assign current as previous for next iteration.\n                        previousOBV = curentOBV;\n                        previousClose = curentClose;\n                        OBV.push(OBVPoint);\n                        xData.push(xVal[i]);\n                        yData.push(OBVPoint[1]);\n                    }\n                }\n                else {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, series.chart);\n                    return;\n                }\n                return {\n                    values: OBV,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * On-Balance Volume (OBV) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file. Through the `volumeSeriesID`\n         * there also should be linked the volume series.\n         *\n         * @sample stock/indicators/obv\n         *         OBV indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/obv\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @optionparent plotOptions.obv\n         */\n        OBVIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The id of another series to use its data as volume data for the\n                 * indiator calculation.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            tooltip: {\n                valueDecimals: 0\n            }\n        });\n        extend(OBVIndicator.prototype, {\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('obv', OBVIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `OBV` series. If the [type](#series.obv.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.obv\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/obv\n         * @apioption series.obv\n         */\n        ''; // to include the above in the js output\n\n        return OBVIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const SMAPoint = SeriesRegistry.seriesTypes.sma.prototype.pointClass;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function destroyExtraLabels(point, functionName) {\n            const props = point.series.pointArrayMap;\n            let prop, i = props.length;\n            SeriesRegistry.seriesTypes.sma.prototype.pointClass.prototype[functionName].call(point);\n            while (i--) {\n                prop = 'dataLabel' + props[i];\n                // S4 dataLabel could be removed by parent method:\n                if (point[prop] && point[prop].element) {\n                    point[prop].destroy();\n                }\n                point[prop] = null;\n            }\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class PivotPointsPoint extends SMAPoint {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            destroyElements() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n            // This method is called when removing points, e.g. series.update()\n            destroy() {\n                destroyExtraLabels(this, 'destroyElements');\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return PivotPointsPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PivotPoints/PivotPointsIndicator.js', [_modules['Stock/Indicators/PivotPoints/PivotPointsPoint.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (PivotPointsPoint, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend, defined, isArray } = U;\n        /**\n         *\n         *  Class\n         *\n         **/\n        /**\n         * The Pivot Points series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pivotpoints\n         *\n         * @augments Highcharts.Series\n         */\n        class PivotPointsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            toYData(point) {\n                return [point.P]; // The rest should not affect extremes\n            }\n            translate() {\n                const indicator = this;\n                super.translate.apply(indicator);\n                indicator.points.forEach(function (point) {\n                    indicator.pointArrayMap.forEach(function (value) {\n                        if (defined(point[value])) {\n                            point['plot' + value] = (indicator.yAxis.toPixels(point[value], true));\n                        }\n                    });\n                });\n                // Pivot points are rendered as horizontal lines\n                // And last point start not from the next one (as it's the last one)\n                // But from the approximated last position in a given range\n                indicator.plotEndPoint = indicator.xAxis.toPixels(indicator.endPoint, true);\n            }\n            getGraphPath(points) {\n                const indicator = this, allPivotPoints = ([[], [], [], [], [], [], [], [], []]), pointArrayMapLength = indicator.pointArrayMap.length;\n                let endPoint = indicator.plotEndPoint, path = [], position, point, pointsLength = points.length, i;\n                while (pointsLength--) {\n                    point = points[pointsLength];\n                    for (i = 0; i < pointArrayMapLength; i++) {\n                        position = indicator.pointArrayMap[i];\n                        if (defined(point[position])) {\n                            allPivotPoints[i].push({\n                                // Start left:\n                                plotX: point.plotX,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // Go to right:\n                                plotX: endPoint,\n                                plotY: point['plot' + position],\n                                isNull: false\n                            }, {\n                                // And add null points in path to generate breaks:\n                                plotX: endPoint,\n                                plotY: null,\n                                isNull: true\n                            });\n                        }\n                    }\n                    endPoint = point.plotX;\n                }\n                allPivotPoints.forEach((pivotPoints) => {\n                    path = path.concat(super.getGraphPath.call(indicator, pivotPoints));\n                });\n                return path;\n            }\n            // TODO: Rewrite this logic to use multiple datalabels\n            drawDataLabels() {\n                const indicator = this, pointMapping = indicator.pointArrayMap;\n                let currentLabel, pointsLength, point, i;\n                if (indicator.options.dataLabels.enabled) {\n                    pointsLength = indicator.points.length;\n                    // For every Ressitance/Support group we need to render labels.\n                    // Add one more item, which will just store dataLabels from\n                    // previous iteration\n                    pointMapping.concat([false]).forEach((position, k) => {\n                        i = pointsLength;\n                        while (i--) {\n                            point = indicator.points[i];\n                            if (!position) {\n                                // Store S4 dataLabel too:\n                                point['dataLabel' + pointMapping[k - 1]] =\n                                    point.dataLabel;\n                            }\n                            else {\n                                point.y = point[position];\n                                point.pivotLine = position;\n                                point.plotY = point['plot' + position];\n                                currentLabel = point['dataLabel' + position];\n                                // Store previous label\n                                if (k) {\n                                    point['dataLabel' + pointMapping[k - 1]] = point.dataLabel;\n                                }\n                                if (!point.dataLabels) {\n                                    point.dataLabels = [];\n                                }\n                                point.dataLabels[0] = point.dataLabel =\n                                    currentLabel =\n                                        currentLabel && currentLabel.element ?\n                                            currentLabel :\n                                            null;\n                            }\n                        }\n                        super.drawDataLabels\n                            .call(indicator);\n                    });\n                }\n            }\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, placement = this[params.algorithm + 'Placement'], \n                // 0- from, 1- to, 2- R1, 3- R2, 4- pivot, 5- S1 etc.\n                PP = [], xData = [], yData = [];\n                let endTimestamp, slicedXLen, slicedX, slicedY, lastPP, pivot, avg, i;\n                // Pivot Points requires high, low and close values\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period + 1; i <= yValLen + period; i += period) {\n                    slicedX = xVal.slice(i - period - 1, i);\n                    slicedY = yVal.slice(i - period - 1, i);\n                    slicedXLen = slicedX.length;\n                    endTimestamp = slicedX[slicedXLen - 1];\n                    pivot = this.getPivotAndHLC(slicedY);\n                    avg = placement(pivot);\n                    lastPP = PP.push([endTimestamp]\n                        .concat(avg));\n                    xData.push(endTimestamp);\n                    yData.push(PP[lastPP - 1].slice(1));\n                }\n                // We don't know exact position in ordinal axis\n                // So we use simple logic:\n                // Get first point in last range, calculate visible average range\n                // and multiply by period\n                this.endPoint = slicedX[0] + ((endTimestamp - slicedX[0]) /\n                    slicedXLen) * period;\n                return {\n                    values: PP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            getPivotAndHLC(values) {\n                const close = values[values.length - 1][3];\n                let high = -Infinity, low = Infinity;\n                values.forEach(function (p) {\n                    high = Math.max(high, p[1]);\n                    low = Math.min(low, p[2]);\n                });\n                const pivot = (high + low + close) / 3;\n                return [pivot, high, low, close];\n            }\n            standardPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    null,\n                    values[0] + diff,\n                    values[0] * 2 - values[2],\n                    values[0],\n                    values[0] * 2 - values[1],\n                    values[0] - diff,\n                    null,\n                    null\n                ];\n                return avg;\n            }\n            camarillaPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    values[3] + diff * 1.5,\n                    values[3] + diff * 1.25,\n                    values[3] + diff * 1.1666,\n                    values[3] + diff * 1.0833,\n                    values[0],\n                    values[3] - diff * 1.0833,\n                    values[3] - diff * 1.1666,\n                    values[3] - diff * 1.25,\n                    values[3] - diff * 1.5\n                ];\n                return avg;\n            }\n            fibonacciPlacement(values) {\n                const diff = values[1] - values[2], avg = [\n                    null,\n                    values[0] + diff,\n                    values[0] + diff * 0.618,\n                    values[0] + diff * 0.382,\n                    values[0],\n                    values[0] - diff * 0.382,\n                    values[0] - diff * 0.618,\n                    values[0] - diff,\n                    null\n                ];\n                return avg;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Pivot points indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/pivot-points\n         *         Pivot points\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/pivotpoints\n         * @optionparent plotOptions.pivotpoints\n         */\n        PivotPointsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 28,\n                /**\n                 * Algorithm used to calculate ressistance and support lines based\n                 * on pivot points. Implemented algorithms: `'standard'`,\n                 * `'fibonacci'` and `'camarilla'`\n                 */\n                algorithm: 'standard'\n            },\n            marker: {\n                enabled: false\n            },\n            enableMouseTracking: false,\n            dataLabels: {\n                enabled: true,\n                format: '{point.pivotLine}'\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PivotPointsIndicator.prototype, {\n            nameBase: 'Pivot Points',\n            pointArrayMap: ['R4', 'R3', 'R2', 'R1', 'P', 'S1', 'S2', 'S3', 'S4'],\n            pointValKey: 'P',\n            pointClass: PivotPointsPoint\n        });\n        /* *\n         *\n         *  Registry\n         *\n         * */\n        SeriesRegistry.registerSeriesType('pivotpoints', PivotPointsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A pivot points indicator. If the [type](#series.pivotpoints.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.pivotpoints\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/pivotpoints\n         * @apioption series.pivotpoints\n         */\n        ''; // to include the above in the js output'\n\n        return PivotPointsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PPO/PPOIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { ema: EMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge, error } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The PPO series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.ppo\n         *\n         * @augments Highcharts.Series\n         */\n        class PPOIndicator extends EMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, index = params.index, \n                // 0- date, 1- Percentage Price Oscillator\n                PPO = [], xData = [], yData = [];\n                let oscillator, i;\n                // Check if periods are correct\n                if (periods.length !== 2 || periods[1] <= periods[0]) {\n                    error('Error: \"PPO requires two periods. Notice, first period ' +\n                        'should be lower than the second one.\"');\n                    return;\n                }\n                // Shorter Period EMA\n                const SPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[0]\n                });\n                // Longer Period EMA\n                const LPE = super.getValues.call(this, series, {\n                    index: index,\n                    period: periods[1]\n                });\n                // Check if ema is calculated properly, if not skip\n                if (!SPE || !LPE) {\n                    return;\n                }\n                const periodsOffset = periods[1] - periods[0];\n                for (i = 0; i < LPE.yData.length; i++) {\n                    oscillator = correctFloat((SPE.yData[i + periodsOffset] -\n                        LPE.yData[i]) /\n                        LPE.yData[i] *\n                        100);\n                    PPO.push([LPE.xData[i], oscillator]);\n                    xData.push(LPE.xData[i]);\n                    yData.push(oscillator);\n                }\n                return {\n                    values: PPO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Percentage Price Oscillator. This series requires the\n         * `linkedTo` option to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/ppo\n         *         Percentage Price Oscillator\n         *\n         * @extends      plotOptions.ema\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/ppo\n         * @optionparent plotOptions.ppo\n         */\n        PPOIndicator.defaultOptions = merge(EMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Percentage Price Oscillator series\n             * points.\n             *\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * Periods for Percentage Price Oscillator calculations.\n                 *\n                 * @type    {Array<number>}\n                 * @default [12, 26]\n                 */\n                periods: [12, 26]\n            }\n        });\n        extend(PPOIndicator.prototype, {\n            nameBase: 'PPO',\n            nameComponents: ['periods']\n        });\n        SeriesRegistry.registerSeriesType('ppo', PPOIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Percentage Price Oscillator` series. If the [type](#series.ppo.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.ppo\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/ppo\n         * @apioption series.ppo\n         */\n        ''; // to include the above in the js output\n\n        return PPOIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ArrayUtilities.js', [], function () {\n        /**\n         *\n         *  (c) 2010-2024 Pawel Fus & Daniel Studencki\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * Get extremes of array filled by OHLC data.\n         *\n         * @private\n         *\n         * @param {Array<Array<number>>} arr\n         * Array of OHLC points (arrays).\n         *\n         * @param {number} minIndex\n         * Index of \"low\" value in point array.\n         *\n         * @param {number} maxIndex\n         * Index of \"high\" value in point array.\n         *\n         * @return {Array<number,number>}\n         * Returns array with min and max value.\n         */\n        function getArrayExtremes(arr, minIndex, maxIndex) {\n            return arr.reduce((prev, target) => [\n                Math.min(prev[0], target[minIndex]),\n                Math.max(prev[1], target[maxIndex])\n            ], [Number.MAX_VALUE, -Number.MAX_VALUE]);\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        const ArrayUtilities = {\n            getArrayExtremes\n        };\n\n        return ArrayUtilities;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PC/PCIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Color/Palettes.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, Palettes, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Channel series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.pc\n         *\n         * @augments Highcharts.Series\n         */\n        class PCIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PC = [], \n                // middle line, top line and bottom line\n                low = 2, high = 1, xData = [], yData = [];\n                let ML, TL, BL, date, slicedY, extremes, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    date = xVal[i - 1];\n                    slicedY = yVal.slice(i - period, i);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    TL = extremes[1];\n                    BL = extremes[0];\n                    ML = (TL + BL) / 2;\n                    PC.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Price channel (PC). This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/price-channel\n         *         Price Channel\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @optionparent plotOptions.pc\n         */\n        PCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Price channel Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      background fill between lines\n             *\n             * @type {Highcharts.Color}\n             * @apioption plotOptions.pc.fillColor\n             *\n             */\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 20\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Color of the top line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[2],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Color of the bottom line. If not set, it's inherited from\n                     * [plotOptions.pc.color](#plotOptions.pc.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: Palettes.colors[8],\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(PCIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            nameBase: 'Price Channel',\n            nameComponents: ['period'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PCIndicator);\n        SeriesRegistry.registerSeriesType('pc', PCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Price channel indicator. If the [type](#series.pc.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends      series,plotOptions.pc\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *               joinBy, keys, navigatorOptions, pointInterval,\n         *               pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *               showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-channel\n         * @apioption    series.pc\n         */\n        ''; // to include the above in the js output\n\n        return PCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PriceEnvelopes/PriceEnvelopesIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Price Envelopes series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.priceenvelopes\n         *\n         * @augments Highcharts.Series\n         */\n        class PriceEnvelopesIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    topLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    },\n                    bottomLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const period = params.period, topPercent = params.topBand, botPercent = params.bottomBand, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-top line, 2-middle line, 3-bottom line\n                PE = [], \n                // middle line, top line and bottom line\n                xData = [], yData = [];\n                let ML, TL, BL, date, slicedX, slicedY, point, i;\n                // Price envelopes requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                for (i = period; i <= yValLen; i++) {\n                    slicedX = xVal.slice(i - period, i);\n                    slicedY = yVal.slice(i - period, i);\n                    point = super.getValues({\n                        xData: slicedX,\n                        yData: slicedY\n                    }, params);\n                    date = point.xData[0];\n                    ML = point.yData[0];\n                    TL = ML * (1 + topPercent);\n                    BL = ML * (1 - botPercent);\n                    PE.push([date, TL, ML, BL]);\n                    xData.push(date);\n                    yData.push([TL, ML, BL]);\n                }\n                return {\n                    values: PE,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Price envelopes indicator based on [SMA](#plotOptions.sma) calculations.\n         * This series requires the `linkedTo` option to be set and should be loaded\n         * after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/price-envelopes\n         *         Price envelopes\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/price-envelopes\n         * @optionparent plotOptions.priceenvelopes\n         */\n        PriceEnvelopesIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>Top: {point.top}<br/>Middle: {point.middle}<br/>Bottom: {point.bottom}<br/>'\n            },\n            params: {\n                period: 20,\n                /**\n                 * Percentage above the moving average that should be displayed.\n                 * 0.1 means 110%. Relative to the calculated value.\n                 */\n                topBand: 0.1,\n                /**\n                 * Percentage below the moving average that should be displayed.\n                 * 0.1 means 90%. Relative to the calculated value.\n                 */\n                bottomBand: 0.1\n            },\n            /**\n             * Bottom line options.\n             */\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.priceenvelopes.color](\n                     * #plotOptions.priceenvelopes.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            /**\n             * Top line options.\n             *\n             * @extends plotOptions.priceenvelopes.bottomLine\n             */\n            topLine: {\n                styles: {\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n            /**\n             * Option for fill color between lines in Price Envelopes Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type      {Highcharts.Color}\n             * @since 11.0.0\n             * @apioption plotOptions.priceenvelopes.fillColor\n             *\n             */\n        });\n        extend(PriceEnvelopesIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameComponents: ['period', 'topBand', 'bottomBand'],\n            nameBase: 'Price envelopes',\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            parallelArrays: ['x', 'y', 'top', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(PriceEnvelopesIndicator);\n        SeriesRegistry.registerSeriesType('priceenvelopes', PriceEnvelopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A price envelopes indicator. If the [type](#series.priceenvelopes.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.priceenvelopes\n         * @since     6.0.0\n         * @excluding dataParser, dataURL\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/price-envelopes\n         * @apioption series.priceenvelopes\n         */\n        ''; // to include the above in the js output\n\n        return PriceEnvelopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/PSAR/PSARIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  Parabolic SAR indicator for Highcharts Stock\n         *\n         *  (c) 2010-2024 Grzegorz Blachliński\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        function calculateDirection(previousDirection, low, high, PSAR) {\n            if ((previousDirection === 1 && low > PSAR) ||\n                (previousDirection === -1 && high > PSAR)) {\n                return 1;\n            }\n            return -1;\n        }\n        /* *\n         * Method for calculating acceleration factor\n         * dir - direction\n         * pDir - previous Direction\n         * eP - extreme point\n         * pEP - previous extreme point\n         * inc - increment for acceleration factor\n         * maxAcc - maximum acceleration factor\n         * initAcc - initial acceleration factor\n         */\n        function getAccelerationFactor(dir, pDir, eP, pEP, pAcc, inc, maxAcc, initAcc) {\n            if (dir === pDir) {\n                if (dir === 1 && (eP > pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                if (dir === -1 && (eP < pEP)) {\n                    return (pAcc === maxAcc) ? maxAcc : toFixed(pAcc + inc, 2);\n                }\n                return pAcc;\n            }\n            return initAcc;\n        }\n        function getExtremePoint(high, low, previousDirection, previousExtremePoint) {\n            if (previousDirection === 1) {\n                return (high > previousExtremePoint) ? high : previousExtremePoint;\n            }\n            return (low < previousExtremePoint) ? low : previousExtremePoint;\n        }\n        function getEPMinusPSAR(EP, PSAR) {\n            return EP - PSAR;\n        }\n        function getAccelerationFactorMultiply(accelerationFactor, EPMinusSAR) {\n            return accelerationFactor * EPMinusSAR;\n        }\n        /* *\n         * Method for calculating PSAR\n         * pdir - previous direction\n         * sDir - second previous Direction\n         * PSAR - previous PSAR\n         * pACCMultiply - previous acceleration factor multiply\n         * sLow - second previous low\n         * pLow - previous low\n         * sHigh - second previous high\n         * pHigh - previous high\n         * pEP - previous extreme point\n         */\n        function getPSAR(pdir, sDir, PSAR, pACCMulti, sLow, pLow, pHigh, sHigh, pEP) {\n            if (pdir === sDir) {\n                if (pdir === 1) {\n                    return (PSAR + pACCMulti < Math.min(sLow, pLow)) ?\n                        PSAR + pACCMulti :\n                        Math.min(sLow, pLow);\n                }\n                return (PSAR + pACCMulti > Math.max(sHigh, pHigh)) ?\n                    PSAR + pACCMulti :\n                    Math.max(sHigh, pHigh);\n            }\n            return pEP;\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Parabolic SAR series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.psar\n         *\n         * @augments Highcharts.Series\n         */\n        class PSARIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.nameComponents = void 0;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const xVal = series.xData, yVal = series.yData, maxAccelerationFactor = params.maxAccelerationFactor, increment = params.increment, \n                // Set initial acc factor (for every new trend!)\n                initialAccelerationFactor = params.initialAccelerationFactor, decimals = params.decimals, index = params.index, PSARArr = [], xData = [], yData = [];\n                let accelerationFactor = params.initialAccelerationFactor, direction, \n                // Extreme point is the lowest low for falling and highest high\n                // for rising psar - and we are starting with falling\n                extremePoint = yVal[0][1], EPMinusPSAR, accelerationFactorMultiply, newDirection, previousDirection = 1, prevLow, prevPrevLow, prevHigh, prevPrevHigh, PSAR = yVal[0][2], newExtremePoint, high, low, ind;\n                if (index >= yVal.length) {\n                    return;\n                }\n                for (ind = 0; ind < index; ind++) {\n                    extremePoint = Math.max(yVal[ind][1], extremePoint);\n                    PSAR = Math.min(yVal[ind][2], toFixed(PSAR, decimals));\n                }\n                direction = (yVal[ind][1] > PSAR) ? 1 : -1;\n                EPMinusPSAR = getEPMinusPSAR(extremePoint, PSAR);\n                accelerationFactor = params.initialAccelerationFactor;\n                accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                PSARArr.push([xVal[index], PSAR]);\n                xData.push(xVal[index]);\n                yData.push(toFixed(PSAR, decimals));\n                for (ind = index + 1; ind < yVal.length; ind++) {\n                    prevLow = yVal[ind - 1][2];\n                    prevPrevLow = yVal[ind - 2][2];\n                    prevHigh = yVal[ind - 1][1];\n                    prevPrevHigh = yVal[ind - 2][1];\n                    high = yVal[ind][1];\n                    low = yVal[ind][2];\n                    // Null points break PSAR\n                    if (prevPrevLow !== null &&\n                        prevPrevHigh !== null &&\n                        prevLow !== null &&\n                        prevHigh !== null &&\n                        high !== null &&\n                        low !== null) {\n                        PSAR = getPSAR(direction, previousDirection, PSAR, accelerationFactorMultiply, prevPrevLow, prevLow, prevHigh, prevPrevHigh, extremePoint);\n                        newExtremePoint = getExtremePoint(high, low, direction, extremePoint);\n                        newDirection = calculateDirection(previousDirection, low, high, PSAR);\n                        accelerationFactor = getAccelerationFactor(newDirection, direction, newExtremePoint, extremePoint, accelerationFactor, increment, maxAccelerationFactor, initialAccelerationFactor);\n                        EPMinusPSAR = getEPMinusPSAR(newExtremePoint, PSAR);\n                        accelerationFactorMultiply = getAccelerationFactorMultiply(accelerationFactor, EPMinusPSAR);\n                        PSARArr.push([xVal[ind], toFixed(PSAR, decimals)]);\n                        xData.push(xVal[ind]);\n                        yData.push(toFixed(PSAR, decimals));\n                        previousDirection = direction;\n                        direction = newDirection;\n                        extremePoint = newExtremePoint;\n                    }\n                }\n                return {\n                    values: PSARArr,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /**\n         * Parabolic SAR. This series requires `linkedTo`\n         * option to be set and should be loaded\n         * after `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/psar\n         *         Parabolic SAR Indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/psar\n         * @optionparent plotOptions.psar\n         */\n        PSARIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            lineWidth: 0,\n            marker: {\n                enabled: true\n            },\n            states: {\n                hover: {\n                    lineWidthPlus: 0\n                }\n            },\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The initial value for acceleration factor.\n                 * Acceleration factor is starting with this value\n                 * and increases by specified increment each time\n                 * the extreme point makes a new high.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                initialAccelerationFactor: 0.02,\n                /**\n                 * The Maximum value for acceleration factor.\n                 * AF can reach a maximum of maxAccelerationFactor,\n                 * no matter how long the uptrend extends.\n                 */\n                maxAccelerationFactor: 0.2,\n                /**\n                 * Acceleration factor increases by increment each time\n                 * the extreme point makes a new high.\n                 *\n                 * @since 6.0.0\n                 */\n                increment: 0.02,\n                /**\n                 * Index from which PSAR is starting calculation\n                 *\n                 * @since 6.0.0\n                 */\n                index: 2,\n                /**\n                 * Number of maximum decimals that are used in PSAR calculations.\n                 *\n                 * @since 6.0.0\n                 */\n                decimals: 4\n            }\n        });\n        SeriesRegistry.registerSeriesType('psar', PSARIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `PSAR` series. If the [type](#series.psar.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.psar\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/psar\n         * @apioption series.psar\n         */\n        ''; // to include the above in the js output\n\n        return PSARIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ROC/ROCIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge, extend } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function populateAverage(xVal, yVal, i, period, index) {\n            /* Calculated as:\n\n               (Closing Price [today] - Closing Price [n days ago]) /\n                Closing Price [n days ago] * 100\n\n               Return y as null when avoiding division by zero */\n            let nDaysAgoY, rocY;\n            if (index < 0) {\n                // y data given as an array of values\n                nDaysAgoY = yVal[i - period];\n                rocY = nDaysAgoY ?\n                    (yVal[i] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            else {\n                // y data given as an array of arrays and the index should be used\n                nDaysAgoY = yVal[i - period][index];\n                rocY = nDaysAgoY ?\n                    (yVal[i][index] - nDaysAgoY) / nDaysAgoY * 100 :\n                    null;\n            }\n            return [xVal[i], rocY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ROC series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.roc\n         *\n         * @augments Highcharts.Series\n         */\n        class ROCIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, ROC = [], xData = [], yData = [];\n                let i, index = -1, ROCPoint;\n                // Period is used as a number of time periods ago, so we need more\n                // (at least 1 more) data than the period value\n                if (xVal.length <= period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick / Arearange\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                }\n                // i = period <-- skip first N-points\n                // Calculate value one-by-one for each period in visible data\n                for (i = period; i < yValLen; i++) {\n                    ROCPoint = populateAverage(xVal, yVal, i, period, index);\n                    ROC.push(ROCPoint);\n                    xData.push(ROCPoint[0]);\n                    yData.push(ROCPoint[1]);\n                }\n                return {\n                    values: ROC,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#plotOptions.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/roc\n         *         Rate of change indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/roc\n         * @optionparent plotOptions.roc\n         */\n        ROCIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        extend(ROCIndicator.prototype, {\n            nameBase: 'Rate of Change'\n        });\n        SeriesRegistry.registerSeriesType('roc', ROCIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `ROC` series. If the [type](#series.wma.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * Rate of change indicator (ROC). The indicator value for each point\n         * is defined as:\n         *\n         * `(C - Cn) / Cn * 100`\n         *\n         * where: `C` is the close value of the point of the same x in the\n         * linked series and `Cn` is the close value of the point `n` periods\n         * ago. `n` is set through [period](#series.roc.params.period).\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @extends   series,plotOptions.roc\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/roc\n         * @apioption series.roc\n         */\n        ''; // to include the above in the js output\n\n        return ROCIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/RSI/RSIIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isNumber, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        function toFixed(a, n) {\n            return parseFloat(a.toFixed(n));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The RSI series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.rsi\n         *\n         * @augments Highcharts.Series\n         */\n        class RSIIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, decimals = params.decimals, \n                // RSI starts calculations from the second point\n                // Cause we need to calculate change between two points\n                RSI = [], xData = [], yData = [];\n                let gain = 0, loss = 0, index = params.index, range = 1, RSIPoint, change, avgGain, avgLoss, i, values;\n                if ((xVal.length < period)) {\n                    return;\n                }\n                if (isNumber(yVal[0])) {\n                    values = yVal;\n                }\n                else {\n                    // in case of the situation, where the series type has data length\n                    // longer then 4 (HLC, range), this ensures that we are not trying\n                    // to reach the index out of bounds\n                    index = Math.min(index, yVal[0].length - 1);\n                    values = yVal\n                        .map((value) => value[index]);\n                }\n                // Calculate changes for first N points\n                while (range < period) {\n                    change = toFixed(values[range] - values[range - 1], decimals);\n                    if (change > 0) {\n                        gain += change;\n                    }\n                    else {\n                        loss += Math.abs(change);\n                    }\n                    range++;\n                }\n                // Average for first n-1 points:\n                avgGain = toFixed(gain / (period - 1), decimals);\n                avgLoss = toFixed(loss / (period - 1), decimals);\n                for (i = range; i < yValLen; i++) {\n                    change = toFixed(values[i] - values[i - 1], decimals);\n                    if (change > 0) {\n                        gain = change;\n                        loss = 0;\n                    }\n                    else {\n                        gain = 0;\n                        loss = Math.abs(change);\n                    }\n                    // Calculate smoothed averages, RS, RSI values:\n                    avgGain = toFixed((avgGain * (period - 1) + gain) / period, decimals);\n                    avgLoss = toFixed((avgLoss * (period - 1) + loss) / period, decimals);\n                    // If average-loss is equal zero, then by definition RSI is set\n                    // to 100:\n                    if (avgLoss === 0) {\n                        RSIPoint = 100;\n                        // If average-gain is equal zero, then by definition RSI is set\n                        // to 0:\n                    }\n                    else if (avgGain === 0) {\n                        RSIPoint = 0;\n                    }\n                    else {\n                        RSIPoint = toFixed(100 - (100 / (1 + (avgGain / avgLoss))), decimals);\n                    }\n                    RSI.push([xVal[i], RSIPoint]);\n                    xData.push(xVal[i]);\n                    yData.push(RSIPoint);\n                }\n                return {\n                    values: RSI,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Relative strength index (RSI) technical indicator. This series\n         * requires the `linkedTo` option to be set and should be loaded after\n         * the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/rsi\n         *         RSI indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/rsi\n         * @optionparent plotOptions.rsi\n         */\n        RSIIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                decimals: 4,\n                index: 3\n            }\n        });\n        SeriesRegistry.registerSeriesType('rsi', RSIIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `RSI` series. If the [type](#series.rsi.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.rsi\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/rsi\n         * @apioption series.rsi\n         */\n        ''; // to include the above in the js output\n\n        return RSIIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Stochastic/StochasticIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.stochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class StochasticIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                super.init.apply(this, arguments);\n                // Set default color for lines:\n                this.options = merge({\n                    smoothedLine: {\n                        styles: {\n                            lineColor: this.color\n                        }\n                    }\n                }, this.options);\n            }\n            getValues(series, params) {\n                const periodK = params.periods[0], periodD = params.periods[1], xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // 0- date, 1-%K, 2-%D\n                SO = [], xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, CL, HL, LL, K, D = null, points, extremes, i;\n                // Stochastic requires close value\n                if (yValLen < periodK ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // If the value of initial points is constant, wait until it changes\n                // to calculate correct Stochastic values\n                let constantValues = true, j = 0;\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = periodK - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - periodK + 1, i + 1);\n                    // Calculate %K\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0]; // Lowest low in %K periods\n                    CL = yVal[i][close] - LL;\n                    HL = extremes[1] - LL;\n                    K = CL / HL * 100;\n                    if (isNaN(K) && constantValues) {\n                        j++;\n                        continue;\n                    }\n                    else if (constantValues && !isNaN(K)) {\n                        constantValues = false;\n                    }\n                    const length = xData.push(xVal[i]);\n                    // If N-period previous values are constant which results in NaN %K,\n                    // we need to use previous %K value if it is a number,\n                    // otherwise we should use null\n                    if (isNaN(K)) {\n                        yData.push([\n                            yData[length - 2] &&\n                                typeof yData[length - 2][0] === 'number' ?\n                                yData[length - 2][0] : null,\n                            null\n                        ]);\n                    }\n                    else {\n                        yData.push([K, null]);\n                    }\n                    // Calculate smoothed %D, which is SMA of %K\n                    if (i >= j + (periodK - 1) + (periodD - 1)) {\n                        points = super.getValues({\n                            xData: xData.slice(-periodD),\n                            yData: yData.slice(-periodD)\n                        }, {\n                            period: periodD\n                        });\n                        D = points.yData[0];\n                    }\n                    SO.push([xVal[i], K, D]);\n                    yData[length - 1][1] = D;\n                }\n                return {\n                    values: SO,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Stochastic oscillator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/stochastic\n         *         Stochastic oscillator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @optionparent plotOptions.stochastic\n         */\n        StochasticIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * Periods for Stochastic oscillator: [%K, %D].\n                 *\n                 * @type    {Array<number,number>}\n                 * @default [14, 3]\n                 */\n                periods: [14, 3]\n            },\n            marker: {\n                enabled: false\n            },\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span><b> {series.name}</b><br/>%K: {point.y}<br/>%D: {point.smoothed}<br/>'\n            },\n            /**\n             * Smoothed line options.\n             */\n            smoothedLine: {\n                /**\n                 * Styles for a smoothed line.\n                 */\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line. If not set, it's inherited from\n                     * [plotOptions.stochastic.color\n                     * ](#plotOptions.stochastic.color).\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: void 0\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(StochasticIndicator.prototype, {\n            areaLinesNames: [],\n            nameComponents: ['periods'],\n            nameBase: 'Stochastic',\n            pointArrayMap: ['y', 'smoothed'],\n            parallelArrays: ['x', 'y', 'smoothed'],\n            pointValKey: 'y',\n            linesApiNames: ['smoothedLine']\n        });\n        MultipleLinesComposition.compose(StochasticIndicator);\n        SeriesRegistry.registerSeriesType('stochastic', StochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Stochastic indicator. If the [type](#series.stochastic.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.stochastic\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @apioption series.stochastic\n         */\n        ''; // to include the above in the js output\n\n        return StochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/SlowStochastic/SlowStochasticIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator, stochastic: StochasticIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Slow Stochastic series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.slowstochastic\n         *\n         * @augments Highcharts.Series\n         */\n        class SlowStochasticIndicator extends StochasticIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const periods = params.periods, fastValues = super.getValues.call(this, series, params), slowValues = {\n                    values: [],\n                    xData: [],\n                    yData: []\n                };\n                if (!fastValues) {\n                    return;\n                }\n                slowValues.xData = fastValues.xData.slice(periods[1] - 1);\n                const fastYData = fastValues.yData.slice(periods[1] - 1);\n                // Get SMA(%D)\n                const smoothedValues = SMAIndicator.prototype.getValues.call(this, {\n                    xData: slowValues.xData,\n                    yData: fastYData\n                }, {\n                    index: 1,\n                    period: periods[2]\n                });\n                if (!smoothedValues) {\n                    return;\n                }\n                // Format data\n                for (let i = 0, xDataLen = slowValues.xData.length; i < xDataLen; i++) {\n                    slowValues.yData[i] = [\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                    slowValues.values[i] = [\n                        slowValues.xData[i],\n                        fastYData[i][1],\n                        smoothedValues.yData[i - periods[2] + 1] || null\n                    ];\n                }\n                return slowValues;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Slow Stochastic oscillator. This series requires the `linkedTo` option\n         * to be set and should be loaded after `stock/indicators/indicators.js`\n         * and `stock/indicators/stochastic.js` files.\n         *\n         * @sample stock/indicators/slow-stochastic\n         *         Slow Stochastic oscillator\n         *\n         * @extends      plotOptions.stochastic\n         * @since        8.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/stochastic\n         * @requires     stock/indicators/slowstochastic\n         * @optionparent plotOptions.slowstochastic\n         */\n        SlowStochasticIndicator.defaultOptions = merge(StochasticIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Periods for Slow Stochastic oscillator: [%K, %D, SMA(%D)].\n                 *\n                 * @type    {Array<number,number,number>}\n                 * @default [14, 3, 3]\n                 */\n                periods: [14, 3, 3]\n            }\n        });\n        extend(SlowStochasticIndicator.prototype, {\n            nameBase: 'Slow Stochastic'\n        });\n        SeriesRegistry.registerSeriesType('slowstochastic', SlowStochasticIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A Slow Stochastic indicator. If the [type](#series.slowstochastic.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.slowstochastic\n         * @since     8.0.0\n         * @product   highstock\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/stochastic\n         * @requires  stock/indicators/slowstochastic\n         * @apioption series.slowstochastic\n         */\n        ''; // to include the above in the js output\n\n        return SlowStochasticIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Supertrend/SupertrendIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Chart/StockChart.js']], function (SeriesRegistry, U, StockChart) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { atr: ATRIndicator, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, correctFloat, isArray, extend, merge, objectEach } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function createPointObj(mainSeries, index, close) {\n            return {\n                index: index,\n                close: mainSeries.yData[index][close],\n                x: mainSeries.xData[index]\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Supertrend series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.supertrend\n         *\n         * @augments Highcharts.Series\n         */\n        class SupertrendIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const indicator = this;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(StockChart, 'afterLinkSeries', () => {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const options = indicator.options, parentOptions = indicator.linkedParent.options;\n                        // Indicator cropThreshold has to be equal linked series one\n                        // reduced by period due to points comparison in drawGraph\n                        // (#9787)\n                        options.cropThreshold = (parentOptions.cropThreshold -\n                            (options.params.period - 1));\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n            }\n            drawGraph() {\n                const indicator = this, indicOptions = indicator.options, \n                // Series that indicator is linked to\n                mainSeries = indicator.linkedParent, mainLinePoints = (mainSeries ? mainSeries.points : []), indicPoints = indicator.points, indicPath = indicator.graph, \n                // Points offset between lines\n                tempOffset = mainLinePoints.length - indicPoints.length, offset = tempOffset > 0 ? tempOffset : 0, \n                // @todo: fix when ichi-moku indicator is merged to master.\n                gappedExtend = {\n                    options: {\n                        gapSize: indicOptions.gapSize\n                    }\n                }, \n                // Sorted supertrend points array\n                groupedPoitns = {\n                    top: [],\n                    bottom: [],\n                    intersect: [] // Change trend line points\n                }, \n                // Options for trend lines\n                supertrendLineOptions = {\n                    top: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.fallingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    bottom: {\n                        styles: {\n                            lineWidth: indicOptions.lineWidth,\n                            lineColor: (indicOptions.risingTrendColor ||\n                                indicOptions.color),\n                            dashStyle: indicOptions.dashStyle\n                        }\n                    },\n                    intersect: indicOptions.changeTrendLine\n                }, close = 3;\n                let // Supertrend line point\n                point, \n                // Supertrend line next point (has smaller x pos than point)\n                nextPoint, \n                // Main series points\n                mainPoint, nextMainPoint, \n                // Used when supertrend and main points are shifted\n                // relative to each other\n                prevMainPoint, prevPrevMainPoint, \n                // Used when particular point color is set\n                pointColor, \n                // Temporary points that fill groupedPoitns array\n                newPoint, newNextPoint, indicPointsLen = indicPoints.length;\n                // Loop which sort supertrend points\n                while (indicPointsLen--) {\n                    point = indicPoints[indicPointsLen];\n                    nextPoint = indicPoints[indicPointsLen - 1];\n                    mainPoint = mainLinePoints[indicPointsLen - 1 + offset];\n                    nextMainPoint = mainLinePoints[indicPointsLen - 2 + offset];\n                    prevMainPoint = mainLinePoints[indicPointsLen + offset];\n                    prevPrevMainPoint = mainLinePoints[indicPointsLen + offset + 1];\n                    pointColor = point.options.color;\n                    newPoint = {\n                        x: point.x,\n                        plotX: point.plotX,\n                        plotY: point.plotY,\n                        isNull: false\n                    };\n                    // When mainPoint is the last one (left plot area edge)\n                    // but supertrend has additional one\n                    if (!nextMainPoint &&\n                        mainPoint && mainSeries.yData[mainPoint.index - 1]) {\n                        nextMainPoint = createPointObj(mainSeries, mainPoint.index - 1, close);\n                    }\n                    // When prevMainPoint is the last one (right plot area edge)\n                    // but supertrend has additional one (and points are shifted)\n                    if (!prevPrevMainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index + 1]) {\n                        prevPrevMainPoint = createPointObj(mainSeries, prevMainPoint.index + 1, close);\n                    }\n                    // When points are shifted (right or left plot area edge)\n                    if (!mainPoint &&\n                        nextMainPoint && mainSeries.yData[nextMainPoint.index + 1]) {\n                        mainPoint = createPointObj(mainSeries, nextMainPoint.index + 1, close);\n                    }\n                    else if (!mainPoint &&\n                        prevMainPoint && mainSeries.yData[prevMainPoint.index - 1]) {\n                        mainPoint = createPointObj(mainSeries, prevMainPoint.index - 1, close);\n                    }\n                    // Check if points are shifted relative to each other\n                    if (point &&\n                        mainPoint &&\n                        prevMainPoint &&\n                        nextMainPoint &&\n                        point.x !== mainPoint.x) {\n                        if (point.x === prevMainPoint.x) {\n                            nextMainPoint = mainPoint;\n                            mainPoint = prevMainPoint;\n                        }\n                        else if (point.x === nextMainPoint.x) {\n                            mainPoint = nextMainPoint;\n                            nextMainPoint = {\n                                close: mainSeries.yData[mainPoint.index - 1][close],\n                                x: mainSeries.xData[mainPoint.index - 1]\n                            };\n                        }\n                        else if (prevPrevMainPoint && point.x === prevPrevMainPoint.x) {\n                            mainPoint = prevPrevMainPoint;\n                            nextMainPoint = prevMainPoint;\n                        }\n                    }\n                    if (nextPoint && nextMainPoint && mainPoint) {\n                        newNextPoint = {\n                            x: nextPoint.x,\n                            plotX: nextPoint.plotX,\n                            plotY: nextPoint.plotY,\n                            isNull: false\n                        };\n                        if (point.y >= mainPoint.close &&\n                            nextPoint.y >= nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.top.push(newPoint);\n                        }\n                        else if (point.y < mainPoint.close &&\n                            nextPoint.y < nextMainPoint.close) {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.bottom.push(newPoint);\n                        }\n                        else {\n                            groupedPoitns.intersect.push(newPoint);\n                            groupedPoitns.intersect.push(newNextPoint);\n                            // Additional null point to make a gap in line\n                            groupedPoitns.intersect.push(merge(newNextPoint, {\n                                isNull: true\n                            }));\n                            if (point.y >= mainPoint.close &&\n                                nextPoint.y < nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoitns.top.push(newPoint);\n                                groupedPoitns.top.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                            else if (point.y < mainPoint.close &&\n                                nextPoint.y >= nextMainPoint.close) {\n                                point.color = (pointColor || indicOptions.risingTrendColor ||\n                                    indicOptions.color);\n                                nextPoint.color = (pointColor || indicOptions.fallingTrendColor ||\n                                    indicOptions.color);\n                                groupedPoitns.bottom.push(newPoint);\n                                groupedPoitns.bottom.push(merge(newNextPoint, {\n                                    isNull: true\n                                }));\n                            }\n                        }\n                    }\n                    else if (mainPoint) {\n                        if (point.y >= mainPoint.close) {\n                            point.color = (pointColor || indicOptions.fallingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.top.push(newPoint);\n                        }\n                        else {\n                            point.color = (pointColor || indicOptions.risingTrendColor ||\n                                indicOptions.color);\n                            groupedPoitns.bottom.push(newPoint);\n                        }\n                    }\n                }\n                // Generate lines:\n                objectEach(groupedPoitns, function (values, lineName) {\n                    indicator.points = values;\n                    indicator.options = merge(supertrendLineOptions[lineName].styles, gappedExtend);\n                    indicator.graph = indicator['graph' + lineName + 'Line'];\n                    SMAIndicator.prototype.drawGraph.call(indicator);\n                    // Now save line\n                    indicator['graph' + lineName + 'Line'] = indicator.graph;\n                });\n                // Restore options:\n                indicator.points = indicPoints;\n                indicator.options = indicOptions;\n                indicator.graph = indicPath;\n            }\n            // Supertrend (Multiplier, Period) Formula:\n            // BASIC UPPERBAND = (HIGH + LOW) / 2 + Multiplier * ATR(Period)\n            // BASIC LOWERBAND = (HIGH + LOW) / 2 - Multiplier * ATR(Period)\n            // FINAL UPPERBAND =\n            //     IF(\n            //      Current BASICUPPERBAND  < Previous FINAL UPPERBAND AND\n            //      Previous Close > Previous FINAL UPPERBAND\n            //     ) THEN (Current BASIC UPPERBAND)\n            //     ELSE (Previous FINALUPPERBAND)\n            // FINAL LOWERBAND =\n            //     IF(\n            //      Current BASIC LOWERBAND  > Previous FINAL LOWERBAND AND\n            //      Previous Close < Previous FINAL LOWERBAND\n            //     ) THEN (Current BASIC LOWERBAND)\n            //     ELSE (Previous FINAL LOWERBAND)\n            // SUPERTREND =\n            //     IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close < Current FINAL UPPERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close < Current FINAL LOWERBAND\n            //     ) THAN Current FINAL UPPERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL UPPERBAND AND\n            //      Current Close > Current FINAL UPPERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            //     ELSE IF(\n            //      Previous Supertrend == Previous FINAL LOWERBAND AND\n            //      Current Close > Current FINAL LOWERBAND\n            //     ) THAN Current FINAL LOWERBAND\n            getValues(series, params) {\n                const period = params.period, multiplier = params.multiplier, xVal = series.xData, yVal = series.yData, \n                // 0- date, 1- Supertrend indicator\n                st = [], xData = [], yData = [], close = 3, low = 2, high = 1, periodsOffset = (period === 0) ? 0 : period - 1, finalUp = [], finalDown = [];\n                let atrData = [], basicUp, basicDown, supertrend, prevFinalUp, prevFinalDown, prevST, // previous Supertrend\n                prevY, y, i;\n                if ((xVal.length <= period) || !isArray(yVal[0]) ||\n                    yVal[0].length !== 4 || period < 0) {\n                    return;\n                }\n                atrData = ATRIndicator.prototype.getValues.call(this, series, {\n                    period: period\n                }).yData;\n                for (i = 0; i < atrData.length; i++) {\n                    y = yVal[periodsOffset + i];\n                    prevY = yVal[periodsOffset + i - 1] || [];\n                    prevFinalUp = finalUp[i - 1];\n                    prevFinalDown = finalDown[i - 1];\n                    prevST = yData[i - 1];\n                    if (i === 0) {\n                        prevFinalUp = prevFinalDown = prevST = 0;\n                    }\n                    basicUp = correctFloat((y[high] + y[low]) / 2 + multiplier * atrData[i]);\n                    basicDown = correctFloat((y[high] + y[low]) / 2 - multiplier * atrData[i]);\n                    if ((basicUp < prevFinalUp) ||\n                        (prevY[close] > prevFinalUp)) {\n                        finalUp[i] = basicUp;\n                    }\n                    else {\n                        finalUp[i] = prevFinalUp;\n                    }\n                    if ((basicDown > prevFinalDown) ||\n                        (prevY[close] < prevFinalDown)) {\n                        finalDown[i] = basicDown;\n                    }\n                    else {\n                        finalDown[i] = prevFinalDown;\n                    }\n                    if (prevST === prevFinalUp && y[close] < finalUp[i] ||\n                        prevST === prevFinalDown && y[close] < finalDown[i]) {\n                        supertrend = finalUp[i];\n                    }\n                    else if (prevST === prevFinalUp && y[close] > finalUp[i] ||\n                        prevST === prevFinalDown && y[close] > finalDown[i]) {\n                        supertrend = finalDown[i];\n                    }\n                    st.push([xVal[periodsOffset + i], supertrend]);\n                    xData.push(xVal[periodsOffset + i]);\n                    yData.push(supertrend);\n                }\n                return {\n                    values: st,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Supertrend indicator. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js` and\n         * `stock/indicators/sma.js`.\n         *\n         * @sample {highstock} stock/indicators/supertrend\n         *         Supertrend indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, cropThreshold, negativeColor, colorAxis, joinBy,\n         *               keys, navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking, threshold\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/supertrend\n         * @optionparent plotOptions.supertrend\n         */\n        SupertrendIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Supertrend indicator series points.\n             *\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Multiplier for Supertrend Indicator.\n                 */\n                multiplier: 3,\n                /**\n                 * The base period for indicator Supertrend Indicator calculations.\n                 * This is the number of data points which are taken into account\n                 * for the indicator calculations.\n                 */\n                period: 10\n            },\n            /**\n             * Color of the Supertrend series line that is beneath the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with risingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            risingTrendColor: \"#06b535\" /* Palette.positiveColor */,\n            /**\n             * Color of the Supertrend series line that is above the main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with fallingTrendColor\n             *\n             * @type {Highcharts.ColorString|Highcharts.GradientColorObject|Highcharts.PatternObject}\n             */\n            fallingTrendColor: \"#f21313\" /* Palette.negativeColor */,\n            /**\n             * The styles for the Supertrend line that intersect main series.\n             *\n             * @sample {highstock} stock/indicators/supertrend/\n             *         Example with changeTrendLine\n             */\n            changeTrendLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1,\n                    /**\n                     * Color of the line.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    lineColor: \"#333333\" /* Palette.neutralColor80 */,\n                    /**\n                     * The dash or dot style of the grid lines. For possible\n                     * values, see\n                     * [this demonstration](https://jsfiddle.net/gh/get/library/pure/highcharts/highcharts/tree/master/samples/highcharts/plotoptions/series-dashstyle-all/).\n                     *\n                     * @sample {highcharts} highcharts/yaxis/gridlinedashstyle/\n                     *         Long dashes\n                     * @sample {highstock} stock/xaxis/gridlinedashstyle/\n                     *         Long dashes\n                     *\n                     * @type  {Highcharts.DashStyleValue}\n                     * @since 7.0.0\n                     */\n                    dashStyle: 'LongDash'\n                }\n            }\n        });\n        extend(SupertrendIndicator.prototype, {\n            nameBase: 'Supertrend',\n            nameComponents: ['multiplier', 'period']\n        });\n        SeriesRegistry.registerSeriesType('supertrend', SupertrendIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Supertrend indicator` series. If the [type](#series.supertrend.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.supertrend\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, cropThreshold, data, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, negativeColor, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            showInNavigator, stacking, threshold\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/supertrend\n         * @apioption series.supertrend\n         */\n        ''; // to include the above in the js output\n\n        return SupertrendIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPPoint.js', [_modules['Core/Series/SeriesRegistry.js']], function (SeriesRegistry) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        /* *\n         *\n         *  Imports\n         *\n         * */\n        const { sma: { prototype: { pointClass: SMAPoint } } } = SeriesRegistry.seriesTypes;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        class VBPPoint extends SMAPoint {\n            // Required for destroying negative part of volume\n            destroy() {\n                // @todo: this.negativeGraphic doesn't seem to be used anywhere\n                if (this.negativeGraphic) {\n                    this.negativeGraphic = this.negativeGraphic.destroy();\n                }\n                super.destroy.apply(this, arguments);\n            }\n        }\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return VBPPoint;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VBP/VBPIndicator.js', [_modules['Stock/Indicators/VBP/VBPPoint.js'], _modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Core/Chart/StockChart.js']], function (VBPPoint, A, H, SeriesRegistry, U, StockChart) {\n        /* *\n         *\n         *  (c) 2010-2024 Paweł Dalek\n         *\n         *  Volume By Price (VBP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { animObject } = A;\n        const { noop } = H;\n        const { column: { prototype: columnProto }, sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { addEvent, arrayMax, arrayMin, correctFloat, defined, error, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Constants\n         *\n         * */\n        const abs = Math.abs;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils\n        /**\n         * @private\n         */\n        function arrayExtremesOHLC(data) {\n            const dataLength = data.length;\n            let min = data[0][3], max = min, i = 1, currentPoint;\n            for (; i < dataLength; i++) {\n                currentPoint = data[i][3];\n                if (currentPoint < min) {\n                    min = currentPoint;\n                }\n                if (currentPoint > max) {\n                    max = currentPoint;\n                }\n            }\n            return {\n                min: min,\n                max: max\n            };\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume By Price (VBP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vbp\n         *\n         * @augments Highcharts.Series\n         */\n        class VBPIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init(chart, options) {\n                const indicator = this;\n                // series.update() sends data that is not necessary\n                // as everything is calculated in getValues(), #17007\n                delete options.data;\n                super.init.apply(indicator, arguments);\n                // Only after series are linked add some additional logic/properties.\n                const unbinder = addEvent(StockChart, 'afterLinkSeries', function () {\n                    // Protection for a case where the indicator is being updated,\n                    // for a brief moment the indicator is deleted.\n                    if (indicator.options) {\n                        const params = indicator.options.params, baseSeries = indicator.linkedParent, volumeSeries = chart.get(params.volumeSeriesID);\n                        indicator.addCustomEvents(baseSeries, volumeSeries);\n                    }\n                    unbinder();\n                }, {\n                    order: 1\n                });\n                return indicator;\n            }\n            // Adds events related with removing series\n            addCustomEvents(baseSeries, volumeSeries) {\n                const indicator = this, toEmptyIndicator = () => {\n                    indicator.chart.redraw();\n                    indicator.setData([]);\n                    indicator.zoneStarts = [];\n                    if (indicator.zoneLinesSVG) {\n                        indicator.zoneLinesSVG = indicator.zoneLinesSVG.destroy();\n                    }\n                };\n                // If base series is deleted, indicator series data is filled with\n                // an empty array\n                indicator.dataEventsToUnbind.push(addEvent(baseSeries, 'remove', function () {\n                    toEmptyIndicator();\n                }));\n                // If volume series is deleted, indicator series data is filled with\n                // an empty array\n                if (volumeSeries) {\n                    indicator.dataEventsToUnbind.push(addEvent(volumeSeries, 'remove', function () {\n                        toEmptyIndicator();\n                    }));\n                }\n                return indicator;\n            }\n            // Initial animation\n            animate(init) {\n                const series = this, inverted = series.chart.inverted, group = series.group, attr = {};\n                if (!init && group) {\n                    const position = inverted ? series.yAxis.top : series.xAxis.left;\n                    if (inverted) {\n                        group['forceAnimate:translateY'] = true;\n                        attr.translateY = position;\n                    }\n                    else {\n                        group['forceAnimate:translateX'] = true;\n                        attr.translateX = position;\n                    }\n                    group.animate(attr, extend(animObject(series.options.animation), {\n                        step: function (val, fx) {\n                            series.group.attr({\n                                scaleX: Math.max(0.001, fx.pos)\n                            });\n                        }\n                    }));\n                }\n            }\n            drawPoints() {\n                const indicator = this;\n                if (indicator.options.volumeDivision.enabled) {\n                    indicator.posNegVolume(true, true);\n                    columnProto.drawPoints.apply(indicator, arguments);\n                    indicator.posNegVolume(false, false);\n                }\n                columnProto.drawPoints.apply(indicator, arguments);\n            }\n            // Function responsible for dividing volume into positive and negative\n            posNegVolume(initVol, pos) {\n                const indicator = this, signOrder = pos ?\n                    ['positive', 'negative'] :\n                    ['negative', 'positive'], volumeDivision = indicator.options.volumeDivision, pointLength = indicator.points.length;\n                let posWidths = [], negWidths = [], i = 0, pointWidth, priceZone, wholeVol, point;\n                if (initVol) {\n                    indicator.posWidths = posWidths;\n                    indicator.negWidths = negWidths;\n                }\n                else {\n                    posWidths = indicator.posWidths;\n                    negWidths = indicator.negWidths;\n                }\n                for (; i < pointLength; i++) {\n                    point = indicator.points[i];\n                    point[signOrder[0] + 'Graphic'] = point.graphic;\n                    point.graphic = point[signOrder[1] + 'Graphic'];\n                    if (initVol) {\n                        pointWidth = point.shapeArgs.width;\n                        priceZone = indicator.priceZones[i];\n                        wholeVol = priceZone.wholeVolumeData;\n                        if (wholeVol) {\n                            posWidths.push(pointWidth / wholeVol * priceZone.positiveVolumeData);\n                            negWidths.push(pointWidth / wholeVol * priceZone.negativeVolumeData);\n                        }\n                        else {\n                            posWidths.push(0);\n                            negWidths.push(0);\n                        }\n                    }\n                    point.color = pos ?\n                        volumeDivision.styles.positiveColor :\n                        volumeDivision.styles.negativeColor;\n                    point.shapeArgs.width = pos ?\n                        indicator.posWidths[i] :\n                        indicator.negWidths[i];\n                    point.shapeArgs.x = pos ?\n                        point.shapeArgs.x :\n                        indicator.posWidths[i];\n                }\n            }\n            translate() {\n                const indicator = this, options = indicator.options, chart = indicator.chart, yAxis = indicator.yAxis, yAxisMin = yAxis.min, zoneLinesOptions = indicator.options.zoneLines, priceZones = (indicator.priceZones);\n                let yBarOffset = 0, volumeDataArray, maxVolume, primalBarWidth, barHeight, barHeightP, oldBarHeight, barWidth, pointPadding, chartPlotTop, barX, barY;\n                columnProto.translate.apply(indicator);\n                const indicatorPoints = indicator.points;\n                // Do translate operation when points exist\n                if (indicatorPoints.length) {\n                    pointPadding = options.pointPadding < 0.5 ?\n                        options.pointPadding :\n                        0.1;\n                    volumeDataArray = indicator.volumeDataArray;\n                    maxVolume = arrayMax(volumeDataArray);\n                    primalBarWidth = chart.plotWidth / 2;\n                    chartPlotTop = chart.plotTop;\n                    barHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    oldBarHeight = abs(yAxis.toPixels(yAxisMin) -\n                        yAxis.toPixels(yAxisMin + indicator.rangeStep));\n                    if (pointPadding) {\n                        barHeightP = abs(barHeight * (1 - 2 * pointPadding));\n                        yBarOffset = abs((barHeight - barHeightP) / 2);\n                        barHeight = abs(barHeightP);\n                    }\n                    indicatorPoints.forEach(function (point, index) {\n                        barX = point.barX = point.plotX = 0;\n                        barY = point.plotY = (yAxis.toPixels(priceZones[index].start) -\n                            chartPlotTop -\n                            (yAxis.reversed ?\n                                (barHeight - oldBarHeight) :\n                                barHeight) -\n                            yBarOffset);\n                        barWidth = correctFloat(primalBarWidth *\n                            priceZones[index].wholeVolumeData / maxVolume);\n                        point.pointWidth = barWidth;\n                        point.shapeArgs = indicator.crispCol.apply(// eslint-disable-line no-useless-call\n                        indicator, [barX, barY, barWidth, barHeight]);\n                        point.volumeNeg = priceZones[index].negativeVolumeData;\n                        point.volumePos = priceZones[index].positiveVolumeData;\n                        point.volumeAll = priceZones[index].wholeVolumeData;\n                    });\n                    if (zoneLinesOptions.enabled) {\n                        indicator.drawZones(chart, yAxis, indicator.zoneStarts, zoneLinesOptions.styles);\n                    }\n                }\n            }\n            getExtremes() {\n                const prevCompare = this.options.compare, prevCumulative = this.options.cumulative;\n                let ret;\n                // Temporarily disable cumulative and compare while getting the extremes\n                if (this.options.compare) {\n                    this.options.compare = void 0;\n                    ret = super.getExtremes();\n                    this.options.compare = prevCompare;\n                }\n                else if (this.options.cumulative) {\n                    this.options.cumulative = false;\n                    ret = super.getExtremes();\n                    this.options.cumulative = prevCumulative;\n                }\n                else {\n                    ret = super.getExtremes();\n                }\n                return ret;\n            }\n            getValues(series, params) {\n                const indicator = this, xValues = series.processedXData, yValues = series.processedYData, chart = indicator.chart, ranges = params.ranges, VBP = [], xData = [], yData = [], volumeSeries = chart.get(params.volumeSeriesID);\n                // Checks if base series exists\n                if (!series.chart) {\n                    error('Base series not found! In case it has been removed, add ' +\n                        'a new one.', true, chart);\n                    return;\n                }\n                // Checks if volume series exists and if it has data\n                if (!volumeSeries ||\n                    !volumeSeries.processedXData.length) {\n                    const errorMessage = volumeSeries && !volumeSeries.processedXData.length ?\n                        ' does not contain any data.' :\n                        ' not found! Check `volumeSeriesID`.';\n                    error('Series ' +\n                        params.volumeSeriesID + errorMessage, true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                const isOHLC = isArray(yValues[0]);\n                if (isOHLC && yValues[0].length !== 4) {\n                    error('Type of ' +\n                        series.name +\n                        ' series is different than line, OHLC or candlestick.', true, chart);\n                    return;\n                }\n                // Price zones contains all the information about the zones (index,\n                // start, end, volumes, etc.)\n                const priceZones = indicator.priceZones = indicator.specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries);\n                priceZones.forEach(function (zone, index) {\n                    VBP.push([zone.x, zone.end]);\n                    xData.push(VBP[index][0]);\n                    yData.push(VBP[index][1]);\n                });\n                return {\n                    values: VBP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n            // Specifing where each zone should start ans end\n            specifyZones(isOHLC, xValues, yValues, ranges, volumeSeries) {\n                const indicator = this, rangeExtremes = (isOHLC ? arrayExtremesOHLC(yValues) : false), zoneStarts = indicator.zoneStarts = [], priceZones = [];\n                let lowRange = rangeExtremes ?\n                    rangeExtremes.min :\n                    arrayMin(yValues), highRange = rangeExtremes ?\n                    rangeExtremes.max :\n                    arrayMax(yValues), i = 0, j = 1;\n                // If the compare mode is set on the main series, change the VBP\n                // zones to fit new extremes, #16277.\n                const mainSeries = indicator.linkedParent;\n                if (!indicator.options.compareToMain &&\n                    mainSeries.dataModify) {\n                    lowRange = mainSeries.dataModify.modifyValue(lowRange);\n                    highRange = mainSeries.dataModify.modifyValue(highRange);\n                }\n                if (!defined(lowRange) || !defined(highRange)) {\n                    if (this.points.length) {\n                        this.setData([]);\n                        this.zoneStarts = [];\n                        if (this.zoneLinesSVG) {\n                            this.zoneLinesSVG = this.zoneLinesSVG.destroy();\n                        }\n                    }\n                    return [];\n                }\n                const rangeStep = indicator.rangeStep =\n                    correctFloat(highRange - lowRange) / ranges;\n                zoneStarts.push(lowRange);\n                for (; i < ranges - 1; i++) {\n                    zoneStarts.push(correctFloat(zoneStarts[i] + rangeStep));\n                }\n                zoneStarts.push(highRange);\n                const zoneStartsLength = zoneStarts.length;\n                //    Creating zones\n                for (; j < zoneStartsLength; j++) {\n                    priceZones.push({\n                        index: j - 1,\n                        x: xValues[0],\n                        start: zoneStarts[j - 1],\n                        end: zoneStarts[j]\n                    });\n                }\n                return indicator.volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues);\n            }\n            // Calculating sum of volume values for a specific zone\n            volumePerZone(isOHLC, priceZones, volumeSeries, xValues, yValues) {\n                const indicator = this, volumeXData = volumeSeries.processedXData, volumeYData = volumeSeries.processedYData, lastZoneIndex = priceZones.length - 1, baseSeriesLength = yValues.length, volumeSeriesLength = volumeYData.length;\n                let previousValue, startFlag, endFlag, value, i;\n                // Checks if each point has a corresponding volume value\n                if (abs(baseSeriesLength - volumeSeriesLength)) {\n                    // If the first point don't have volume, add 0 value at the\n                    // beggining of the volume array\n                    if (xValues[0] !== volumeXData[0]) {\n                        volumeYData.unshift(0);\n                    }\n                    // If the last point don't have volume, add 0 value at the end\n                    // of the volume array\n                    if (xValues[baseSeriesLength - 1] !==\n                        volumeXData[volumeSeriesLength - 1]) {\n                        volumeYData.push(0);\n                    }\n                }\n                indicator.volumeDataArray = [];\n                priceZones.forEach(function (zone) {\n                    zone.wholeVolumeData = 0;\n                    zone.positiveVolumeData = 0;\n                    zone.negativeVolumeData = 0;\n                    for (i = 0; i < baseSeriesLength; i++) {\n                        startFlag = false;\n                        endFlag = false;\n                        value = isOHLC ? yValues[i][3] : yValues[i];\n                        previousValue = i ?\n                            (isOHLC ?\n                                yValues[i - 1][3] :\n                                yValues[i - 1]) :\n                            value;\n                        // If the compare mode is set on the main series,\n                        // change the VBP zones to fit new extremes, #16277.\n                        const mainSeries = indicator.linkedParent;\n                        if (!indicator.options.compareToMain &&\n                            mainSeries.dataModify) {\n                            value = mainSeries.dataModify.modifyValue(value);\n                            previousValue = mainSeries.dataModify\n                                .modifyValue(previousValue);\n                        }\n                        // Checks if this is the point with the\n                        // lowest close value and if so, adds it calculations\n                        if (value <= zone.start && zone.index === 0) {\n                            startFlag = true;\n                        }\n                        // Checks if this is the point with the highest\n                        // close value and if so, adds it calculations\n                        if (value >= zone.end && zone.index === lastZoneIndex) {\n                            endFlag = true;\n                        }\n                        if ((value > zone.start || startFlag) &&\n                            (value < zone.end || endFlag)) {\n                            zone.wholeVolumeData += volumeYData[i];\n                            if (previousValue > value) {\n                                zone.negativeVolumeData += volumeYData[i];\n                            }\n                            else {\n                                zone.positiveVolumeData += volumeYData[i];\n                            }\n                        }\n                    }\n                    indicator.volumeDataArray.push(zone.wholeVolumeData);\n                });\n                return priceZones;\n            }\n            // Function responsoble for drawing additional lines indicating zones\n            drawZones(chart, yAxis, zonesValues, zonesStyles) {\n                const indicator = this, renderer = chart.renderer, leftLinePos = 0, rightLinePos = chart.plotWidth, verticalOffset = chart.plotTop;\n                let zoneLinesSVG = indicator.zoneLinesSVG, zoneLinesPath = [], verticalLinePos;\n                zonesValues.forEach(function (value) {\n                    verticalLinePos = yAxis.toPixels(value) - verticalOffset;\n                    zoneLinesPath = zoneLinesPath.concat(chart.renderer.crispLine([[\n                            'M',\n                            leftLinePos,\n                            verticalLinePos\n                        ], [\n                            'L',\n                            rightLinePos,\n                            verticalLinePos\n                        ]], zonesStyles.lineWidth));\n                });\n                // Create zone lines one path or update it while animating\n                if (zoneLinesSVG) {\n                    zoneLinesSVG.animate({\n                        d: zoneLinesPath\n                    });\n                }\n                else {\n                    zoneLinesSVG = indicator.zoneLinesSVG =\n                        renderer\n                            .path(zoneLinesPath)\n                            .attr({\n                            'stroke-width': zonesStyles.lineWidth,\n                            'stroke': zonesStyles.color,\n                            'dashstyle': zonesStyles.dashStyle,\n                            'zIndex': indicator.group.zIndex + 0.1\n                        })\n                            .add(indicator.group);\n                }\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Volume By Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/volume-by-price\n         *         Volume By Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/volume-by-price\n         * @optionparent plotOptions.vbp\n         */\n        VBPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The number of price zones.\n                 */\n                ranges: 12,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            },\n            /**\n             * The styles for lines which determine price zones.\n             */\n            zoneLines: {\n                /**\n                 * Enable/disable zone lines.\n                 */\n                enabled: true,\n                /**\n                 * Specify the style of zone lines.\n                 *\n                 * @type    {Highcharts.CSSObject}\n                 * @default {\"color\": \"#0A9AC9\", \"dashStyle\": \"LongDash\", \"lineWidth\": 1}\n                 */\n                styles: {\n                    /** @ignore-option */\n                    color: '#0A9AC9',\n                    /** @ignore-option */\n                    dashStyle: 'LongDash',\n                    /** @ignore-option */\n                    lineWidth: 1\n                }\n            },\n            /**\n             * The styles for bars when volume is divided into positive/negative.\n             */\n            volumeDivision: {\n                /**\n                 * Option to control if volume is divided.\n                 */\n                enabled: true,\n                styles: {\n                    /**\n                     * Color of positive volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    positiveColor: 'rgba(144, 237, 125, 0.8)',\n                    /**\n                     * Color of negative volume bars.\n                     *\n                     * @type {Highcharts.ColorString}\n                     */\n                    negativeColor: 'rgba(244, 91, 91, 0.8)'\n                }\n            },\n            // To enable series animation; must be animationLimit > pointCount\n            animationLimit: 1000,\n            enableMouseTracking: false,\n            pointPadding: 0,\n            zIndex: -1,\n            crisp: true,\n            dataGrouping: {\n                enabled: false\n            },\n            dataLabels: {\n                allowOverlap: true,\n                enabled: true,\n                format: 'P: {point.volumePos:.2f} | N: {point.volumeNeg:.2f}',\n                padding: 0,\n                style: {\n                    /** @internal */\n                    fontSize: '0.5em'\n                },\n                verticalAlign: 'top'\n            }\n        });\n        extend(VBPIndicator.prototype, {\n            nameBase: 'Volume by Price',\n            nameComponents: ['ranges'],\n            calculateOn: {\n                chart: 'render',\n                xAxis: 'afterSetExtremes'\n            },\n            pointClass: VBPPoint,\n            markerAttribs: noop,\n            drawGraph: noop,\n            getColumnMetrics: columnProto.getColumnMetrics,\n            crispCol: columnProto.crispCol\n        });\n        SeriesRegistry.registerSeriesType('vbp', VBPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume By Price (VBP)` series. If the [type](#series.vbp.type) option is\n         * not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vbp\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL, compare, compareBase, compareStart\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/volume-by-price\n         * @apioption series.vbp\n         */\n        ''; // to include the above in the js output\n\n        return VBPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/VWAP/VWAPIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Paweł Dalek\n         *\n         *  Volume Weighted Average Price (VWAP) indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { error, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Volume Weighted Average Price (VWAP) series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.vwap\n         *\n         * @augments Highcharts.Series\n         */\n        class VWAPIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const indicator = this, chart = series.chart, xValues = series.xData, yValues = series.yData, period = params.period;\n                let isOHLC = true, volumeSeries;\n                // Checks if volume series exists\n                if (!(volumeSeries = (chart.get(params.volumeSeriesID)))) {\n                    error('Series ' +\n                        params.volumeSeriesID +\n                        ' not found! Check `volumeSeriesID`.', true, chart);\n                    return;\n                }\n                // Checks if series data fits the OHLC format\n                if (!(isArray(yValues[0]))) {\n                    isOHLC = false;\n                }\n                return indicator.calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period);\n            }\n            /**\n             * Main algorithm used to calculate Volume Weighted Average Price (VWAP)\n             * values\n             *\n             * @private\n             *\n             * @param {boolean} isOHLC\n             * Says if data has OHLC format\n             *\n             * @param {Array<number>} xValues\n             * Array of timestamps\n             *\n             * @param {Array<number|Array<number,number,number,number>>} yValues\n             * Array of yValues, can be an array of a four arrays (OHLC) or array of\n             * values (line)\n             *\n             * @param {Array<*>} volumeSeries\n             * Volume series\n             *\n             * @param {number} period\n             * Number of points to be calculated\n             *\n             * @return {Object}\n             * Object contains computed VWAP\n             **/\n            calculateVWAPValues(isOHLC, xValues, yValues, volumeSeries, period) {\n                const volumeValues = volumeSeries.yData, volumeLength = volumeSeries.xData.length, pointsLength = xValues.length, cumulativePrice = [], cumulativeVolume = [], xData = [], yData = [], VWAP = [];\n                let commonLength, typicalPrice, cPrice, cVolume, i, j;\n                if (pointsLength <= volumeLength) {\n                    commonLength = pointsLength;\n                }\n                else {\n                    commonLength = volumeLength;\n                }\n                for (i = 0, j = 0; i < commonLength; i++) {\n                    // Depending on whether series is OHLC or line type, price is\n                    // average of the high, low and close or a simple value\n                    typicalPrice = isOHLC ?\n                        ((yValues[i][1] + yValues[i][2] +\n                            yValues[i][3]) / 3) :\n                        yValues[i];\n                    typicalPrice *= volumeValues[i];\n                    cPrice = j ?\n                        (cumulativePrice[i - 1] + typicalPrice) :\n                        typicalPrice;\n                    cVolume = j ?\n                        (cumulativeVolume[i - 1] + volumeValues[i]) :\n                        volumeValues[i];\n                    cumulativePrice.push(cPrice);\n                    cumulativeVolume.push(cVolume);\n                    VWAP.push([xValues[i], (cPrice / cVolume)]);\n                    xData.push(VWAP[i][0]);\n                    yData.push(VWAP[i][1]);\n                    j++;\n                    if (j === period) {\n                        j = 0;\n                    }\n                }\n                return {\n                    values: VWAP,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Volume Weighted Average Price indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/vwap\n         *         Volume Weighted Average Price indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/vwap\n         * @optionparent plotOptions.vwap\n         */\n        VWAPIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                period: 30,\n                /**\n                 * The id of volume series which is mandatory. For example using\n                 * OHLC data, volumeSeriesID='volume' means the indicator will be\n                 * calculated using OHLC and volume values.\n                 */\n                volumeSeriesID: 'volume'\n            }\n        });\n        SeriesRegistry.registerSeriesType('vwap', VWAPIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Volume Weighted Average Price (VWAP)` series. If the\n         * [type](#series.vwap.type) option is not specified, it is inherited from\n         * [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.vwap\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/vwap\n         * @apioption series.vwap\n         */\n        ''; // to include the above in the js output\n\n        return VWAPIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WilliamsR/WilliamsRIndicator.js', [_modules['Stock/Indicators/ArrayUtilities.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (AU, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Williams %R series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.williamsr\n         *\n         * @augments Highcharts.Series\n         */\n        class WilliamsRIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, WR = [], // 0- date, 1- Williams %R\n                xData = [], yData = [], close = 3, low = 2, high = 1;\n                let slicedY, extremes, R, HH, // Highest high value in period\n                LL, // Lowest low value in period\n                CC, // Current close value\n                i;\n                // Williams %R requires close value\n                if (xVal.length < period ||\n                    !isArray(yVal[0]) ||\n                    yVal[0].length !== 4) {\n                    return;\n                }\n                // For a N-period, we start from N-1 point, to calculate Nth point\n                // That is why we later need to comprehend slice() elements list\n                // with (+1)\n                for (i = period - 1; i < yValLen; i++) {\n                    slicedY = yVal.slice(i - period + 1, i + 1);\n                    extremes = AU.getArrayExtremes(slicedY, low, high);\n                    LL = extremes[0];\n                    HH = extremes[1];\n                    CC = yVal[i][close];\n                    R = ((HH - CC) / (HH - LL)) * -100;\n                    if (xVal[i]) {\n                        WR.push([xVal[i], R]);\n                        xData.push(xVal[i]);\n                        yData.push(R);\n                    }\n                }\n                return {\n                    values: WR,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Williams %R. This series requires the `linkedTo` option to be\n         * set and should be loaded after the `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/williams-r\n         *         Williams %R\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/williams-r\n         * @optionparent plotOptions.williamsr\n         */\n        WilliamsRIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Paramters used in calculation of Williams %R series points.\n             * @excluding index\n             */\n            params: {\n                index: void 0,\n                /**\n                 * Period for Williams %R oscillator\n                 */\n                period: 14\n            }\n        });\n        extend(WilliamsRIndicator.prototype, {\n            nameBase: 'Williams %R'\n        });\n        SeriesRegistry.registerSeriesType('williamsr', WilliamsRIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Williams %R Oscillator` series. If the [type](#series.williamsr.type)\n         * option is not specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.williamsr\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/williams-r\n         * @apioption series.williamsr\n         */\n        ''; // adds doclets above to the transpiled file\n\n        return WilliamsRIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/WMA/WMAIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        // Utils:\n        /**\n         * @private\n         */\n        function accumulateAverage(points, xVal, yVal, i, index) {\n            const xValue = xVal[i], yValue = index < 0 ? yVal[i] : yVal[i][index];\n            points.push([xValue, yValue]);\n        }\n        /**\n         * @private\n         */\n        function weightedSumArray(array, pLen) {\n            // The denominator is the sum of the number of days as a triangular number.\n            // If there are 5 days, the triangular numbers are 5, 4, 3, 2, and 1.\n            // The sum is 5 + 4 + 3 + 2 + 1 = 15.\n            const denominator = (pLen + 1) / 2 * pLen;\n            // reduce VS loop => reduce\n            return array.reduce(function (prev, cur, i) {\n                return [null, prev[1] + cur[1] * (i + 1)];\n            })[1] / denominator;\n        }\n        /**\n         * @private\n         */\n        function populateAverage(points, xVal, yVal, i) {\n            const pLen = points.length, wmaY = weightedSumArray(points, pLen), wmaX = xVal[i - 1];\n            points.shift(); // remove point until range < period\n            return [wmaX, wmaY];\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The SMA series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.wma\n         *\n         * @augments Highcharts.Series\n         */\n        class WMAIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, xValue = xVal[0], wma = [], xData = [], yData = [];\n                let range = 1, index = -1, i, wmaPoint, yValue = yVal[0];\n                if (xVal.length < period) {\n                    return;\n                }\n                // Switch index for OHLC / Candlestick\n                if (isArray(yVal[0])) {\n                    index = params.index;\n                    yValue = yVal[0][index];\n                }\n                // Starting point\n                const points = [[xValue, yValue]];\n                // Accumulate first N-points\n                while (range !== period) {\n                    accumulateAverage(points, xVal, yVal, range, index);\n                    range++;\n                }\n                // Calculate value one-by-one for each period in visible data\n                for (i = range; i < yValLen; i++) {\n                    wmaPoint = populateAverage(points, xVal, yVal, i);\n                    wma.push(wmaPoint);\n                    xData.push(wmaPoint[0]);\n                    yData.push(wmaPoint[1]);\n                    accumulateAverage(points, xVal, yVal, i, index);\n                }\n                wmaPoint = populateAverage(points, xVal, yVal, i);\n                wma.push(wmaPoint);\n                xData.push(wmaPoint[0]);\n                yData.push(wmaPoint[1]);\n                return {\n                    values: wma,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Weighted moving average indicator (WMA). This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample stock/indicators/wma\n         *         Weighted moving average indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/wma\n         * @optionparent plotOptions.wma\n         */\n        WMAIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                index: 3,\n                period: 9\n            }\n        });\n        SeriesRegistry.registerSeriesType('wma', WMAIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `WMA` series. If the [type](#series.wma.type) option is not specified, it\n         * is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.wma\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/wma\n         * @apioption series.wma\n         */\n        ''; // adds doclet above to the transpiled file\n\n        return WMAIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/Zigzag/ZigzagIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  (c) 2010-2024 Kacper Madej\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { merge, extend } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Zig Zag series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.zigzag\n         *\n         * @augments Highcharts.Series\n         */\n        class ZigzagIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const lowIndex = params.lowIndex, highIndex = params.highIndex, deviation = params.deviation / 100, deviations = {\n                    'low': 1 + deviation,\n                    'high': 1 - deviation\n                }, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, zigzag = [], xData = [], yData = [];\n                let i, j, zigzagPoint, directionUp, exitLoop = false, yIndex = false;\n                // Exit if not enught points or no low or high values\n                if (!xVal || xVal.length <= 1 ||\n                    (yValLen &&\n                        (typeof yVal[0][lowIndex] === 'undefined' ||\n                            typeof yVal[0][highIndex] === 'undefined'))) {\n                    return;\n                }\n                // Set first zigzag point candidate\n                const firstZigzagLow = yVal[0][lowIndex], firstZigzagHigh = yVal[0][highIndex];\n                // Search for a second zigzag point candidate,\n                // this will also set first zigzag point\n                for (i = 1; i < yValLen; i++) {\n                    // requried change to go down\n                    if (yVal[i][lowIndex] <= firstZigzagHigh * deviations.high) {\n                        zigzag.push([xVal[0], firstZigzagHigh]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        // next line will be going up\n                        directionUp = true;\n                        exitLoop = true;\n                        // requried change to go up\n                    }\n                    else if (yVal[i][highIndex] >= firstZigzagLow * deviations.low) {\n                        zigzag.push([xVal[0], firstZigzagLow]);\n                        // second zigzag point candidate\n                        zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        // next line will be going down\n                        directionUp = false;\n                        exitLoop = true;\n                    }\n                    if (exitLoop) {\n                        xData.push(zigzag[0][0]);\n                        yData.push(zigzag[0][1]);\n                        j = i++;\n                        i = yValLen;\n                    }\n                }\n                // Search for next zigzags\n                for (i = j; i < yValLen; i++) {\n                    if (directionUp) { // next line up\n                        // lower when going down -> change zigzag candidate\n                        if (yVal[i][lowIndex] <= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][lowIndex]];\n                        }\n                        // requried change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][highIndex] >=\n                            zigzagPoint[1] * deviations.low) {\n                            yIndex = highIndex;\n                        }\n                    }\n                    else { // next line down\n                        // higher when going up -> change zigzag candidate\n                        if (yVal[i][highIndex] >= zigzagPoint[1]) {\n                            zigzagPoint = [xVal[i], yVal[i][highIndex]];\n                        }\n                        // requried change to go down -> new zigzagpoint and\n                        // direction change\n                        if (yVal[i][lowIndex] <=\n                            zigzagPoint[1] * deviations.high) {\n                            yIndex = lowIndex;\n                        }\n                    }\n                    if (yIndex !== false) { // new zigzag point and direction change\n                        zigzag.push(zigzagPoint);\n                        xData.push(zigzagPoint[0]);\n                        yData.push(zigzagPoint[1]);\n                        zigzagPoint = [xVal[i], yVal[i][yIndex]];\n                        directionUp = !directionUp;\n                        yIndex = false;\n                    }\n                }\n                const zigzagLen = zigzag.length;\n                // no zigzag for last point\n                if (zigzagLen !== 0 &&\n                    zigzag[zigzagLen - 1][0] < xVal[yValLen - 1]) {\n                    // set last point from zigzag candidate\n                    zigzag.push(zigzagPoint);\n                    xData.push(zigzagPoint[0]);\n                    yData.push(zigzagPoint[1]);\n                }\n                return {\n                    values: zigzag,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Zig Zag indicator.\n         *\n         * This series requires `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/zigzag\n         *         Zig Zag indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        6.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/zigzag\n         * @optionparent plotOptions.zigzag\n         */\n        ZigzagIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding index, period\n             */\n            params: {\n                // Index and period are unchangeable, do not inherit (#15362)\n                index: void 0,\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base - low\n                 * value.\n                 *\n                 * For example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 */\n                lowIndex: 2,\n                /**\n                 * The point index which indicator calculations will base - high\n                 * value.\n                 *\n                 * For example using OHLC data, index=1 means the indicator will be\n                 * calculated using High values.\n                 */\n                highIndex: 1,\n                /**\n                 * The threshold for the value change.\n                 *\n                 * For example deviation=1 means the indicator will ignore all price\n                 * movements less than 1%.\n                 */\n                deviation: 1\n            }\n        });\n        extend(ZigzagIndicator.prototype, {\n            nameComponents: ['deviation'],\n            nameSuffixes: ['%'],\n            nameBase: 'Zig Zag'\n        });\n        SeriesRegistry.registerSeriesType('zigzag', ZigzagIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `Zig Zag` series. If the [type](#series.zigzag.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.zigzag\n         * @since     6.0.0\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/zigzag\n         * @apioption series.zigzag\n         */\n        ''; // adds doclets above to transpiled file\n\n        return ZigzagIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegression/LinearRegressionIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { isArray, extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * Linear regression series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearregression\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Return the slope and intercept of a straight line function.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period.\n             *\n             * @param {Array<number>} yData\n             * List of all y coordinates in a period.\n             *\n             * @return {Highcharts.RegressionLineParametersObject}\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             */\n            getRegressionLineParameters(xData, yData) {\n                // least squares method\n                const yIndex = this.options.params.index, getSingleYValue = function (yValue, yIndex) {\n                    return isArray(yValue) ? yValue[yIndex] : yValue;\n                }, xSum = xData.reduce(function (accX, val) {\n                    return val + accX;\n                }, 0), ySum = yData.reduce(function (accY, val) {\n                    return getSingleYValue(val, yIndex) + accY;\n                }, 0), xMean = xSum / xData.length, yMean = ySum / yData.length;\n                let xError, yError, i, formulaNumerator = 0, formulaDenominator = 0;\n                for (i = 0; i < xData.length; i++) {\n                    xError = xData[i] - xMean;\n                    yError = getSingleYValue(yData[i], yIndex) - yMean;\n                    formulaNumerator += xError * yError;\n                    formulaDenominator += Math.pow(xError, 2);\n                }\n                const slope = formulaDenominator ?\n                    formulaNumerator / formulaDenominator : 0; // don't divide by 0\n                return {\n                    slope: slope,\n                    intercept: yMean - slope * xMean\n                };\n            }\n            /**\n             * Return the y value on a straight line.\n             *\n             * @private\n             *\n             * @param {Highcharts.RegressionLineParametersObject} lineParameters\n             * Object that contains the slope and the intercept of a straight line\n             * function.\n             *\n             * @param {number} endPointX\n             * X coordinate of the point.\n             *\n             * @return {number}\n             * Y value of the point that lies on the line.\n             */\n            getEndPointY(lineParameters, endPointX) {\n                return lineParameters.slope * endPointX + lineParameters.intercept;\n            }\n            /**\n             * Transform the coordinate system so that x values start at 0 and\n             * apply xAxisUnit.\n             *\n             * @private\n             *\n             * @param {Array<number>} xData\n             * List of all x coordinates in a period\n             *\n             * @param {number} xAxisUnit\n             * Option (see the API)\n             *\n             * @return {Array<number>}\n             * Array of transformed x data\n             */\n            transformXData(xData, xAxisUnit) {\n                const xOffset = xData[0];\n                return xData.map(function (xValue) {\n                    return (xValue - xOffset) / xAxisUnit;\n                });\n            }\n            /**\n             * Find the closest distance between points in the base series.\n             * @private\n             * @param {Array<number>} xData list of all x coordinates in the base series\n             * @return {number} - closest distance between points in the base series\n             */\n            findClosestDistance(xData) {\n                let distance, closestDistance, i;\n                for (i = 1; i < xData.length - 1; i++) {\n                    distance = xData[i] - xData[i - 1];\n                    if (distance > 0 &&\n                        (typeof closestDistance === 'undefined' ||\n                            distance < closestDistance)) {\n                        closestDistance = distance;\n                    }\n                }\n                return closestDistance;\n            }\n            // Required to be implemented - starting point for indicator's logic\n            getValues(baseSeries, regressionSeriesParams) {\n                const xData = baseSeries.xData, yData = baseSeries.yData, period = regressionSeriesParams.period, \n                // format required to be returned\n                indicatorData = {\n                    xData: [],\n                    yData: [],\n                    values: []\n                }, xAxisUnit = this.options.params.xAxisUnit ||\n                    this.findClosestDistance(xData);\n                let lineParameters, i, periodStart, periodEnd, endPointX, endPointY, periodXData, periodYData, periodTransformedXData;\n                // Iteration logic: x value of the last point within the period\n                // (end point) is used to represent the y value (regression)\n                // of the entire period.\n                for (i = period - 1; i <= xData.length - 1; i++) {\n                    periodStart = i - period + 1; // adjusted for slice() function\n                    periodEnd = i + 1; // (as above)\n                    endPointX = xData[i];\n                    periodXData = xData.slice(periodStart, periodEnd);\n                    periodYData = yData.slice(periodStart, periodEnd);\n                    periodTransformedXData = this.transformXData(periodXData, xAxisUnit);\n                    lineParameters = this.getRegressionLineParameters(periodTransformedXData, periodYData);\n                    endPointY = this.getEndPointY(lineParameters, periodTransformedXData[periodTransformedXData.length - 1]);\n                    // @todo this is probably not used anywhere\n                    indicatorData.values.push({\n                        regressionLineParameters: lineParameters,\n                        x: endPointX,\n                        y: endPointY\n                    });\n                    indicatorData.xData.push(endPointX);\n                    indicatorData.yData.push(endPointY);\n                }\n                return indicatorData;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression indicator. This series requires `linkedTo` option to be\n         * set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression\n         *         Linear regression indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/regressions\n         * @optionparent plotOptions.linearregression\n         */\n        LinearRegressionIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * Unit (in milliseconds) for the x axis distances used to\n                 * compute the regression line paramters (slope & intercept) for\n                 * every range. In Highcharts Stock the x axis values are always\n                 * represented in milliseconds which may cause that distances\n                 * between points are \"big\" integer numbers.\n                 *\n                 * Highcharts Stock's linear regression algorithm (least squares\n                 * method) will utilize these \"big\" integers for finding the\n                 * slope and the intercept of the regression line for each\n                 * period. In consequence, this value may be a very \"small\"\n                 * decimal number that's hard to interpret by a human.\n                 *\n                 * For instance: `xAxisUnit` equealed to `86400000` ms (1 day)\n                 * forces the algorithm to treat `86400000` as `1` while\n                 * computing the slope and the intercept. This may enchance the\n                 * legiblitity of the indicator's values.\n                 *\n                 * Default value is the closest distance between two data\n                 * points.\n                 *\n                 * In `v9.0.2`, the default value has been changed\n                 * from `undefined` to `null`.\n                 *\n                 * @sample {highstock} stock/plotoptions/linear-regression-xaxisunit\n                 *         xAxisUnit set to 1 minute\n                 *\n                 * @example\n                 * // In Liniear Regression Slope Indicator series `xAxisUnit`is\n                 * // `86400000` (1 day) and period is `3`. There're 3 points in\n                 * // the base series:\n                 *\n                 * data: [\n                 *   [Date.UTC(2020, 0, 1), 1],\n                 *   [Date.UTC(2020, 0, 2), 3],\n                 *   [Date.UTC(2020, 0, 3), 5]\n                 * ]\n                 *\n                 * // This will produce one point in the indicator series that\n                 * // has a `y` value of `2` (slope of the regression line). If\n                 * // we change the `xAxisUnit` to `1` (ms) the value of the\n                 * // indicator's point will be `2.3148148148148148e-8` which is\n                 * // harder to interpert for a human.\n                 *\n                 * @type    {null|number}\n                 * @product highstock\n                 */\n                xAxisUnit: null\n            },\n            tooltip: {\n                valueDecimals: 4\n            }\n        });\n        extend(LinearRegressionIndicator.prototype, {\n            nameBase: 'Linear Regression Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegression', LinearRegressionIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression series. If the\n         * [type](#series.linearregression.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregression\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregression\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionSlopes/LinearRegressionSlopesIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Slope series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionSlope\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionSlopesIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.slope;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression slope indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-slope\n         *         Linear regression slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionslope\n         */\n        LinearRegressionSlopesIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionSlopesIndicator.prototype, {\n            nameBase: 'Linear Regression Slope Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionSlope', LinearRegressionSlopesIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionslope.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionslope\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionslope\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionSlopesIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionIntercept/LinearRegressionInterceptIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Intercept series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionIntercept\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionInterceptIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getEndPointY(lineParameters) {\n                return lineParameters.intercept;\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression intercept indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-intercept\n         *         Linear intercept slope indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionintercept\n         */\n        LinearRegressionInterceptIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions);\n        extend(LinearRegressionInterceptIndicator.prototype, {\n            nameBase: 'Linear Regression Intercept Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionIntercept', LinearRegressionInterceptIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionintercept.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionintercept\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionintercept\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionInterceptIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/LinearRegressionAngle/LinearRegressionAngleIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /**\n         *\n         *  (c) 2010-2024 Kamil Kulig\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { linearRegression: LinearRegressionIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Linear Regression Angle series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.linearRegressionAngle\n         *\n         * @augments Highcharts.Series\n         */\n        class LinearRegressionAngleIndicator extends LinearRegressionIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /**\n             * Convert a slope of a line to angle (in degrees) between\n             * the line and x axis\n             * @private\n             * @param {number} slope of the straight line function\n             * @return {number} angle in degrees\n             */\n            slopeToAngle(slope) {\n                return Math.atan(slope) * (180 / Math.PI); // rad to deg\n            }\n            getEndPointY(lineParameters) {\n                return this.slopeToAngle(lineParameters.slope);\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Linear regression angle indicator. This series requires `linkedTo`\n         * option to be set.\n         *\n         * @sample {highstock} stock/indicators/linear-regression-angle\n         *         Linear intercept angle indicator\n         *\n         * @extends      plotOptions.linearregression\n         * @since        7.0.0\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @optionparent plotOptions.linearregressionangle\n         */\n        LinearRegressionAngleIndicator.defaultOptions = merge(LinearRegressionIndicator.defaultOptions, {\n            tooltip: {\n                pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span>' +\n                    '{series.name}: <b>{point.y}°</b><br/>'\n            }\n        });\n        extend(LinearRegressionAngleIndicator.prototype, {\n            nameBase: 'Linear Regression Angle Indicator'\n        });\n        SeriesRegistry.registerSeriesType('linearRegressionAngle', LinearRegressionAngleIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /**\n         * A linear regression intercept series. If the\n         * [type](#series.linearregressionangle.type) option is not specified, it is\n         * inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.linearregressionangle\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding dataParser,dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/regressions\n         * @apioption series.linearregressionangle\n         */\n        ''; // to include the above in the js output\n\n        return LinearRegressionAngleIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/ABands/ABandsIndicator.js', [_modules['Stock/Indicators/MultipleLinesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (MultipleLinesComposition, SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, extend, merge } = U;\n        /* *\n         *\n         *  Functions\n         *\n         * */\n        /**\n         * @private\n         */\n        function getBaseForBand(low, high, factor) {\n            return (((correctFloat(high - low)) /\n                ((correctFloat(high + low)) / 2)) * 1000) * factor;\n        }\n        /**\n         * @private\n         */\n        function getPointUB(high, base) {\n            return high * (correctFloat(1 + 2 * base));\n        }\n        /**\n         * @private\n         */\n        function getPointLB(low, base) {\n            return low * (correctFloat(1 - 2 * base));\n        }\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The ABands series type\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.abands\n         *\n         * @augments Highcharts.Series\n         */\n        class ABandsIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const period = params.period, factor = params.factor, index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, \n                // Upperbands\n                UB = [], \n                // Lowerbands\n                LB = [], \n                // ABANDS array structure:\n                // 0-date, 1-top line, 2-middle line, 3-bottom line\n                ABANDS = [], low = 2, high = 1, xData = [], yData = [];\n                // middle line, top line and bottom line\n                let ML, TL, BL, date, bandBase, pointSMA, ubSMA, lbSMA, slicedX, slicedY, i;\n                if (yValLen < period) {\n                    return;\n                }\n                for (i = 0; i <= yValLen; i++) {\n                    // Get UB and LB values of every point. This condition\n                    // is necessary, because there is a need to calculate current\n                    // UB nad LB values simultaneously with given period SMA\n                    // in one for loop.\n                    if (i < yValLen) {\n                        bandBase = getBaseForBand(yVal[i][low], yVal[i][high], factor);\n                        UB.push(getPointUB(yVal[i][high], bandBase));\n                        LB.push(getPointLB(yVal[i][low], bandBase));\n                    }\n                    if (i >= period) {\n                        slicedX = xVal.slice(i - period, i);\n                        slicedY = yVal.slice(i - period, i);\n                        ubSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: UB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        lbSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: LB.slice(i - period, i)\n                        }, {\n                            period: period\n                        });\n                        pointSMA = super.getValues.call(this, {\n                            xData: slicedX,\n                            yData: slicedY\n                        }, {\n                            period: period,\n                            index: index\n                        });\n                        date = pointSMA.xData[0];\n                        TL = ubSMA.yData[0];\n                        BL = lbSMA.yData[0];\n                        ML = pointSMA.yData[0];\n                        ABANDS.push([date, TL, ML, BL]);\n                        xData.push(date);\n                        yData.push([TL, ML, BL]);\n                    }\n                }\n                return {\n                    values: ABANDS,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Acceleration bands (ABANDS). This series requires the `linkedTo` option\n         * to be set and should be loaded after the\n         * `stock/indicators/indicators.js`.\n         *\n         * @sample {highstock} stock/indicators/acceleration-bands\n         *         Acceleration Bands\n         *\n         * @extends      plotOptions.sma\n         * @mixes        Highcharts.MultipleLinesMixin\n         * @since        7.0.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, compare, compareBase, joinBy, keys,\n         *               navigatorOptions, pointInterval, pointIntervalUnit,\n         *               pointPlacement, pointRange, pointStart, showInNavigator,\n         *               stacking,\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/acceleration-bands\n         * @optionparent plotOptions.abands\n         */\n        ABandsIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * Option for fill color between lines in Accelleration bands Indicator.\n             *\n             * @sample {highstock} stock/indicators/indicator-area-fill\n             *      Background fill between lines.\n             *\n             * @type {Highcharts.Color}\n             * @since 9.3.2\n             * @apioption plotOptions.abands.fillColor\n             *\n             */\n            params: {\n                period: 20,\n                /**\n                 * The algorithms factor value used to calculate bands.\n                 *\n                 * @product highstock\n                 */\n                factor: 0.001,\n                index: 3\n            },\n            lineWidth: 1,\n            topLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            bottomLine: {\n                styles: {\n                    /**\n                     * Pixel width of the line.\n                     */\n                    lineWidth: 1\n                }\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(ABandsIndicator.prototype, {\n            areaLinesNames: ['top', 'bottom'],\n            linesApiNames: ['topLine', 'bottomLine'],\n            nameBase: 'Acceleration Bands',\n            nameComponents: ['period', 'factor'],\n            pointArrayMap: ['top', 'middle', 'bottom'],\n            pointValKey: 'middle'\n        });\n        MultipleLinesComposition.compose(ABandsIndicator);\n        SeriesRegistry.registerSeriesType('abands', ABandsIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * An Acceleration bands indicator. If the [type](#series.abands.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.abands\n         * @since     7.0.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis, compare, compareBase, dataParser, dataURL,\n         *            joinBy, keys, navigatorOptions, pointInterval,\n         *            pointIntervalUnit, pointPlacement, pointRange, pointStart,\n         *            stacking, showInNavigator,\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/acceleration-bands\n         * @apioption series.abands\n         */\n        ''; // to include the above in jsdoc\n\n        return ABandsIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/TrendLine/TrendLineIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { extend, merge, isArray } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Trend line series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.trendline\n         *\n         * @augments Highcharts.Series\n         */\n        class TrendLineIndicator extends SMAIndicator {\n            constructor() {\n                /* *\n                 *\n                 *  Static Properties\n                 *\n                 * */\n                super(...arguments);\n                this.updateAllPoints = true;\n            }\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            getValues(series, params) {\n                const orgXVal = series.xData, yVal = series.yData, xVal = [], LR = [], xData = [], yData = [], index = params.index;\n                let numerator = 0, denominator = 0, xValSum = 0, yValSum = 0, counter = 0;\n                // Create an array of consecutive xValues, (don't remove duplicates)\n                for (let i = 0; i < orgXVal.length; i++) {\n                    if (i === 0 || orgXVal[i] !== orgXVal[i - 1]) {\n                        counter++;\n                    }\n                    xVal.push(counter);\n                }\n                for (let i = 0; i < xVal.length; i++) {\n                    xValSum += xVal[i];\n                    yValSum += isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                }\n                const meanX = xValSum / xVal.length, meanY = yValSum / yVal.length;\n                for (let i = 0; i < xVal.length; i++) {\n                    const y = isArray(yVal[i]) ? yVal[i][index] : yVal[i];\n                    numerator += (xVal[i] - meanX) * (y - meanY);\n                    denominator += Math.pow(xVal[i] - meanX, 2);\n                }\n                // Calculate linear regression:\n                for (let i = 0; i < xVal.length; i++) {\n                    // Check if the xVal is already used\n                    if (orgXVal[i] === xData[xData.length - 1]) {\n                        continue;\n                    }\n                    const x = orgXVal[i], y = meanY + (numerator / denominator) * (xVal[i] - meanX);\n                    LR.push([x, y]);\n                    xData.push(x);\n                    yData.push(y);\n                }\n                return {\n                    xData: xData,\n                    yData: yData,\n                    values: LR\n                };\n            }\n        }\n        /**\n         * Trendline (linear regression) fits a straight line to the selected data\n         * using a method called the Sum Of Least Squares. This series requires the\n         * `linkedTo` option to be set.\n         *\n         * @sample stock/indicators/trendline\n         *         Trendline indicator\n         *\n         * @extends      plotOptions.sma\n         * @since        7.1.3\n         * @product      highstock\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/trendline\n         * @optionparent plotOptions.trendline\n         */\n        TrendLineIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            /**\n             * @excluding period\n             */\n            params: {\n                period: void 0,\n                /**\n                 * The point index which indicator calculations will base. For\n                 * example using OHLC data, index=2 means the indicator will be\n                 * calculated using Low values.\n                 *\n                 * @default 3\n                 */\n                index: 3\n            }\n        });\n        extend(TrendLineIndicator.prototype, {\n            nameBase: 'Trendline',\n            nameComponents: void 0\n        });\n        SeriesRegistry.registerSeriesType('trendline', TrendLineIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * A `TrendLine` series. If the [type](#series.trendline.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.trendline\n         * @since     7.1.3\n         * @product   highstock\n         * @excluding dataParser, dataURL\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/trendline\n         * @apioption series.trendline\n         */\n        ''; // to include the above in the js output\n\n        return TrendLineIndicator;\n    });\n    _registerModule(_modules, 'Stock/Indicators/DisparityIndex/DisparityIndexIndicator.js', [_modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js']], function (SeriesRegistry, U) {\n        /* *\n         *  (c) 2010-2024 Rafal Sebestjanski\n         *\n         *  Disparity Index technical indicator for Highcharts Stock\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        const { sma: SMAIndicator } = SeriesRegistry.seriesTypes;\n        const { correctFloat, defined, extend, isArray, merge } = U;\n        /* *\n         *\n         *  Class\n         *\n         * */\n        /**\n         * The Disparity Index series type.\n         *\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.disparityindex\n         *\n         * @augments Highcharts.Series\n         */\n        class DisparityIndexIndicator extends SMAIndicator {\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            init() {\n                const args = arguments, ctx = this, // Disparity Index indicator\n                params = args[1].params, // options.params\n                averageType = params && params.average ? params.average : void 0;\n                ctx.averageIndicator = SeriesRegistry\n                    .seriesTypes[averageType] || SMAIndicator;\n                ctx.averageIndicator.prototype.init.apply(ctx, args);\n            }\n            calculateDisparityIndex(curPrice, periodAverage) {\n                return correctFloat(curPrice - periodAverage) / periodAverage * 100;\n            }\n            getValues(series, params) {\n                const index = params.index, xVal = series.xData, yVal = series.yData, yValLen = yVal ? yVal.length : 0, disparityIndexPoint = [], xData = [], yData = [], \n                // \"as any\" because getValues doesn't exist on typeof Series\n                averageIndicator = this.averageIndicator, isOHLC = isArray(yVal[0]), \n                // Get the average indicator's values\n                values = averageIndicator.prototype.getValues(series, params), yValues = values.yData, start = xVal.indexOf(values.xData[0]);\n                // Check period, if bigger than points length, skip\n                if (!yValues || yValues.length === 0 ||\n                    !defined(index) ||\n                    yVal.length <= start) {\n                    return;\n                }\n                // Get the Disparity Index indicator's values\n                for (let i = start; i < yValLen; i++) {\n                    const disparityIndexValue = this.calculateDisparityIndex(isOHLC ? yVal[i][index] : yVal[i], yValues[i - start]);\n                    disparityIndexPoint.push([\n                        xVal[i],\n                        disparityIndexValue\n                    ]);\n                    xData.push(xVal[i]);\n                    yData.push(disparityIndexValue);\n                }\n                return {\n                    values: disparityIndexPoint,\n                    xData: xData,\n                    yData: yData\n                };\n            }\n        }\n        /* *\n         *\n         *  Static Properties\n         *\n         * */\n        /**\n         * Disparity Index.\n         * This series requires the `linkedTo` option to be set and should\n         * be loaded after the `stock/indicators/indicators.js` file.\n         *\n         * @sample stock/indicators/disparity-index\n         *         Disparity Index indicator\n         *\n         * @extends      plotOptions.sma\n         * @since 9.1.0\n         * @product      highstock\n         * @excluding    allAreas, colorAxis, joinBy, keys, navigatorOptions,\n         *               pointInterval, pointIntervalUnit, pointPlacement,\n         *               pointRange, pointStart, showInNavigator, stacking\n         * @requires     stock/indicators/indicators\n         * @requires     stock/indicators/disparity-index\n         * @optionparent plotOptions.disparityindex\n         */\n        DisparityIndexIndicator.defaultOptions = merge(SMAIndicator.defaultOptions, {\n            params: {\n                /**\n                 * The average used to calculate the Disparity Index indicator.\n                 * By default it uses SMA, with EMA as an option. To use other\n                 * averages, e.g. TEMA, the `stock/indicators/tema.js` file needs to\n                 * be loaded.\n                 *\n                 * If value is different than `ema`, `dema`, `tema` or `wma`,\n                 * then sma is used.\n                 */\n                average: 'sma',\n                index: 3\n            },\n            marker: {\n                enabled: false\n            },\n            dataGrouping: {\n                approximation: 'averages'\n            }\n        });\n        extend(DisparityIndexIndicator.prototype, {\n            nameBase: 'Disparity Index',\n            nameComponents: ['period', 'average']\n        });\n        SeriesRegistry.registerSeriesType('disparityindex', DisparityIndexIndicator);\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n        /* *\n         *\n         *  API Options\n         *\n         * */\n        /**\n         * The Disparity Index indicator series.\n         * If the [type](#series.disparityindex.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.disparityindex\n         * @since 9.1.0\n         * @product   highstock\n         * @excluding allAreas, colorAxis,  dataParser, dataURL, joinBy, keys,\n         *            navigatorOptions, pointInterval, pointIntervalUnit,\n         *            pointPlacement, pointRange, pointStart, showInNavigator, stacking\n         * @requires  stock/indicators/indicators\n         * @requires  stock/indicators/disparity-index\n         * @apioption series.disparityindex\n         */\n        ''; // to include the above in the js output\n\n        return DisparityIndexIndicator;\n    });\n    _registerModule(_modules, 'masters/indicators/indicators-all.src.js', [], function () {\n\n\n    });\n}));"],"names":["factory","module","exports","define","amd","Highcharts","undefined","_modules","_registerModule","obj","path","args","fn","hasOwnProperty","apply","CustomEvent","window","dispatchEvent","detail","Chart","SeriesRegistry","U","line","LineSeries","seriesTypes","addEvent","fireEvent","error","extend","isArray","merge","pick","splat","SMAIndicator","destroy","dataEventsToUnbind","forEach","unbinder","arguments","getName","params","name","nameComponents","component","index","push","options","nameSuffixes","nameBase","type","toUpperCase","join","getValues","series","period","xVal","xData","yVal","yData","yValLen","length","SMA","i","range","SMAPoint","sum","values","init","chart","indicator","call","linkedSeriesUnbiner","isUpdating","hasEvents","linkedParent","linkedTo","recalculateValues","calculateOn","xAxis","processedYData","order","eventsToUnbind","croppedDataValues","oldData","points","oldDataLength","overwriteData","oldFirstPointIndex","oldLastPointIndex","croppedData","min","max","processedData","hasGroupedData","visible","cropped","cropData","concat","indexOf","x","shift","updateData","updateAllPoints","data","processedXData","isDirty","redraw","isDirtyData","linkedSeries","processData","compareToMain","dataModify","compareValue","defaultOptions","tooltip","valueDecimals","prototype","hasDerivedData","useCommonDataGrouping","registerSeriesType","sma","correctFloat","EMAIndicator","accumulatePeriodPoints","calculateEma","EMApercent","calEMA","yValue","y","EMA","EMAPoint","ADIndicator","populateAverage","yValVolume","_period","high","low","close","volume","adX","len","ADPoint","volumeSeriesID","volumeSeries","get","AD","H","noop","column","columnProto","AOIndicator","drawGraph","userColor","userOptions","color","positiveColor","greaterBarColor","negativeColor","lowerBarColor","firstPoint","AO","awesome","shortLastIndex","longLastIndex","price","j","longSum","shortSum","longPeriod","shortSMA","threshold","groupPadding","pointPadding","crisp","states","hover","halo","size","markerAttribs","getColumnMetrics","crispCol","translate","drawPoints","MultipleLinesComposition","smaProto","defined","linesApiNames","pointArrayMap","areaLinesNames","getLineName","propertyName","charAt","slice","getTranslatedLinesNames","excludedValue","translatedLines","indicatorDrawGraph","pointValKey","mainLinePoints","mainLineOptions","mainLinePath","graph","gappedExtend","gapSize","secondaryLines","secondaryLinesNames","pointsLength","point","plotLine","plotX","plotY","isNull","fillColor","secondLinePoints","firstLinePoints","originalColor","nextPoints","area","fillGraph","lineName","styles","indicatorGetGraphPath","areaPath","higherAreaPath","getGraphPath","indicatorToYData","pointColl","indicatorTranslate","LinesNames","value","modifyValue","yAxis","toPixels","compose","IndicatorClass","proto","toYData","getExtremeIndexInArray","arr","extreme","extremeValue","valueIndex","AroonIndicator","aroonUp","aroonDown","xLow","slicedY","AR","map","elem","marker","enabled","pointFormat","lineWidth","lineColor","dataGrouping","approximation","aroon","AroonOscillatorIndicator","oscillator","ARO","getTR","currentPoint","prevPoint","HL","pointY","HCp","Math","abs","prevY","LCp","ATRIndicator","xValue","ATR","prevATR","TR","accumulateAverage","BBIndicator","topLine","bottomLine","ML","TL","BL","date","slicedX","stdDev","standardDeviation","BB","isOHLC","getStandardDeviation","mean","arrLen","variance","sqrt","CCIIndicator","TP","CCI","CCIPoint","p","periodTP","smaTP","TPtemp","meanDev","sumArray","array","reduce","prev","cur","meanDeviation","CMFIndicator","constructor","isValid","isSeriesOHLC","isLengthValid","serie","getMoneyFlow","seriesYData","volumeSeriesYData","moneyFlowVolume","moneyFlowXData","moneyFlowYData","nullIndex","sumVolume","sumMoneyFlowVolume","getMoneyFlowVolume","ohlc","h","c","l","DMIIndicator","calculateDM","isPositiveDM","currentHigh","currentLow","previousHigh","previousLow","calculateDI","smoothedDM","tr","calculateDX","plusDI","minusDI","smoothValues","accumulatedValues","currentValue","DMI","prevSmoothedPlusDM","prevSmoothedMinusDM","prevSmoothedTR","smoothedPlusDM","smoothedMinusDM","smoothedTR","plusDM","minusDM","DX","plusDILine","minusDILine","parallelArrays","accumulatePoints","subtract","DPOIndicator","floor","DPO","periodIndex","rangeIndex","ema","ChaikinIndicator","periods","CHA","ADL","SPE","LPE","periodsOffset","isNumber","CMOIndicator","CMO","firstAddedSum","sumOfHigherValues","sumOfLowerValues","DEMAIndicator","getEMA","prevEMA","EMAvalues","doubledPeriod","DEMA","xDataDema","yDataDema","EMAlevel2","prevEMAlevel2","DEMAPoint","TEMAIndicator","getTemaPoint","tripledPeriod","EMAlevels","TEMAPoint","level1","level2","level3","tema","xDataTema","yDataTema","emaValues","emaLevel2Values","emaLevels","temaPoint","prevLevel3","TRIXIndicator","APOIndicator","APO","ApproximationRegistry","Color","parse","getClosestDistance","objectEach","highlowLevel","res","Infinity","drawSenkouSpan","opt","senkouSpan","gap","IKHIndicator","graphCollection","tenkanLine","kijunLine","chikouLine","senkouSpanA","fill","setOpacity","senkouSpanB","tenkanSen","kijunSen","chikouSpan","key","pointValue","tooltipPos","mainColor","pointArrayMapLength","allIchimokuPoints","ikhMap","intersectIndexColl","senkouSpanOptions","lineIndex","position","startIntersect","endIntersect","sectionPoints","sectionNextPoints","pointsPlotYSum","nextPointsPlotYSum","senkouSpanTempColor","concatArrIndex","k","intersect","checkLineIntersection","a1","a2","b1","b2","saX","saY","sbX","sbY","sabX","sabY","u","t","intersectPointObj","intersectPoint","splice","graphName","unshift","areaName","graphsenkouSpan","spanA","spanAarr","pointTS","pointKS","pointSSB","TS","KS","CS","SSA","SSB","periodTenkan","periodSenkouSpanB","closestPointRange","s","IKH","dateStart","isEmptyRange","ret","average","KeltnerChannelsIndicator","pointEMA","pointATR","periodATR","multiplierATR","KC","seriesEMA","seriesATR","atr","KlingerIndicator","calculateTrend","isUpward","isValidData","firstYVal","every","slowAvgPeriod","getCM","previousCM","DM","trend","previousTrend","prevoiusDM","getDM","getVolumeForce","volumeForce","CM","previousDM","getSMA","Klinger","calcSingal","KO","fastEMA","slowEMA","previousFastEMA","previousSlowEMA","signal","SMAFast","fastAvgPeriod","SMASlow","fastEMApercent","slowEMApercent","signalPeriod","curr","signalLine","ColumnSeries","MACDIndicator","colorIndex","getCyclic","colors","macdLine","macdZones","zones","startIndex","signalZones","MACD","plotNames","graphmacd","graphsignal","histogramZones","otherSignals","plotMACD","plotSignal","applyZones","hide","indexToShift","shortPeriod","xMACD","yMACD","shortEMA","longEMA","minPointLength","calculateTypicalPrice","MFIIndicator","decimals","MFI","positiveMoneyFlow","negativeMoneyFlow","newTypicalPrice","oldTypicalPrice","rawMoneyFlow","negativeMoneyFlowSum","MFIPoint","isUp","typicalPrice","parseFloat","a","positiveMoneyFlowSum","toFixed","mmY","mmX","MomentumIndicator","MMPoint","MM","NATRIndicator","atrData","atrLength","valueSuffix","OBVIndicator","OBV","hasOHLC","OBVPoint","previousOBV","curentOBV","previousClose","curentClose","pointClass","destroyExtraLabels","functionName","props","prop","element","destroyElements","PivotPointsPoint","PivotPointsIndicator","P","plotEndPoint","endPoint","allPivotPoints","pivotPoints","drawDataLabels","currentLabel","pointMapping","dataLabels","pivotLine","dataLabel","endTimestamp","slicedXLen","lastPP","avg","placement","algorithm","PP","getPivotAndHLC","pivot","standardPlacement","diff","camarillaPlacement","fibonacciPlacement","enableMouseTracking","format","PPOIndicator","PPO","getArrayExtremes","minIndex","maxIndex","target","Number","MAX_VALUE","AU","Palettes","PCIndicator","extremes","PC","PriceEnvelopesIndicator","topPercent","topBand","botPercent","bottomBand","PE","n","PSARIndicator","maxAccelerationFactor","increment","initialAccelerationFactor","PSARArr","accelerationFactor","direction","extremePoint","EPMinusPSAR","accelerationFactorMultiply","newDirection","previousDirection","prevLow","prevPrevLow","prevHigh","prevPrevHigh","PSAR","newExtremePoint","ind","EP","previousExtremePoint","pdir","sDir","pACCMulti","pEP","dir","pDir","pAcc","eP","lineWidthPlus","ROCIndicator","ROC","ROCPoint","nDaysAgoY","rocY","RSIIndicator","RSI","gain","loss","RSIPoint","change","avgGain","avgLoss","StochasticIndicator","smoothedLine","periodK","periodD","SO","LL","K","D","constantValues","isNaN","CL","stochastic","SlowStochasticIndicator","fastValues","slowValues","fastYData","smoothedValues","xDataLen","StockChart","createPointObj","mainSeries","SupertrendIndicator","parentOptions","cropThreshold","indicOptions","indicPoints","indicPath","tempOffset","offset","groupedPoitns","top","bottom","supertrendLineOptions","fallingTrendColor","dashStyle","risingTrendColor","changeTrendLine","nextPoint","mainPoint","nextMainPoint","prevMainPoint","prevPrevMainPoint","pointColor","newPoint","newNextPoint","indicPointsLen","multiplier","st","finalUp","finalDown","basicUp","basicDown","supertrend","prevFinalUp","prevFinalDown","prevST","negativeGraphic","VBPPoint","A","animObject","arrayMax","arrayMin","VBPIndicator","baseSeries","addCustomEvents","toEmptyIndicator","setData","zoneStarts","zoneLinesSVG","animate","inverted","group","attr","left","translateY","translateX","animation","step","val","fx","scaleX","pos","volumeDivision","posNegVolume","initVol","signOrder","pointLength","posWidths","negWidths","pointWidth","priceZone","wholeVol","graphic","shapeArgs","width","priceZones","wholeVolumeData","positiveVolumeData","negativeVolumeData","yAxisMin","zoneLinesOptions","zoneLines","yBarOffset","maxVolume","primalBarWidth","barHeight","barHeightP","oldBarHeight","barWidth","chartPlotTop","barX","barY","indicatorPoints","volumeDataArray","plotWidth","plotTop","rangeStep","start","reversed","volumeNeg","volumePos","volumeAll","drawZones","getExtremes","prevCompare","compare","prevCumulative","cumulative","xValues","yValues","ranges","VBP","errorMessage","specifyZones","zone","end","rangeExtremes","arrayExtremesOHLC","dataLength","lowRange","highRange","zoneStartsLength","volumePerZone","previousValue","startFlag","endFlag","volumeXData","volumeYData","lastZoneIndex","baseSeriesLength","volumeSeriesLength","zonesValues","zonesStyles","renderer","rightLinePos","verticalOffset","zoneLinesPath","verticalLinePos","crispLine","d","zIndex","add","animationLimit","allowOverlap","padding","style","fontSize","verticalAlign","VWAPIndicator","calculateVWAPValues","commonLength","cPrice","cVolume","volumeValues","volumeLength","cumulativePrice","cumulativeVolume","VWAP","WilliamsRIndicator","R","HH","WR","pLen","wmaY","wmaX","WMAIndicator","wma","wmaPoint","ZigzagIndicator","lowIndex","highIndex","deviation","deviations","zigzag","zigzagPoint","directionUp","exitLoop","yIndex","firstZigzagLow","firstZigzagHigh","zigzagLen","LinearRegressionIndicator","getRegressionLineParameters","getSingleYValue","xSum","accX","ySum","accY","xMean","yMean","xError","formulaNumerator","formulaDenominator","pow","slope","intercept","getEndPointY","lineParameters","endPointX","transformXData","xAxisUnit","xOffset","findClosestDistance","distance","closestDistance","regressionSeriesParams","periodStart","periodEnd","endPointY","periodXData","periodYData","periodTransformedXData","indicatorData","regressionLineParameters","linearRegression","LinearRegressionSlopesIndicator","LinearRegressionInterceptIndicator","LinearRegressionAngleIndicator","slopeToAngle","atan","PI","ABandsIndicator","bandBase","pointSMA","ubSMA","lbSMA","factor","UB","LB","ABANDS","TrendLineIndicator","orgXVal","LR","numerator","denominator","xValSum","yValSum","counter","meanX","meanY","DisparityIndexIndicator","averageType","ctx","averageIndicator","calculateDisparityIndex","curPrice","periodAverage","disparityIndexPoint","disparityIndexValue"],"mappings":"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"}